{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21","program":"/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=e87338e29f4d9d96","-C","extra-filename=-e87338e29f4d9d96","--out-dir","/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","-L","dependency=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","--extern","futures_core=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libfutures_core-ca7084b85b3c71ac.rmeta","--extern","futures_io=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libfutures_io-21f43eb7eab2ad96.rmeta","--extern","futures_task=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libfutures_task-71c5251dd7f2a24b.rmeta","--extern","memchr=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libmemchr-f3e7c7fa089d0a73.rmeta","--extern","pin_project_lite=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libpin_project_lite-a998cf3a0c0f2ffc.rmeta","--extern","pin_utils=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libpin_utils-d2805158ca242e05.rmeta","--extern","slab=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libslab-c7f5a56a89e90381.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libfutures_util-e87338e29f4d9d96.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[8277464510115126315,0]},"crate_root":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src","external_crates":[{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[1591406731620905623,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[12498854107001860550,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[4726666589349380931,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[10864849255587560100,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","num":24,"id":{"name":"slab","disambiguator":[13380692357016131026,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","num":25,"id":{"name":"futures_io","disambiguator":[10036121706793320790,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","num":26,"id":{"name":"memchr","disambiguator":[7480610296841804772,0]}}],"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12915},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12107,"byte_end":12116,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12118,"byte_end":12132,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9393},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18054,"byte_end":18065,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":8896},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8805},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9239},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9054},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8994},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9104},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9299},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9166},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9347},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":8944},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9393},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12617,"byte_end":12628,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12828,"byte_end":12834,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":348},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12836,"byte_end":12846,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9734},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9881},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10064},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10003},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9429},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10186},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10125},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10248},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9942},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9808},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9562},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":9683},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10321},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":812},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10379},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":858},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10385},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10391},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":957},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10404},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10417},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1039},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1034},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1098},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10456},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1140},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10495},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1199},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10597},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10642},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10699},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10768},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13874,"byte_end":13882,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13884,"byte_end":13891,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1351},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10849},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14043,"byte_end":14053,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10857},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14055,"byte_end":14064,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1460},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10933},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":10978},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11035},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11104},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1558},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14297,"byte_end":14309,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1552},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14311,"byte_end":14321,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11185},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1654},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14486,"byte_end":14495,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11193},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14497,"byte_end":14505,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":11199},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15921},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14716,"byte_end":14727,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15917},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14729,"byte_end":14746,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15874},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14748,"byte_end":14757,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15932},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":15933},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":14849,"byte_end":14858,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":2,"index":12915},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147280,"byte_end":147289,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147291,"byte_end":147305,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147339,"byte_end":147350,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147352,"byte_end":147358,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147360,"byte_end":147369,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12911},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":156063,"byte_end":156069,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":12959},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":156246,"byte_end":156257,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":13410},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158436,"byte_end":158447,"line_start":243,"line_end":243,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1863}},{"kind":"Use","ref_id":{"krate":0,"index":11216},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147485,"byte_end":147490,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11265},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147492,"byte_end":147499,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11376},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147501,"byte_end":147507,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11453},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147509,"byte_end":147514,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11493},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147516,"byte_end":147525,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11537},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147527,"byte_end":147533,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11602},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147535,"byte_end":147544,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12191},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147546,"byte_end":147553,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11718},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147555,"byte_end":147562,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11771},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147564,"byte_end":147568,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11962},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147570,"byte_end":147577,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12019},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147583,"byte_end":147587,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12072},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147589,"byte_end":147596,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12138},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147598,"byte_end":147601,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12270},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147603,"byte_end":147607,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12412},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147609,"byte_end":147615,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12461},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147617,"byte_end":147625,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12330},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147627,"byte_end":147631,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12371},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147633,"byte_end":147640,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12286},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147642,"byte_end":147650,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13007},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147652,"byte_end":147656,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12278},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147658,"byte_end":147672,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12510},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147678,"byte_end":147682,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12554},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147684,"byte_end":147693,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":3862},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147695,"byte_end":147704,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12063},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147706,"byte_end":147718,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12623},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147720,"byte_end":147724,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12736},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147726,"byte_end":147735,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12667},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147737,"byte_end":147746,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12793},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147748,"byte_end":147752,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":11314},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147754,"byte_end":147759,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12854},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147761,"byte_end":147764,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13410},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147816,"byte_end":147827,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12911},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147878,"byte_end":147884,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":12959},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147935,"byte_end":147946,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13076},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148138,"byte_end":148153,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13121},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148155,"byte_end":148163,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13349},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148165,"byte_end":148182,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14775},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":326926,"byte_end":326939,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":4071}},{"kind":"Use","ref_id":{"krate":0,"index":4795},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148431,"byte_end":148441,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13454},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148443,"byte_end":148450,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13518},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148452,"byte_end":148459,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13656},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148461,"byte_end":148471,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13587},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148473,"byte_end":148482,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13722},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148484,"byte_end":148494,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13834},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148496,"byte_end":148502,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13765},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148504,"byte_end":148509,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13900},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148511,"byte_end":148517,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14196},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148523,"byte_end":148533,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14245},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148535,"byte_end":148544,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14026},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148546,"byte_end":148555,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14091},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148557,"byte_end":148569,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14152},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148571,"byte_end":148581,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14354},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148583,"byte_end":148590,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13969},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148592,"byte_end":148602,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":13961},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148604,"byte_end":148611,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14480},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148617,"byte_end":148629,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5170},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148631,"byte_end":148643,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14549},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148645,"byte_end":148657,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14423},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148659,"byte_end":148668,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14775},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148793,"byte_end":148806,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14618},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148897,"byte_end":148915,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14666},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148917,"byte_end":148928,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14714},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":148930,"byte_end":148950,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14285},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149007,"byte_end":149016,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14333},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149018,"byte_end":149032,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14334},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149018,"byte_end":149032,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5327},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149089,"byte_end":149093,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14794},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149095,"byte_end":149099,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5362},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149138,"byte_end":149144,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14803},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149146,"byte_end":149152,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5415},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149201,"byte_end":149212,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14812},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149214,"byte_end":149224,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5449},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149261,"byte_end":149266,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14821},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149268,"byte_end":149273,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5501},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149308,"byte_end":149312,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14827},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149314,"byte_end":149318,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5545},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149359,"byte_end":149366,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14863},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149368,"byte_end":149375,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5595},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149416,"byte_end":149423,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5587},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149425,"byte_end":149431,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5636},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149486,"byte_end":149500,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14869},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149502,"byte_end":149515,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5679},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149554,"byte_end":149560,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14908},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149562,"byte_end":149568,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5745},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149635,"byte_end":149655,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14953},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149657,"byte_end":149665,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":14972},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149667,"byte_end":149685,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5827},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149724,"byte_end":149730,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15041},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149732,"byte_end":149738,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":5927},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149916,"byte_end":149930,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15173},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449762,"byte_end":449770,"line_start":25,"line_end":25,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":15164},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449772,"byte_end":449776,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":15165},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449772,"byte_end":449776,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":15144},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449778,"byte_end":449785,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":15145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449778,"byte_end":449785,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":15134},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449787,"byte_end":449797,"line_start":25,"line_end":25,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":15153},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449799,"byte_end":449809,"line_start":25,"line_end":25,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":5967}},{"kind":"Use","ref_id":{"krate":0,"index":6285},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150130,"byte_end":150146,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":6445},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150333,"byte_end":150343,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15180},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150345,"byte_end":150354,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15921},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150522,"byte_end":150533,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15917},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150535,"byte_end":150552,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15874},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150554,"byte_end":150563,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15932},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150565,"byte_end":150572,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":15933},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150565,"byte_end":150572,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":0,"index":6516},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150655,"byte_end":150664,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1845}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3862},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5170},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":13217},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498441,"byte_end":498448,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":2,"index":47838},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498450,"byte_end":498454,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":2,"index":47874},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498456,"byte_end":498464,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":2,"index":47883},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498466,"byte_end":498480,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":2,"index":13227},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498482,"byte_end":498487,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498514,"byte_end":498523,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498525,"byte_end":498539,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498541,"byte_end":498551,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498553,"byte_end":498558,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498560,"byte_end":498570,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498572,"byte_end":498587,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498613,"byte_end":498623,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498647,"byte_end":498661,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":94},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498747,"byte_end":498754,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":122},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498840,"byte_end":498845,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498932,"byte_end":498941,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":22,"index":407},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498943,"byte_end":498951,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":499030,"byte_end":499041,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":0,"index":6639},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":499077,"byte_end":499090,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":0,"index":6636},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":499092,"byte_end":499100,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6550}},{"kind":"Use","ref_id":{"krate":1,"index":3816},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507227,"byte_end":507232,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":1,"index":10652},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507234,"byte_end":507243,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":1,"index":10771},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507245,"byte_end":507252,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":1,"index":4420},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507254,"byte_end":507264,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":1,"index":3814},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507266,"byte_end":507272,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":1,"index":10780},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507274,"byte_end":507282,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":25,"index":49},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507307,"byte_end":507319,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":25,"index":39},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507321,"byte_end":507330,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":25,"index":47},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507332,"byte_end":507341,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":25,"index":42},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507343,"byte_end":507353,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15238},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507780,"byte_end":507790,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15271},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507836,"byte_end":507845,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15324},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507847,"byte_end":507859,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15334},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507905,"byte_end":507914,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15383},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":507961,"byte_end":507971,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15419},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508006,"byte_end":508011,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15468},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508046,"byte_end":508051,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7152},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508085,"byte_end":508089,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15476},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508091,"byte_end":508095,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7197},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508138,"byte_end":508146,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15530},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508148,"byte_end":508155,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15592},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508193,"byte_end":508199,"line_start":70,"line_end":70,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7301},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508235,"byte_end":508240,"line_start":73,"line_end":73,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7299},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508242,"byte_end":508247,"line_start":73,"line_end":73,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15620},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508289,"byte_end":508296,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15628},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508331,"byte_end":508336,"line_start":79,"line_end":79,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15636},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508568,"byte_end":508573,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15684},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508606,"byte_end":508610,"line_start":92,"line_end":92,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15693},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508661,"byte_end":508673,"line_start":95,"line_end":95,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15702},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508718,"byte_end":508727,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15711},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508770,"byte_end":508778,"line_start":101,"line_end":101,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15722},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508825,"byte_end":508834,"line_start":104,"line_end":104,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15732},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508887,"byte_end":508899,"line_start":107,"line_end":107,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15743},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508944,"byte_end":508953,"line_start":110,"line_end":110,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7751},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508991,"byte_end":508997,"line_start":113,"line_end":113,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7749},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":508999,"byte_end":509005,"line_start":113,"line_end":113,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15754},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509039,"byte_end":509043,"line_start":116,"line_end":116,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7827},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509077,"byte_end":509081,"line_start":119,"line_end":119,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7825},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509083,"byte_end":509087,"line_start":119,"line_end":119,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15763},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509124,"byte_end":509132,"line_start":122,"line_end":122,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7909},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509134,"byte_end":509146,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":7910},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509134,"byte_end":509146,"line_start":122,"line_end":122,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15769},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509148,"byte_end":509157,"line_start":122,"line_end":122,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15775},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509191,"byte_end":509195,"line_start":125,"line_end":125,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15819},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509232,"byte_end":509238,"line_start":128,"line_end":128,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15826},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509273,"byte_end":509278,"line_start":131,"line_end":131,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15835},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509331,"byte_end":509344,"line_start":134,"line_end":134,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":0,"index":15844},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509387,"byte_end":509395,"line_start":137,"line_end":137,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":6651}},{"kind":"Use","ref_id":{"krate":25,"index":49},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8150},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":39},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8117},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":47},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":42},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8134},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8323},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612595,"byte_end":612611,"line_start":11,"line_end":11,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":8189}},{"kind":"Use","ref_id":{"krate":0,"index":8244},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612613,"byte_end":612618,"line_start":11,"line_end":11,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":8189}},{"kind":"Use","ref_id":{"krate":0,"index":8300},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612620,"byte_end":612630,"line_start":11,"line_end":11,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":8189}},{"kind":"Use","ref_id":{"krate":0,"index":8281},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612632,"byte_end":612647,"line_start":11,"line_end":11,"column_start":60,"column_end":75},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":8189}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":6537},{"krate":0,"index":6538},{"krate":0,"index":6541},{"krate":0,"index":6544},{"krate":0,"index":6547},{"krate":0,"index":6550},{"krate":0,"index":6649},{"krate":0,"index":6651},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8168},{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":8177},{"krate":0,"index":8180},{"krate":0,"index":8183},{"krate":0,"index":8186},{"krate":0,"index":8189},{"krate":0,"index":8470},{"krate":0,"index":8532},{"krate":0,"index":8746}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       single_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1576},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1829}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":8761},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":8758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":8763},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":8758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8765},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":8758},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8758},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":8761},{"krate":0,"index":8763},{"krate":0,"index":8765}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8805},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8807}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":8844},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8847},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":8841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8841},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":8844},{"krate":0,"index":8847}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13920273,"byte_end":13920282,"line_start":678,"line_end":678,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8896},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":8898}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8944},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":8946}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8994},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8997}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9054},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9056}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9104},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":9107}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9166},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":9170}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9239},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9242}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9299},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":9301}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9347},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":9349}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9393},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":44401,"byte_end":44412,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9395}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45415,"byte_end":45421,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45272,"byte_end":45335,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45336,"byte_end":45403,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45795,"byte_end":45805,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45706,"byte_end":45783,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47907,"byte_end":47911,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47638,"byte_end":47712,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47717,"byte_end":47790,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47795,"byte_end":47863,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47868,"byte_end":47895,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48406,"byte_end":48415,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"pub fn downgrade(&Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48263,"byte_end":48316,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48321,"byte_end":48324,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48329,"byte_end":48394,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49009,"byte_end":49021,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"pub fn strong_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48597,"byte_end":48655,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48660,"byte_end":48663,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48668,"byte_end":48733,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48738,"byte_end":48741,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48746,"byte_end":48758,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48763,"byte_end":48766,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48771,"byte_end":48864,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48869,"byte_end":48963,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":48968,"byte_end":48997,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49529,"byte_end":49539,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"pub fn weak_count(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49121,"byte_end":49177,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49182,"byte_end":49185,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49190,"byte_end":49255,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49260,"byte_end":49263,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49268,"byte_end":49280,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49285,"byte_end":49288,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49293,"byte_end":49386,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49391,"byte_end":49483,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49488,"byte_end":49517,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55989,"byte_end":55996,"line_start":368,"line_end":368,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"pub fn upgrade(&Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55799,"byte_end":55861,"line_start":364,"line_end":364,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55866,"byte_end":55869,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55874,"byte_end":55954,"line_start":366,"line_end":366,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55959,"byte_end":55977,"line_start":367,"line_end":367,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29010,"byte_end":29022,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27654,"byte_end":27708,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27713,"byte_end":27716,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27721,"byte_end":27796,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27801,"byte_end":27875,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27880,"byte_end":27954,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":27959,"byte_end":28010,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28015,"byte_end":28018,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28023,"byte_end":28098,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28103,"byte_end":28173,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28178,"byte_end":28245,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28250,"byte_end":28325,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28330,"byte_end":28402,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28407,"byte_end":28410,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28415,"byte_end":28479,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28484,"byte_end":28541,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28546,"byte_end":28549,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28554,"byte_end":28568,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28573,"byte_end":28576,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28581,"byte_end":28588,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28593,"byte_end":28634,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28639,"byte_end":28689,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28694,"byte_end":28697,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28702,"byte_end":28736,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28741,"byte_end":28790,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28795,"byte_end":28798,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28803,"byte_end":28852,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28857,"byte_end":28881,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28886,"byte_end":28893,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28898,"byte_end":28948,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28953,"byte_end":28962,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28967,"byte_end":28974,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":28979,"byte_end":29002,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30774,"byte_end":30780,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29252,"byte_end":29327,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29332,"byte_end":29355,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29360,"byte_end":29363,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29368,"byte_end":29442,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29447,"byte_end":29520,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29525,"byte_end":29537,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29542,"byte_end":29545,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29550,"byte_end":29614,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29619,"byte_end":29676,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29681,"byte_end":29684,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29689,"byte_end":29703,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29708,"byte_end":29711,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29716,"byte_end":29723,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29728,"byte_end":29769,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29774,"byte_end":29809,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29814,"byte_end":29817,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29822,"byte_end":29851,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29856,"byte_end":29890,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29895,"byte_end":29929,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29934,"byte_end":29937,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29942,"byte_end":29975,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":29980,"byte_end":30013,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30018,"byte_end":30027,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30032,"byte_end":30039,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30044,"byte_end":30047,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30052,"byte_end":30059,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30064,"byte_end":30133,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30138,"byte_end":30213,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30218,"byte_end":30249,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30254,"byte_end":30257,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30262,"byte_end":30303,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30308,"byte_end":30343,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30348,"byte_end":30384,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30389,"byte_end":30409,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30414,"byte_end":30417,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30422,"byte_end":30451,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30456,"byte_end":30490,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30495,"byte_end":30529,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30534,"byte_end":30579,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30584,"byte_end":30625,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30630,"byte_end":30637,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30642,"byte_end":30675,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30680,"byte_end":30712,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30717,"byte_end":30726,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30731,"byte_end":30738,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":30743,"byte_end":30766,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":31942,"byte_end":31947,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":31713,"byte_end":31754,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":31759,"byte_end":31762,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":31767,"byte_end":31842,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":31847,"byte_end":31904,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":31909,"byte_end":31934,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32407,"byte_end":32418,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32106,"byte_end":32147,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32152,"byte_end":32155,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32160,"byte_end":32219,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32312,"byte_end":32369,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32374,"byte_end":32399,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9429},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78140,"byte_end":78150,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":9431}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":9468},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79124,"byte_end":79129,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9470},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79158,"byte_end":79164,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9472},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79193,"byte_end":79198,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9465},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79091,"byte_end":79101,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9468},{"krate":0,"index":9470},{"krate":0,"index":9472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9515},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84067,"byte_end":84072,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9517},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84101,"byte_end":84107,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9519},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84136,"byte_end":84141,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9512},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84031,"byte_end":84044,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First {\n        f: Fut1,\n    },\n    Second {\n        f: Fut2,\n    },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9515},{"krate":0,"index":9517},{"krate":0,"index":9519}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9562},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":56975,"byte_end":56985,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9565}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9623},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":57233,"byte_end":57246,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9626}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9683},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":57514,"byte_end":57530,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9685}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9734},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":58118,"byte_end":58125,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":9738}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9808},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":58365,"byte_end":58371,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9812}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9881},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":58621,"byte_end":58628,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":9884}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9942},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":58836,"byte_end":58842,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":9945}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10003},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":59061,"byte_end":59070,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":10006}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10064},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":59342,"byte_end":59352,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":10067}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10125},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":59725,"byte_end":59730,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":10128}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10186},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":59971,"byte_end":59977,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":10189}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10248},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60234,"byte_end":60245,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":10252}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10321},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60529,"byte_end":60541,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":10324}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":715},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60831,"byte_end":60843,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":745}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60767,"byte_end":60820,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63603,"byte_end":63609,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62231,"byte_end":62289,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62294,"byte_end":62297,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62302,"byte_end":62377,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62382,"byte_end":62452,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62457,"byte_end":62530,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62535,"byte_end":62564,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62569,"byte_end":62572,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62577,"byte_end":62652,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62657,"byte_end":62732,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62737,"byte_end":62784,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62789,"byte_end":62792,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62797,"byte_end":62872,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62877,"byte_end":62903,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62908,"byte_end":62911,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62916,"byte_end":62930,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62935,"byte_end":62938,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62943,"byte_end":62950,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62955,"byte_end":62993,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":62998,"byte_end":63001,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63006,"byte_end":63047,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63052,"byte_end":63097,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63102,"byte_end":63144,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63149,"byte_end":63185,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63190,"byte_end":63199,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63204,"byte_end":63211,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63216,"byte_end":63219,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63224,"byte_end":63296,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63301,"byte_end":63312,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63317,"byte_end":63320,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63325,"byte_end":63332,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63337,"byte_end":63375,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63380,"byte_end":63383,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63388,"byte_end":63429,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63434,"byte_end":63480,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63485,"byte_end":63527,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63532,"byte_end":63569,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63574,"byte_end":63583,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63588,"byte_end":63595,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65168,"byte_end":65182,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63800,"byte_end":63917,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63922,"byte_end":63925,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":63930,"byte_end":64052,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64057,"byte_end":64107,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64112,"byte_end":64115,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64120,"byte_end":64195,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64200,"byte_end":64275,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64280,"byte_end":64327,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64332,"byte_end":64335,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64340,"byte_end":64415,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64420,"byte_end":64495,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64500,"byte_end":64547,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64552,"byte_end":64555,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64560,"byte_end":64635,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64640,"byte_end":64666,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64671,"byte_end":64674,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64679,"byte_end":64693,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64698,"byte_end":64701,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64706,"byte_end":64713,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64718,"byte_end":64756,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64761,"byte_end":64764,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64769,"byte_end":64810,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64815,"byte_end":64860,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64865,"byte_end":64926,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64931,"byte_end":64963,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64968,"byte_end":64971,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":64976,"byte_end":65022,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65027,"byte_end":65088,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65093,"byte_end":65126,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65131,"byte_end":65140,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65145,"byte_end":65152,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65157,"byte_end":65160,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66865,"byte_end":66872,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65416,"byte_end":65472,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65477,"byte_end":65480,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65485,"byte_end":65559,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65564,"byte_end":65625,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65630,"byte_end":65700,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65705,"byte_end":65780,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65785,"byte_end":65820,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65825,"byte_end":65828,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65833,"byte_end":65908,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65913,"byte_end":65988,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":65993,"byte_end":66040,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66045,"byte_end":66048,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66053,"byte_end":66128,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66133,"byte_end":66159,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66164,"byte_end":66167,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66172,"byte_end":66186,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66191,"byte_end":66194,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66199,"byte_end":66206,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66211,"byte_end":66249,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66254,"byte_end":66257,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66262,"byte_end":66303,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66308,"byte_end":66354,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66359,"byte_end":66402,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66407,"byte_end":66444,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66449,"byte_end":66458,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66463,"byte_end":66470,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66475,"byte_end":66478,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66483,"byte_end":66556,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66561,"byte_end":66575,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66580,"byte_end":66583,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66588,"byte_end":66595,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66600,"byte_end":66638,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66643,"byte_end":66646,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66651,"byte_end":66692,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66697,"byte_end":66742,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66747,"byte_end":66790,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66795,"byte_end":66831,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66836,"byte_end":66845,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":66850,"byte_end":66857,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67962,"byte_end":67970,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67065,"byte_end":67135,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67140,"byte_end":67189,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67194,"byte_end":67197,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67202,"byte_end":67265,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67270,"byte_end":67338,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67343,"byte_end":67416,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67421,"byte_end":67497,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67502,"byte_end":67547,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67552,"byte_end":67555,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67560,"byte_end":67635,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67640,"byte_end":67666,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67671,"byte_end":67674,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67679,"byte_end":67693,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67698,"byte_end":67701,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67706,"byte_end":67713,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67718,"byte_end":67756,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67761,"byte_end":67764,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67769,"byte_end":67810,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67815,"byte_end":67866,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67871,"byte_end":67928,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67933,"byte_end":67942,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":67947,"byte_end":67954,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68266,"byte_end":68273,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68146,"byte_end":68204,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68209,"byte_end":68258,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69828,"byte_end":69836,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68447,"byte_end":68516,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68521,"byte_end":68595,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68600,"byte_end":68603,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68608,"byte_end":68683,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68688,"byte_end":68758,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68763,"byte_end":68828,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68833,"byte_end":68899,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68904,"byte_end":68938,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68943,"byte_end":68946,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":68951,"byte_end":69026,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69031,"byte_end":69057,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69062,"byte_end":69065,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69070,"byte_end":69084,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69089,"byte_end":69092,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69097,"byte_end":69104,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69109,"byte_end":69147,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69152,"byte_end":69155,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69160,"byte_end":69201,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69206,"byte_end":69251,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69256,"byte_end":69331,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69336,"byte_end":69372,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69377,"byte_end":69386,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69391,"byte_end":69398,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69403,"byte_end":69406,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69411,"byte_end":69487,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69492,"byte_end":69503,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69508,"byte_end":69511,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69516,"byte_end":69523,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69528,"byte_end":69566,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69571,"byte_end":69574,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69579,"byte_end":69620,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69625,"byte_end":69671,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69676,"byte_end":69752,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69757,"byte_end":69794,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69799,"byte_end":69808,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":69813,"byte_end":69820,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71457,"byte_end":71464,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70090,"byte_end":70155,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70160,"byte_end":70232,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70237,"byte_end":70240,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70245,"byte_end":70320,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70325,"byte_end":70395,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70400,"byte_end":70465,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70470,"byte_end":70546,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70551,"byte_end":70569,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70574,"byte_end":70577,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70582,"byte_end":70657,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70662,"byte_end":70688,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70693,"byte_end":70696,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70701,"byte_end":70715,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70720,"byte_end":70723,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70728,"byte_end":70735,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70740,"byte_end":70778,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70783,"byte_end":70786,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70791,"byte_end":70832,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70837,"byte_end":70883,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70888,"byte_end":70963,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":70968,"byte_end":71005,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71010,"byte_end":71019,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71024,"byte_end":71031,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71036,"byte_end":71039,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71044,"byte_end":71117,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71122,"byte_end":71136,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71141,"byte_end":71144,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71149,"byte_end":71156,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71161,"byte_end":71199,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71204,"byte_end":71207,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71212,"byte_end":71253,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71258,"byte_end":71303,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71308,"byte_end":71382,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71387,"byte_end":71423,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71428,"byte_end":71437,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71442,"byte_end":71449,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72440,"byte_end":72450,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71713,"byte_end":71786,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71791,"byte_end":71794,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71799,"byte_end":71874,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71879,"byte_end":71952,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":71957,"byte_end":72026,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72031,"byte_end":72084,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72089,"byte_end":72092,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72097,"byte_end":72111,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72116,"byte_end":72119,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72124,"byte_end":72131,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72136,"byte_end":72177,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72182,"byte_end":72220,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72225,"byte_end":72228,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72233,"byte_end":72275,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72280,"byte_end":72361,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72366,"byte_end":72406,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72411,"byte_end":72420,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72425,"byte_end":72432,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73376,"byte_end":73387,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72649,"byte_end":72720,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72725,"byte_end":72728,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72733,"byte_end":72808,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72813,"byte_end":72886,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72891,"byte_end":72960,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":72965,"byte_end":73019,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73024,"byte_end":73027,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73032,"byte_end":73046,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73051,"byte_end":73054,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73059,"byte_end":73066,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73071,"byte_end":73112,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73117,"byte_end":73155,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73160,"byte_end":73163,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73168,"byte_end":73211,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73216,"byte_end":73296,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73301,"byte_end":73342,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73347,"byte_end":73356,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73361,"byte_end":73368,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73772,"byte_end":73783,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73591,"byte_end":73666,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73671,"byte_end":73700,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73705,"byte_end":73708,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":73713,"byte_end":73764,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74962,"byte_end":74980,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74018,"byte_end":74093,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74098,"byte_end":74121,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74126,"byte_end":74129,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74134,"byte_end":74206,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74211,"byte_end":74284,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74289,"byte_end":74303,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74308,"byte_end":74311,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74316,"byte_end":74386,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74391,"byte_end":74409,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74414,"byte_end":74417,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74422,"byte_end":74436,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74441,"byte_end":74444,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74449,"byte_end":74456,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74461,"byte_end":74502,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74507,"byte_end":74545,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74550,"byte_end":74596,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74601,"byte_end":74604,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74609,"byte_end":74669,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74674,"byte_end":74753,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74758,"byte_end":74761,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74766,"byte_end":74823,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74828,"byte_end":74880,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74885,"byte_end":74928,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74933,"byte_end":74942,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":74947,"byte_end":74954,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76071,"byte_end":76085,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75240,"byte_end":75311,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75316,"byte_end":75353,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75358,"byte_end":75407,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75412,"byte_end":75415,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75420,"byte_end":75489,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75494,"byte_end":75567,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75572,"byte_end":75642,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75647,"byte_end":75665,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75670,"byte_end":75673,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75678,"byte_end":75746,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75751,"byte_end":75754,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75759,"byte_end":75773,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75778,"byte_end":75781,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75786,"byte_end":75793,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75798,"byte_end":75836,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75841,"byte_end":75844,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75849,"byte_end":75890,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75895,"byte_end":75947,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":75952,"byte_end":75999,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76004,"byte_end":76037,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76042,"byte_end":76051,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76056,"byte_end":76063,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77340,"byte_end":77351,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76639,"byte_end":76692,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76697,"byte_end":76733,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76738,"byte_end":76741,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76746,"byte_end":76795,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76800,"byte_end":76867,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76872,"byte_end":76885,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76890,"byte_end":76893,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76898,"byte_end":76912,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76917,"byte_end":76920,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76925,"byte_end":76932,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":76937,"byte_end":76996,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77001,"byte_end":77004,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77009,"byte_end":77028,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77033,"byte_end":77051,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77056,"byte_end":77128,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77133,"byte_end":77165,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77170,"byte_end":77177,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77182,"byte_end":77258,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77263,"byte_end":77266,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77271,"byte_end":77320,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77325,"byte_end":77332,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77610,"byte_end":77624,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":715},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77507,"byte_end":77580,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":77585,"byte_end":77602,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10379},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85793,"byte_end":85797,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10381}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85659,"byte_end":85696,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85714,"byte_end":85781,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":812},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86339,"byte_end":86343,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85902,"byte_end":85970,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85971,"byte_end":85974,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85975,"byte_end":86038,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86039,"byte_end":86042,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86043,"byte_end":86057,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86058,"byte_end":86061,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86062,"byte_end":86069,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86070,"byte_end":86111,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86112,"byte_end":86136,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86137,"byte_end":86140,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86141,"byte_end":86173,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86174,"byte_end":86201,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86202,"byte_end":86205,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86206,"byte_end":86243,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86244,"byte_end":86268,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86269,"byte_end":86276,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86277,"byte_end":86313,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86314,"byte_end":86323,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86324,"byte_end":86331,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10385},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87170,"byte_end":87177,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10387}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87031,"byte_end":87073,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87091,"byte_end":87158,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":858},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87696,"byte_end":87703,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87318,"byte_end":87398,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87399,"byte_end":87412,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87413,"byte_end":87416,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87417,"byte_end":87479,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87480,"byte_end":87483,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87484,"byte_end":87498,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87499,"byte_end":87502,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87503,"byte_end":87516,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87517,"byte_end":87558,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87559,"byte_end":87583,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87584,"byte_end":87587,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87588,"byte_end":87623,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87624,"byte_end":87650,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87651,"byte_end":87670,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87671,"byte_end":87680,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87681,"byte_end":87688,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10393},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88475,"byte_end":88481,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10391},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88440,"byte_end":88470,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10396},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88548,"byte_end":88552,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10391},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88505,"byte_end":88543,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10399},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88714,"byte_end":88718,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10391},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88571,"byte_end":88637,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88642,"byte_end":88709,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10391},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88411,"byte_end":88420,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> { Future(Fut), Done(Fut::Output), Gone, }","parent":null,"children":[{"krate":0,"index":10393},{"krate":0,"index":10396},{"krate":0,"index":10399}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88289,"byte_end":88326,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88327,"byte_end":88330,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88331,"byte_end":88384,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89239,"byte_end":89249,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88778,"byte_end":88815,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88816,"byte_end":88819,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88820,"byte_end":88834,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88835,"byte_end":88838,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88839,"byte_end":88846,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88847,"byte_end":88888,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88889,"byte_end":88913,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88914,"byte_end":88939,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88940,"byte_end":88943,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88944,"byte_end":88993,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88994,"byte_end":89015,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89016,"byte_end":89068,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89069,"byte_end":89104,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89105,"byte_end":89160,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89161,"byte_end":89213,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89214,"byte_end":89223,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89224,"byte_end":89231,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89690,"byte_end":89700,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89392,"byte_end":89477,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89482,"byte_end":89553,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89558,"byte_end":89631,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89636,"byte_end":89664,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89669,"byte_end":89678,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":90048,"byte_end":90059,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89928,"byte_end":89994,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89999,"byte_end":90022,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":90027,"byte_end":90036,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10406},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91684,"byte_end":91690,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10404},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91649,"byte_end":91679,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10409},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91757,"byte_end":91761,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10404},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91714,"byte_end":91752,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10412},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91969,"byte_end":91973,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10404},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91776,"byte_end":91845,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91850,"byte_end":91920,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91925,"byte_end":91964,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10404},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91614,"byte_end":91626,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> { Future(Fut), Done(Fut::Ok), Gone, }","parent":null,"children":[{"krate":0,"index":10406},{"krate":0,"index":10409},{"krate":0,"index":10412}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91474,"byte_end":91525,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91526,"byte_end":91529,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":91530,"byte_end":91587,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":957},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92087,"byte_end":92101,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92039,"byte_end":92079,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92588,"byte_end":92598,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92279,"byte_end":92364,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92369,"byte_end":92440,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92445,"byte_end":92529,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92534,"byte_end":92562,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92567,"byte_end":92576,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92948,"byte_end":92959,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92825,"byte_end":92894,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92899,"byte_end":92922,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92927,"byte_end":92936,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10417},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95170,"byte_end":95182,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10419}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96300,"byte_end":96306,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1036}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96180,"byte_end":96220,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96221,"byte_end":96288,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1039},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96893,"byte_end":96900,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96357,"byte_end":96428,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96429,"byte_end":96432,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96433,"byte_end":96499,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96500,"byte_end":96503,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96504,"byte_end":96518,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96519,"byte_end":96522,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96523,"byte_end":96530,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96531,"byte_end":96572,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96573,"byte_end":96606,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96607,"byte_end":96646,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96647,"byte_end":96650,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96651,"byte_end":96708,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96709,"byte_end":96752,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96753,"byte_end":96758,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96759,"byte_end":96762,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96763,"byte_end":96804,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96805,"byte_end":96867,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96868,"byte_end":96877,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96878,"byte_end":96885,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10456},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":97834,"byte_end":97847,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10458}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1098},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101255,"byte_end":101269,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"pub fn poll_immediate<F: Future>(F) -> PollImmediate<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100067,"byte_end":100140,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100141,"byte_end":100265,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100266,"byte_end":100269,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100270,"byte_end":100283,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100284,"byte_end":100287,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100288,"byte_end":100355,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100356,"byte_end":100359,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100360,"byte_end":100526,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100527,"byte_end":100652,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100653,"byte_end":100656,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100657,"byte_end":100671,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100672,"byte_end":100675,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100676,"byte_end":100683,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100684,"byte_end":100725,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100726,"byte_end":100750,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100751,"byte_end":100754,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100755,"byte_end":100807,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100808,"byte_end":100841,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100842,"byte_end":100845,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100846,"byte_end":100907,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100908,"byte_end":100938,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100939,"byte_end":100948,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100949,"byte_end":100956,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100957,"byte_end":100960,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100961,"byte_end":100985,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100986,"byte_end":100989,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100990,"byte_end":100997,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":100998,"byte_end":101039,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101040,"byte_end":101075,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101076,"byte_end":101123,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101124,"byte_end":101140,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101141,"byte_end":101200,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101201,"byte_end":101229,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101230,"byte_end":101239,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":101240,"byte_end":101247,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10495},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101692,"byte_end":101697,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101541,"byte_end":101588,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101613,"byte_end":101680,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101820,"byte_end":101830,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101737,"byte_end":101794,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101799,"byte_end":101808,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1140},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102496,"byte_end":102501,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102250,"byte_end":102310,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102311,"byte_end":102314,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102315,"byte_end":102329,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102330,"byte_end":102333,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102334,"byte_end":102341,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102342,"byte_end":102383,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102384,"byte_end":102408,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102409,"byte_end":102412,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102413,"byte_end":102442,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102443,"byte_end":102470,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102471,"byte_end":102480,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102481,"byte_end":102488,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102836,"byte_end":102838,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102570,"byte_end":102637,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102638,"byte_end":102641,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102642,"byte_end":102656,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102657,"byte_end":102660,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102661,"byte_end":102668,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102669,"byte_end":102710,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102711,"byte_end":102735,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102736,"byte_end":102739,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102740,"byte_end":102778,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102779,"byte_end":102810,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102811,"byte_end":102820,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102821,"byte_end":102828,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103169,"byte_end":103172,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102902,"byte_end":102968,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102969,"byte_end":102972,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102973,"byte_end":102987,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102988,"byte_end":102991,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102992,"byte_end":102999,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103000,"byte_end":103041,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103042,"byte_end":103066,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103067,"byte_end":103070,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103071,"byte_end":103110,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103111,"byte_end":103143,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103144,"byte_end":103153,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":103154,"byte_end":103161,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10597},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105458,"byte_end":105462,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10600},{"krate":0,"index":10601}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10642},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105528,"byte_end":105533,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10646},{"krate":0,"index":10647},{"krate":0,"index":10648}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10699},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105605,"byte_end":105610,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":10704},{"krate":0,"index":10705},{"krate":0,"index":10706},{"krate":0,"index":10707}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10768},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105688,"byte_end":105693,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776},{"krate":0,"index":10777},{"krate":0,"index":10778}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1196},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106308,"byte_end":106312,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105731,"byte_end":105802,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105803,"byte_end":105806,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105807,"byte_end":105878,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105879,"byte_end":105954,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105955,"byte_end":105958,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":105959,"byte_end":106028,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106029,"byte_end":106055,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106056,"byte_end":106059,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106060,"byte_end":106074,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106075,"byte_end":106078,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106079,"byte_end":106086,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106087,"byte_end":106128,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106129,"byte_end":106153,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106154,"byte_end":106157,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106158,"byte_end":106182,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106183,"byte_end":106207,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106208,"byte_end":106242,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106243,"byte_end":106246,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106247,"byte_end":106282,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106283,"byte_end":106292,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106293,"byte_end":106300,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1199},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106858,"byte_end":106863,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106519,"byte_end":106571,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106572,"byte_end":106575,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106576,"byte_end":106590,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106591,"byte_end":106594,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106595,"byte_end":106602,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106603,"byte_end":106644,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106645,"byte_end":106669,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106670,"byte_end":106673,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106674,"byte_end":106698,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106699,"byte_end":106723,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106724,"byte_end":106748,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106749,"byte_end":106788,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106789,"byte_end":106792,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106793,"byte_end":106832,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106833,"byte_end":106842,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":106843,"byte_end":106850,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1203},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107525,"byte_end":107530,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107155,"byte_end":107207,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107208,"byte_end":107211,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107212,"byte_end":107226,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107227,"byte_end":107230,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107231,"byte_end":107238,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107239,"byte_end":107280,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107281,"byte_end":107305,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107306,"byte_end":107309,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107310,"byte_end":107334,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107335,"byte_end":107359,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107360,"byte_end":107384,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107385,"byte_end":107409,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107410,"byte_end":107452,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107453,"byte_end":107456,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107457,"byte_end":107499,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107500,"byte_end":107509,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107510,"byte_end":107517,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108295,"byte_end":108300,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107894,"byte_end":107946,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107947,"byte_end":107950,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107951,"byte_end":107965,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107966,"byte_end":107969,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107970,"byte_end":107977,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":107978,"byte_end":108019,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108020,"byte_end":108044,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108045,"byte_end":108048,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108049,"byte_end":108073,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108074,"byte_end":108098,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108099,"byte_end":108123,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108124,"byte_end":108148,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108149,"byte_end":108173,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108174,"byte_end":108219,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108220,"byte_end":108223,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108224,"byte_end":108269,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108270,"byte_end":108279,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join.rs","byte_start":108280,"byte_end":108287,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1289},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":109660,"byte_end":109667,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1291}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":109539,"byte_end":109606,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":109607,"byte_end":109648,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1302},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111762,"byte_end":111770,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110476,"byte_end":110556,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110557,"byte_end":110567,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110568,"byte_end":110571,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110572,"byte_end":110651,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110652,"byte_end":110732,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110733,"byte_end":110751,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110752,"byte_end":110755,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110756,"byte_end":110833,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110834,"byte_end":110891,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110892,"byte_end":110895,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110896,"byte_end":110910,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110911,"byte_end":110914,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110915,"byte_end":110997,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110998,"byte_end":111082,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111083,"byte_end":111167,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111168,"byte_end":111171,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111172,"byte_end":111241,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111242,"byte_end":111245,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111246,"byte_end":111314,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111315,"byte_end":111318,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111319,"byte_end":111396,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111397,"byte_end":111478,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111479,"byte_end":111482,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111483,"byte_end":111497,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111498,"byte_end":111501,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111502,"byte_end":111509,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111510,"byte_end":111551,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111552,"byte_end":111586,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111587,"byte_end":111590,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111591,"byte_end":111628,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111629,"byte_end":111632,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111633,"byte_end":111680,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111681,"byte_end":111684,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111685,"byte_end":111736,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111737,"byte_end":111746,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":111747,"byte_end":111754,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10849},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114223,"byte_end":114229,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":10852}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114085,"byte_end":114126,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114127,"byte_end":114194,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1351},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116493,"byte_end":116499,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114320,"byte_end":114390,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114391,"byte_end":114394,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114395,"byte_end":114473,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114474,"byte_end":114550,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114551,"byte_end":114623,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114624,"byte_end":114627,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114628,"byte_end":114700,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114701,"byte_end":114729,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114730,"byte_end":114733,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114734,"byte_end":114801,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114802,"byte_end":114866,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114867,"byte_end":114917,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114918,"byte_end":114921,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114922,"byte_end":114936,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114937,"byte_end":114940,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114941,"byte_end":114961,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114962,"byte_end":114965,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114966,"byte_end":114973,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114974,"byte_end":115015,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115016,"byte_end":115034,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115035,"byte_end":115051,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115052,"byte_end":115075,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115076,"byte_end":115097,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115098,"byte_end":115104,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115105,"byte_end":115108,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115109,"byte_end":115200,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115201,"byte_end":115226,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115227,"byte_end":115286,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115287,"byte_end":115296,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115297,"byte_end":115303,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115304,"byte_end":115329,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115330,"byte_end":115360,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115361,"byte_end":115367,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115368,"byte_end":115371,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115372,"byte_end":115418,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115419,"byte_end":115441,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115442,"byte_end":115464,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115465,"byte_end":115468,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115469,"byte_end":115531,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115532,"byte_end":115616,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115617,"byte_end":115690,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115691,"byte_end":115775,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115776,"byte_end":115849,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115850,"byte_end":115856,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115857,"byte_end":115860,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115861,"byte_end":115885,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115886,"byte_end":115895,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115896,"byte_end":115903,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115904,"byte_end":115907,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115908,"byte_end":115934,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115935,"byte_end":115938,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115939,"byte_end":115946,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":115947,"byte_end":116006,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116007,"byte_end":116010,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116011,"byte_end":116064,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116065,"byte_end":116068,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116069,"byte_end":116144,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116145,"byte_end":116177,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116178,"byte_end":116210,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116211,"byte_end":116216,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116217,"byte_end":116261,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116262,"byte_end":116288,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116289,"byte_end":116366,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116367,"byte_end":116446,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116447,"byte_end":116460,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116461,"byte_end":116471,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116472,"byte_end":116477,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116478,"byte_end":116485,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10857},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":117956,"byte_end":117965,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10859}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":117816,"byte_end":117859,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":117877,"byte_end":117944,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1401},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118745,"byte_end":118755,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118043,"byte_end":118109,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118110,"byte_end":118113,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118114,"byte_end":118194,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118195,"byte_end":118273,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118274,"byte_end":118342,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118343,"byte_end":118346,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118347,"byte_end":118427,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118428,"byte_end":118502,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118503,"byte_end":118506,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118507,"byte_end":118584,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118585,"byte_end":118642,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118643,"byte_end":118646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118647,"byte_end":118659,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118660,"byte_end":118663,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118664,"byte_end":118737,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119136,"byte_end":119146,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"pub fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119061,"byte_end":119124,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10933},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":122907,"byte_end":122914,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":10936},{"krate":0,"index":10937}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10978},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":122984,"byte_end":122992,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":10982},{"krate":0,"index":10983},{"krate":0,"index":10984}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11035},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123068,"byte_end":123076,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":11040},{"krate":0,"index":11041},{"krate":0,"index":11042},{"krate":0,"index":11043}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11104},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123158,"byte_end":123166,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":11110},{"krate":0,"index":11111},{"krate":0,"index":11112},{"krate":0,"index":11113},{"krate":0,"index":11114}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1457},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124439,"byte_end":124447,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123204,"byte_end":123277,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123278,"byte_end":123310,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123311,"byte_end":123314,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123315,"byte_end":123386,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123387,"byte_end":123463,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123464,"byte_end":123536,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123537,"byte_end":123553,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123554,"byte_end":123557,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123558,"byte_end":123627,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123628,"byte_end":123654,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123655,"byte_end":123658,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123659,"byte_end":123673,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123674,"byte_end":123677,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123678,"byte_end":123754,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123755,"byte_end":123791,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123792,"byte_end":123795,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123796,"byte_end":123803,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123804,"byte_end":123845,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123846,"byte_end":123870,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123871,"byte_end":123874,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123875,"byte_end":123920,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123921,"byte_end":123966,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":123967,"byte_end":124005,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124006,"byte_end":124009,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124010,"byte_end":124049,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124050,"byte_end":124059,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124060,"byte_end":124067,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124068,"byte_end":124071,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124072,"byte_end":124142,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124143,"byte_end":124158,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124159,"byte_end":124162,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124163,"byte_end":124170,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124171,"byte_end":124212,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124213,"byte_end":124237,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124238,"byte_end":124241,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124242,"byte_end":124287,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124288,"byte_end":124334,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124335,"byte_end":124373,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124374,"byte_end":124377,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124378,"byte_end":124413,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124414,"byte_end":124423,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124424,"byte_end":124431,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1460},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125103,"byte_end":125112,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124685,"byte_end":124745,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124746,"byte_end":124749,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124750,"byte_end":124764,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124765,"byte_end":124768,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124769,"byte_end":124776,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124777,"byte_end":124818,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124819,"byte_end":124843,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124844,"byte_end":124847,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124848,"byte_end":124893,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124894,"byte_end":124939,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124940,"byte_end":124985,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":124986,"byte_end":125029,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125030,"byte_end":125033,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125034,"byte_end":125077,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125078,"byte_end":125087,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125088,"byte_end":125095,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1464},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125940,"byte_end":125949,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125470,"byte_end":125530,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125531,"byte_end":125534,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125535,"byte_end":125549,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125550,"byte_end":125553,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125554,"byte_end":125561,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125562,"byte_end":125603,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125604,"byte_end":125628,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125629,"byte_end":125632,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125633,"byte_end":125678,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125679,"byte_end":125724,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125725,"byte_end":125770,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125771,"byte_end":125816,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125817,"byte_end":125863,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125864,"byte_end":125867,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125868,"byte_end":125914,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125915,"byte_end":125924,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":125925,"byte_end":125932,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1469},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126921,"byte_end":126930,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126399,"byte_end":126459,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126460,"byte_end":126463,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126464,"byte_end":126478,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126479,"byte_end":126482,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126483,"byte_end":126490,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126491,"byte_end":126532,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126533,"byte_end":126557,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126558,"byte_end":126561,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126562,"byte_end":126607,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126608,"byte_end":126653,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126654,"byte_end":126699,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126700,"byte_end":126745,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126746,"byte_end":126791,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126792,"byte_end":126841,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126842,"byte_end":126845,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126846,"byte_end":126895,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126896,"byte_end":126905,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join.rs","byte_start":126906,"byte_end":126913,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128422,"byte_end":128432,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1554}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128297,"byte_end":128342,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128343,"byte_end":128410,"line_start":29,"line_end":29,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1558},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":130025,"byte_end":130037,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128776,"byte_end":128855,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128856,"byte_end":128886,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128887,"byte_end":128890,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128891,"byte_end":128970,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128971,"byte_end":129051,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129052,"byte_end":129070,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129071,"byte_end":129074,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129075,"byte_end":129153,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129154,"byte_end":129234,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129235,"byte_end":129309,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129310,"byte_end":129333,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129334,"byte_end":129337,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129338,"byte_end":129415,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129416,"byte_end":129473,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129474,"byte_end":129477,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129478,"byte_end":129492,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129493,"byte_end":129496,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129497,"byte_end":129504,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129505,"byte_end":129546,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129547,"byte_end":129593,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129594,"byte_end":129597,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129598,"byte_end":129621,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129622,"byte_end":129656,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129657,"byte_end":129691,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129692,"byte_end":129726,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129727,"byte_end":129733,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129734,"byte_end":129737,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129738,"byte_end":129801,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129802,"byte_end":129805,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129806,"byte_end":129829,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129830,"byte_end":129864,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129865,"byte_end":129900,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129901,"byte_end":129935,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129936,"byte_end":129942,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129943,"byte_end":129946,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":129947,"byte_end":129999,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":130000,"byte_end":130009,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":130010,"byte_end":130017,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11185},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":131935,"byte_end":131944,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":11188}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":131793,"byte_end":131838,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":131839,"byte_end":131906,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1604},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133529,"byte_end":133539,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132038,"byte_end":132108,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132109,"byte_end":132112,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132113,"byte_end":132191,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132192,"byte_end":132268,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132269,"byte_end":132341,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132342,"byte_end":132345,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132346,"byte_end":132418,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132419,"byte_end":132447,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132448,"byte_end":132451,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132452,"byte_end":132519,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132520,"byte_end":132591,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132592,"byte_end":132642,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132643,"byte_end":132646,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132647,"byte_end":132661,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132662,"byte_end":132665,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132666,"byte_end":132673,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132674,"byte_end":132758,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132759,"byte_end":132762,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132763,"byte_end":132820,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132821,"byte_end":132824,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132825,"byte_end":132907,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132908,"byte_end":132965,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132966,"byte_end":133023,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133024,"byte_end":133050,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133051,"byte_end":133056,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133057,"byte_end":133152,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133153,"byte_end":133176,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133177,"byte_end":133257,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133258,"byte_end":133339,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133340,"byte_end":133410,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133411,"byte_end":133482,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133483,"byte_end":133496,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133497,"byte_end":133507,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133508,"byte_end":133513,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133514,"byte_end":133521,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11193},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135170,"byte_end":135178,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":11195}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135031,"byte_end":135073,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135091,"byte_end":135158,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135900,"byte_end":135909,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135255,"byte_end":135349,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135350,"byte_end":135353,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135354,"byte_end":135443,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135444,"byte_end":135528,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135529,"byte_end":135610,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135611,"byte_end":135656,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135657,"byte_end":135660,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135661,"byte_end":135739,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135740,"byte_end":135797,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135798,"byte_end":135801,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135802,"byte_end":135814,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135815,"byte_end":135818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135819,"byte_end":135892,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11202},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138652,"byte_end":138656,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":11199},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138619,"byte_end":138647,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11205},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138712,"byte_end":138717,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":11199},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138678,"byte_end":138707,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":11199},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138600,"byte_end":138606,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":11202},{"krate":0,"index":11205}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138077,"byte_end":138183,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138184,"byte_end":138187,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138188,"byte_end":138269,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138270,"byte_end":138273,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138274,"byte_end":138285,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138286,"byte_end":138318,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138319,"byte_end":138322,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138323,"byte_end":138364,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138365,"byte_end":138385,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138386,"byte_end":138389,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138390,"byte_end":138413,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138414,"byte_end":138453,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138454,"byte_end":138466,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138467,"byte_end":138507,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138508,"byte_end":138514,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138515,"byte_end":138518,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138519,"byte_end":138549,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138550,"byte_end":138558,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138559,"byte_end":138566,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139271,"byte_end":139283,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139123,"byte_end":139181,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139186,"byte_end":139189,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139194,"byte_end":139259,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139663,"byte_end":139676,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139514,"byte_end":139572,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139577,"byte_end":139580,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139585,"byte_end":139651,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139964,"byte_end":139974,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139891,"byte_end":139952,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1811},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146578,"byte_end":146587,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146208,"byte_end":146295,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146296,"byte_end":146299,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146300,"byte_end":146376,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146377,"byte_end":146430,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146431,"byte_end":146434,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146435,"byte_end":146512,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/abortable.rs","byte_start":146513,"byte_end":146570,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1845},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3962},{"krate":0,"index":3965},{"krate":0,"index":3968},{"krate":0,"index":3971},{"krate":0,"index":3974},{"krate":0,"index":3977},{"krate":0,"index":3980},{"krate":0,"index":3983},{"krate":0,"index":3986},{"krate":0,"index":3989},{"krate":0,"index":3992},{"krate":0,"index":3995},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4007},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4025},{"krate":0,"index":4028},{"krate":0,"index":4031},{"krate":0,"index":4034},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4043},{"krate":0,"index":4046},{"krate":0,"index":4049},{"krate":0,"index":4052},{"krate":0,"index":4055},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4065},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5231},{"krate":0,"index":5234},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5243},{"krate":0,"index":5246},{"krate":0,"index":5249},{"krate":0,"index":5252},{"krate":0,"index":5255},{"krate":0,"index":5258},{"krate":0,"index":5261},{"krate":0,"index":5264},{"krate":0,"index":5267},{"krate":0,"index":5270},{"krate":0,"index":5273},{"krate":0,"index":5276},{"krate":0,"index":5279},{"krate":0,"index":5282},{"krate":0,"index":5285},{"krate":0,"index":5288},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5295},{"krate":0,"index":5298},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5308},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5338},{"krate":0,"index":5341},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5378},{"krate":0,"index":5381},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5422},{"krate":0,"index":5425},{"krate":0,"index":5464},{"krate":0,"index":5465},{"krate":0,"index":5468},{"krate":0,"index":5471},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5518},{"krate":0,"index":5521},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5564},{"krate":0,"index":5567},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5607},{"krate":0,"index":5610},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5642},{"krate":0,"index":5645},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5706},{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5785},{"krate":0,"index":5788},{"krate":0,"index":5791},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5854},{"krate":0,"index":5857},{"krate":0,"index":5964},{"krate":0,"index":5967},{"krate":0,"index":6370},{"krate":0,"index":6373},{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6499},{"krate":0,"index":6502},{"krate":0,"index":6518},{"krate":0,"index":6519},{"krate":0,"index":6522},{"krate":0,"index":6525},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6531},{"krate":0,"index":6534}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146839,"byte_end":146864,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146865,"byte_end":146868,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146869,"byte_end":146894,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146895,"byte_end":146898,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146899,"byte_end":146972,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146973,"byte_end":146998,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":146999,"byte_end":147078,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147079,"byte_end":147116,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147117,"byte_end":147190,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":147191,"byte_end":147221,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11216},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":208865,"byte_end":208870,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11219},{"krate":0,"index":11220}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11265},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":210995,"byte_end":211002,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11268},{"krate":0,"index":11269}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11314},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":212436,"byte_end":212441,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":11318},{"krate":0,"index":11319},{"krate":0,"index":11320}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11376},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":214275,"byte_end":214281,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11378},{"krate":0,"index":11379}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11416},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":215953,"byte_end":215958,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":11418},{"krate":0,"index":11419}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11453},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":217268,"byte_end":217273,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11455},{"krate":0,"index":11456}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11493},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":218920,"byte_end":218929,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11495},{"krate":0,"index":11496}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11537},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":220561,"byte_end":220567,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11541},{"krate":0,"index":11542},{"krate":0,"index":11543},{"krate":0,"index":11544}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11602},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":223961,"byte_end":223970,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11606},{"krate":0,"index":11607},{"krate":0,"index":11608}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11663},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":226976,"byte_end":226983,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11666},{"krate":0,"index":11667}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11718},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":152745,"byte_end":152752,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11720}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11771},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":228800,"byte_end":228804,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":11776},{"krate":0,"index":11777},{"krate":0,"index":11778},{"krate":0,"index":11779}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11840},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":231261,"byte_end":231264,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":11844},{"krate":0,"index":11845},{"krate":0,"index":11846},{"krate":0,"index":11847}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11901},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":233837,"byte_end":233840,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":11905},{"krate":0,"index":11906},{"krate":0,"index":11907},{"krate":0,"index":11908}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11962},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":236439,"byte_end":236446,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":11966},{"krate":0,"index":11967},{"krate":0,"index":11968}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12019},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238403,"byte_end":238407,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":12021},{"krate":0,"index":12022}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238859,"byte_end":238866,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238590,"byte_end":238652,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238657,"byte_end":238660,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238665,"byte_end":238733,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238738,"byte_end":238804,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238809,"byte_end":238847,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":12063},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240225,"byte_end":240237,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":12065}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240055,"byte_end":240128,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240146,"byte_end":240213,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240800,"byte_end":240807,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240408,"byte_end":240481,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240486,"byte_end":240503,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240508,"byte_end":240511,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240516,"byte_end":240597,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240602,"byte_end":240684,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240689,"byte_end":240768,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240773,"byte_end":240788,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241418,"byte_end":241425,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240872,"byte_end":240939,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240944,"byte_end":240975,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240980,"byte_end":240983,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240988,"byte_end":241061,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241066,"byte_end":241121,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241126,"byte_end":241129,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241134,"byte_end":241215,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241220,"byte_end":241302,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241307,"byte_end":241386,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241391,"byte_end":241406,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242051,"byte_end":242062,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241498,"byte_end":241572,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241577,"byte_end":241608,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241613,"byte_end":241616,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241621,"byte_end":241694,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241699,"byte_end":241754,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241759,"byte_end":241762,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241767,"byte_end":241848,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241853,"byte_end":241935,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":241940,"byte_end":242019,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242024,"byte_end":242039,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242695,"byte_end":242705,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242175,"byte_end":242237,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242242,"byte_end":242245,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242250,"byte_end":242322,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242327,"byte_end":242398,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242403,"byte_end":242406,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242411,"byte_end":242492,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242497,"byte_end":242579,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242584,"byte_end":242663,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242668,"byte_end":242683,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12072},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":154092,"byte_end":154099,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":12075}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12138},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":243729,"byte_end":243732,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":12141},{"krate":0,"index":12142}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12191},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":154460,"byte_end":154467,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":12195}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12270},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245392,"byte_end":245396,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12273}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245236,"byte_end":245295,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245313,"byte_end":245380,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12278},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246404,"byte_end":246418,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12281}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246220,"byte_end":246295,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246296,"byte_end":246307,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246325,"byte_end":246392,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":12286},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248009,"byte_end":248017,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12288},{"krate":0,"index":12289}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248450,"byte_end":248454,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248302,"byte_end":248368,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248373,"byte_end":248438,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248779,"byte_end":248788,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248541,"byte_end":248603,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248608,"byte_end":248611,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248616,"byte_end":248689,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248694,"byte_end":248767,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250103,"byte_end":250111,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"pub fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249224,"byte_end":249298,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249303,"byte_end":249368,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249373,"byte_end":249376,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249381,"byte_end":249395,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249400,"byte_end":249403,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249408,"byte_end":249415,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249420,"byte_end":249461,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249466,"byte_end":249509,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249514,"byte_end":249539,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249544,"byte_end":249547,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249552,"byte_end":249608,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249613,"byte_end":249634,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249639,"byte_end":249642,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249647,"byte_end":249710,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249715,"byte_end":249769,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249774,"byte_end":249777,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249782,"byte_end":249858,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249863,"byte_end":249918,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249923,"byte_end":249943,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249948,"byte_end":249967,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249972,"byte_end":249981,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249986,"byte_end":249991,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":249996,"byte_end":249999,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250004,"byte_end":250065,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250070,"byte_end":250079,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250084,"byte_end":250091,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250286,"byte_end":250299,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"pub fn poll_peek_mut(Pin<&mut Self>, &mut Context)\n-> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250204,"byte_end":250274,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252290,"byte_end":252297,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"pub fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where\nF: FnOnce(&St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250762,"byte_end":250835,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250840,"byte_end":250874,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250879,"byte_end":250882,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250887,"byte_end":250962,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":250967,"byte_end":251007,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251012,"byte_end":251015,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251020,"byte_end":251034,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251039,"byte_end":251042,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251047,"byte_end":251087,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251092,"byte_end":251095,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251100,"byte_end":251107,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251112,"byte_end":251153,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251158,"byte_end":251201,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251206,"byte_end":251231,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251236,"byte_end":251239,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251244,"byte_end":251291,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251296,"byte_end":251317,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251322,"byte_end":251375,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251380,"byte_end":251448,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251453,"byte_end":251526,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251531,"byte_end":251596,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251601,"byte_end":251685,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251690,"byte_end":251735,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251740,"byte_end":251749,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251754,"byte_end":251761,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251766,"byte_end":251769,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251774,"byte_end":251810,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251815,"byte_end":251818,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251823,"byte_end":251830,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251835,"byte_end":251876,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251881,"byte_end":251924,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251929,"byte_end":251954,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251959,"byte_end":251962,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":251967,"byte_end":252015,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252020,"byte_end":252041,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252046,"byte_end":252085,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252090,"byte_end":252155,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252160,"byte_end":252201,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252206,"byte_end":252252,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252257,"byte_end":252266,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252271,"byte_end":252278,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253321,"byte_end":253331,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"pub fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where\nT: ?Sized, St::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252463,"byte_end":252536,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252541,"byte_end":252565,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252570,"byte_end":252573,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252578,"byte_end":252591,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252596,"byte_end":252599,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252604,"byte_end":252644,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252649,"byte_end":252652,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252657,"byte_end":252664,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252669,"byte_end":252710,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252715,"byte_end":252758,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252763,"byte_end":252788,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252793,"byte_end":252796,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252801,"byte_end":252848,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252853,"byte_end":252874,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252879,"byte_end":252932,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":252937,"byte_end":252999,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253004,"byte_end":253077,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253082,"byte_end":253141,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253146,"byte_end":253233,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253238,"byte_end":253283,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253288,"byte_end":253297,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253302,"byte_end":253309,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":12330},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":254849,"byte_end":254853,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12333}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12371},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":255911,"byte_end":255918,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12374}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12412},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257001,"byte_end":257007,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12416}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12461},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":258871,"byte_end":258879,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12465}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12510},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260496,"byte_end":260500,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12512},{"krate":0,"index":12513}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12554},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":262263,"byte_end":262272,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12558},{"krate":0,"index":12559},{"krate":0,"index":12560},{"krate":0,"index":12561},{"krate":0,"index":12562}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12623},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":265776,"byte_end":265780,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12625},{"krate":0,"index":12626}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12667},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":267816,"byte_end":267825,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12671},{"krate":0,"index":12672},{"krate":0,"index":12673},{"krate":0,"index":12674},{"krate":0,"index":12675}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12736},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":271305,"byte_end":271314,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":12739},{"krate":0,"index":12740},{"krate":0,"index":12741},{"krate":0,"index":12742}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272598,"byte_end":272609,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272298,"byte_end":272352,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272357,"byte_end":272451,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272456,"byte_end":272519,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272524,"byte_end":272586,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273893,"byte_end":273904,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272746,"byte_end":272811,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272816,"byte_end":272873,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272878,"byte_end":272881,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272886,"byte_end":272951,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272956,"byte_end":273016,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273021,"byte_end":273024,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273029,"byte_end":273097,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273102,"byte_end":273145,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273150,"byte_end":273153,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273158,"byte_end":273172,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273177,"byte_end":273180,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273185,"byte_end":273192,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273197,"byte_end":273238,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273243,"byte_end":273267,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273272,"byte_end":273315,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273320,"byte_end":273348,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273353,"byte_end":273356,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273361,"byte_end":273399,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273404,"byte_end":273407,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273412,"byte_end":273430,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273435,"byte_end":273477,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273482,"byte_end":273497,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273502,"byte_end":273521,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273526,"byte_end":273551,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273556,"byte_end":273572,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273577,"byte_end":273610,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273615,"byte_end":273624,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273629,"byte_end":273636,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273641,"byte_end":273644,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273649,"byte_end":273698,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273703,"byte_end":273757,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273762,"byte_end":273765,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273770,"byte_end":273817,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273822,"byte_end":273855,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273860,"byte_end":273869,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273874,"byte_end":273881,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":274080,"byte_end":274090,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":273983,"byte_end":274044,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":274049,"byte_end":274068,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":12793},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276022,"byte_end":276026,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":12797},{"krate":0,"index":12798},{"krate":0,"index":12799}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12854},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":278566,"byte_end":278569,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":12857},{"krate":0,"index":12858},{"krate":0,"index":12859},{"krate":0,"index":12860}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279087,"byte_end":279094,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":278979,"byte_end":279053,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279058,"byte_end":279075,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279450,"byte_end":279457,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279188,"byte_end":279256,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279261,"byte_end":279292,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279297,"byte_end":279300,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279305,"byte_end":279378,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279383,"byte_end":279438,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279832,"byte_end":279843,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279563,"byte_end":279638,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279643,"byte_end":279674,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279679,"byte_end":279682,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279687,"byte_end":279760,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":279765,"byte_end":279820,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280249,"byte_end":280259,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280013,"byte_end":280076,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280081,"byte_end":280084,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280089,"byte_end":280161,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280166,"byte_end":280237,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":12911},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":283088,"byte_end":283094,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":12913},{"krate":0,"index":12914},{"krate":0,"index":12915}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12959},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":286197,"byte_end":286208,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":12961},{"krate":0,"index":12962},{"krate":0,"index":12963}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13007},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":289754,"byte_end":289758,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":13012},{"krate":0,"index":13013},{"krate":0,"index":13014}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13076},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":293182,"byte_end":293197,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13078},{"krate":0,"index":13079},{"krate":0,"index":13080}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13121},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":296508,"byte_end":296516,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":13123},{"krate":0,"index":13124},{"krate":0,"index":13125}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13205},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":309297,"byte_end":309313,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":13207},{"krate":0,"index":13208},{"krate":0,"index":13209},{"krate":0,"index":13210},{"krate":0,"index":13211},{"krate":0,"index":13212},{"krate":0,"index":13213}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13270},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":157279,"byte_end":157295,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":13274}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13349},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":316866,"byte_end":316883,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13353},{"krate":0,"index":13354},{"krate":0,"index":13355},{"krate":0,"index":13356}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13410},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":320389,"byte_end":320400,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13412},{"krate":0,"index":13413}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":3862},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158613,"byte_end":158622,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3872},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3881},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3893},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3909},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3922},{"krate":0,"index":3925},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3942},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":3953},{"krate":0,"index":3954}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158502,"byte_end":158576,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158577,"byte_end":158602,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159532,"byte_end":159536,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158637,"byte_end":158703,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158708,"byte_end":158711,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158716,"byte_end":158784,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158789,"byte_end":158864,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158869,"byte_end":158944,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158949,"byte_end":159003,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159008,"byte_end":159083,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159088,"byte_end":159098,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159103,"byte_end":159106,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159111,"byte_end":159125,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159130,"byte_end":159133,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159138,"byte_end":159145,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159150,"byte_end":159191,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159196,"byte_end":159239,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159244,"byte_end":159247,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159252,"byte_end":159293,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159298,"byte_end":159301,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159306,"byte_end":159351,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159356,"byte_end":159401,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159406,"byte_end":159451,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159456,"byte_end":159498,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159503,"byte_end":159512,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159517,"byte_end":159524,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160775,"byte_end":160786,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159678,"byte_end":159750,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159755,"byte_end":159816,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159821,"byte_end":159824,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159829,"byte_end":159904,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159909,"byte_end":159963,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159968,"byte_end":159971,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":159976,"byte_end":160049,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160054,"byte_end":160116,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160121,"byte_end":160196,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160201,"byte_end":160255,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160260,"byte_end":160335,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160340,"byte_end":160350,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160355,"byte_end":160358,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160363,"byte_end":160377,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160382,"byte_end":160385,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160390,"byte_end":160397,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160402,"byte_end":160443,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160448,"byte_end":160491,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160496,"byte_end":160499,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160504,"byte_end":160541,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160546,"byte_end":160549,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160554,"byte_end":160606,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160611,"byte_end":160641,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160646,"byte_end":160649,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160654,"byte_end":160706,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160711,"byte_end":160741,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160746,"byte_end":160755,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160760,"byte_end":160767,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161787,"byte_end":161790,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":160951,"byte_end":161026,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161031,"byte_end":161054,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161059,"byte_end":161062,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161067,"byte_end":161139,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161144,"byte_end":161208,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161213,"byte_end":161250,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161255,"byte_end":161258,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161263,"byte_end":161339,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161344,"byte_end":161415,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161420,"byte_end":161441,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161446,"byte_end":161449,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161454,"byte_end":161468,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161473,"byte_end":161476,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161481,"byte_end":161488,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161493,"byte_end":161534,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161539,"byte_end":161582,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161587,"byte_end":161590,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161595,"byte_end":161632,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161637,"byte_end":161676,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161681,"byte_end":161684,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161689,"byte_end":161753,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161758,"byte_end":161767,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161772,"byte_end":161779,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163350,"byte_end":163359,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":161957,"byte_end":162028,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162033,"byte_end":162052,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162057,"byte_end":162060,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162065,"byte_end":162130,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162135,"byte_end":162204,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162209,"byte_end":162220,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162225,"byte_end":162228,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162233,"byte_end":162308,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162313,"byte_end":162395,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162400,"byte_end":162418,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162423,"byte_end":162426,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162431,"byte_end":162454,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162459,"byte_end":162462,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162467,"byte_end":162542,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162547,"byte_end":162634,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162639,"byte_end":162695,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162700,"byte_end":162703,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162708,"byte_end":162720,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162725,"byte_end":162728,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162733,"byte_end":162802,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162807,"byte_end":162832,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162837,"byte_end":162840,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162845,"byte_end":162859,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162864,"byte_end":162867,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162872,"byte_end":162879,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162884,"byte_end":162925,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162930,"byte_end":162973,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162978,"byte_end":162981,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":162986,"byte_end":163037,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163042,"byte_end":163045,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163050,"byte_end":163090,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163095,"byte_end":163098,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163103,"byte_end":163155,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163160,"byte_end":163212,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163217,"byte_end":163269,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163274,"byte_end":163316,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163321,"byte_end":163330,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163335,"byte_end":163342,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164590,"byte_end":164596,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163503,"byte_end":163575,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163580,"byte_end":163607,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163612,"byte_end":163615,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163620,"byte_end":163695,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163700,"byte_end":163771,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163776,"byte_end":163848,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163853,"byte_end":163927,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163932,"byte_end":163990,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":163995,"byte_end":163998,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164003,"byte_end":164079,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164084,"byte_end":164158,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164163,"byte_end":164184,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164189,"byte_end":164192,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164197,"byte_end":164211,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164216,"byte_end":164219,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164224,"byte_end":164231,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164236,"byte_end":164277,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164282,"byte_end":164306,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164311,"byte_end":164354,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164359,"byte_end":164362,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164367,"byte_end":164405,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164410,"byte_end":164472,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164477,"byte_end":164480,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164485,"byte_end":164556,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164561,"byte_end":164570,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164575,"byte_end":164582,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165923,"byte_end":165933,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164824,"byte_end":164899,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164904,"byte_end":164980,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164985,"byte_end":164988,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":164993,"byte_end":165068,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165073,"byte_end":165148,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165153,"byte_end":165229,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165234,"byte_end":165299,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165304,"byte_end":165307,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165312,"byte_end":165388,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165393,"byte_end":165467,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165472,"byte_end":165497,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165502,"byte_end":165505,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165510,"byte_end":165524,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165529,"byte_end":165536,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165541,"byte_end":165582,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165587,"byte_end":165630,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165635,"byte_end":165638,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165643,"byte_end":165681,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165686,"byte_end":165737,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165742,"byte_end":165793,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165798,"byte_end":165805,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165810,"byte_end":165813,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165818,"byte_end":165889,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165894,"byte_end":165903,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":165908,"byte_end":165915,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166962,"byte_end":166966,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166165,"byte_end":166238,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166243,"byte_end":166271,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166276,"byte_end":166279,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166284,"byte_end":166358,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166363,"byte_end":166430,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166435,"byte_end":166480,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166485,"byte_end":166488,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166493,"byte_end":166569,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166574,"byte_end":166600,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166605,"byte_end":166608,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166613,"byte_end":166627,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166632,"byte_end":166635,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166640,"byte_end":166647,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166652,"byte_end":166693,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166698,"byte_end":166741,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166746,"byte_end":166749,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166754,"byte_end":166791,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166796,"byte_end":166851,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166856,"byte_end":166859,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166864,"byte_end":166928,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166933,"byte_end":166942,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":166947,"byte_end":166954,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167900,"byte_end":167907,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167175,"byte_end":167229,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167234,"byte_end":167289,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167294,"byte_end":167297,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167302,"byte_end":167370,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167375,"byte_end":167378,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167383,"byte_end":167397,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167402,"byte_end":167405,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167410,"byte_end":167417,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167422,"byte_end":167463,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167468,"byte_end":167499,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167504,"byte_end":167539,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167544,"byte_end":167564,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167569,"byte_end":167572,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167577,"byte_end":167614,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167619,"byte_end":167622,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167627,"byte_end":167654,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167659,"byte_end":167683,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167688,"byte_end":167730,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167735,"byte_end":167744,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167749,"byte_end":167756,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167761,"byte_end":167764,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167769,"byte_end":167817,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167822,"byte_end":167866,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167871,"byte_end":167880,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":167885,"byte_end":167892,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169026,"byte_end":169031,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"pub fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168065,"byte_end":168116,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168121,"byte_end":168156,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168161,"byte_end":168164,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168169,"byte_end":168223,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168228,"byte_end":168285,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168290,"byte_end":168326,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168331,"byte_end":168334,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168339,"byte_end":168407,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168412,"byte_end":168415,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168420,"byte_end":168434,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168439,"byte_end":168442,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168447,"byte_end":168454,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168459,"byte_end":168500,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168505,"byte_end":168536,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168541,"byte_end":168576,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168581,"byte_end":168601,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168606,"byte_end":168609,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168614,"byte_end":168651,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168656,"byte_end":168659,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168664,"byte_end":168691,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168696,"byte_end":168739,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168744,"byte_end":168787,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168792,"byte_end":168835,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168840,"byte_end":168847,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168852,"byte_end":168855,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168860,"byte_end":168914,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168919,"byte_end":168953,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168958,"byte_end":168992,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":168997,"byte_end":169006,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169011,"byte_end":169018,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170327,"byte_end":170333,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169292,"byte_end":169354,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169359,"byte_end":169423,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169428,"byte_end":169431,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169436,"byte_end":169500,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169505,"byte_end":169570,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169575,"byte_end":169621,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169626,"byte_end":169629,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169634,"byte_end":169683,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169688,"byte_end":169728,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169733,"byte_end":169736,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169741,"byte_end":169755,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169760,"byte_end":169763,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169768,"byte_end":169775,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169780,"byte_end":169821,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169826,"byte_end":169857,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169862,"byte_end":169897,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169902,"byte_end":169922,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169927,"byte_end":169930,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169935,"byte_end":169972,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169977,"byte_end":169980,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":169985,"byte_end":170012,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170017,"byte_end":170048,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170053,"byte_end":170079,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170084,"byte_end":170150,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170155,"byte_end":170164,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170169,"byte_end":170176,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170181,"byte_end":170184,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170189,"byte_end":170224,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170229,"byte_end":170232,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170237,"byte_end":170293,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170298,"byte_end":170307,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170312,"byte_end":170319,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171353,"byte_end":171358,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"pub fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170563,"byte_end":170629,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170634,"byte_end":170637,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170642,"byte_end":170665,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170670,"byte_end":170673,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170678,"byte_end":170754,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170759,"byte_end":170834,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170839,"byte_end":170916,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170921,"byte_end":170924,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170929,"byte_end":170941,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170946,"byte_end":170949,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":170954,"byte_end":171028,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171033,"byte_end":171046,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171051,"byte_end":171054,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171059,"byte_end":171073,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171078,"byte_end":171081,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171086,"byte_end":171093,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171098,"byte_end":171139,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171144,"byte_end":171187,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171192,"byte_end":171195,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171200,"byte_end":171238,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171243,"byte_end":171280,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171285,"byte_end":171288,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171293,"byte_end":171319,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171324,"byte_end":171333,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171338,"byte_end":171345,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172314,"byte_end":172319,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"pub fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171480,"byte_end":171511,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171516,"byte_end":171519,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171524,"byte_end":171591,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171596,"byte_end":171668,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171673,"byte_end":171730,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171735,"byte_end":171738,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171743,"byte_end":171757,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171762,"byte_end":171765,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171770,"byte_end":171777,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171782,"byte_end":171823,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171828,"byte_end":171871,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171876,"byte_end":171898,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171903,"byte_end":171950,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171955,"byte_end":171958,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":171963,"byte_end":172004,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172009,"byte_end":172050,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172055,"byte_end":172096,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172101,"byte_end":172142,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172147,"byte_end":172188,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172193,"byte_end":172234,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172239,"byte_end":172280,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172285,"byte_end":172294,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172299,"byte_end":172306,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173269,"byte_end":173273,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172454,"byte_end":172521,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172526,"byte_end":172578,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172583,"byte_end":172586,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172591,"byte_end":172661,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172666,"byte_end":172742,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172747,"byte_end":172823,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172828,"byte_end":172898,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172903,"byte_end":172929,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172934,"byte_end":172937,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172942,"byte_end":172956,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172961,"byte_end":172964,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172969,"byte_end":172976,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":172981,"byte_end":173022,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173027,"byte_end":173070,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173075,"byte_end":173078,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173083,"byte_end":173126,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173131,"byte_end":173200,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173205,"byte_end":173235,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173240,"byte_end":173249,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173254,"byte_end":173261,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173974,"byte_end":173977,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"pub fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173508,"byte_end":173621,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173626,"byte_end":173629,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173634,"byte_end":173648,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173653,"byte_end":173656,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173661,"byte_end":173668,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173673,"byte_end":173714,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173719,"byte_end":173762,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173767,"byte_end":173770,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173775,"byte_end":173819,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173824,"byte_end":173893,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173898,"byte_end":173940,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173945,"byte_end":173954,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":173959,"byte_end":173966,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174664,"byte_end":174667,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"pub fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174192,"byte_end":174305,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174310,"byte_end":174313,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174318,"byte_end":174332,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174337,"byte_end":174340,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174345,"byte_end":174352,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174357,"byte_end":174398,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174403,"byte_end":174446,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174451,"byte_end":174454,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174459,"byte_end":174503,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174508,"byte_end":174580,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174585,"byte_end":174630,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174635,"byte_end":174644,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174649,"byte_end":174656,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175841,"byte_end":175848,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174882,"byte_end":174947,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174952,"byte_end":174955,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174960,"byte_end":174974,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174979,"byte_end":174982,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174987,"byte_end":174994,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":174999,"byte_end":175040,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175045,"byte_end":175076,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175081,"byte_end":175116,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175121,"byte_end":175141,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175146,"byte_end":175149,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175154,"byte_end":175193,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175198,"byte_end":175237,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175242,"byte_end":175281,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175286,"byte_end":175289,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175294,"byte_end":175321,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175326,"byte_end":175365,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175370,"byte_end":175409,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175414,"byte_end":175421,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175426,"byte_end":175453,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175458,"byte_end":175497,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175502,"byte_end":175541,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175546,"byte_end":175553,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175558,"byte_end":175585,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175590,"byte_end":175631,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175636,"byte_end":175677,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175682,"byte_end":175689,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175694,"byte_end":175697,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175702,"byte_end":175761,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175766,"byte_end":175807,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175812,"byte_end":175821,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":175826,"byte_end":175833,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177144,"byte_end":177161,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"pub fn flatten_unordered<impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                        impl Into<Option<usize>>)\n-> FlattenUnordered<Self> where Self::Item: Stream + Unpin, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176025,"byte_end":176096,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176101,"byte_end":176132,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176137,"byte_end":176140,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176145,"byte_end":176159,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176164,"byte_end":176167,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176172,"byte_end":176179,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176184,"byte_end":176225,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176230,"byte_end":176261,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176266,"byte_end":176301,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176306,"byte_end":176326,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176331,"byte_end":176334,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176339,"byte_end":176378,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176383,"byte_end":176422,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176427,"byte_end":176466,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176471,"byte_end":176474,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176479,"byte_end":176506,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176511,"byte_end":176550,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176555,"byte_end":176594,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176599,"byte_end":176606,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176611,"byte_end":176638,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176643,"byte_end":176682,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176687,"byte_end":176726,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176731,"byte_end":176738,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176743,"byte_end":176770,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176775,"byte_end":176816,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176821,"byte_end":176862,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176867,"byte_end":176874,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176879,"byte_end":176882,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176887,"byte_end":176964,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176969,"byte_end":176987,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":176992,"byte_end":176995,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177000,"byte_end":177041,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177046,"byte_end":177055,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177060,"byte_end":177067,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177072,"byte_end":177106,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177111,"byte_end":177136,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178447,"byte_end":178455,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177361,"byte_end":177433,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177438,"byte_end":177441,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177446,"byte_end":177523,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177528,"byte_end":177603,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177608,"byte_end":177684,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177689,"byte_end":177692,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177697,"byte_end":177780,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177785,"byte_end":177868,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177873,"byte_end":177876,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177881,"byte_end":177957,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":177962,"byte_end":178038,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178043,"byte_end":178064,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178069,"byte_end":178072,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178077,"byte_end":178091,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178096,"byte_end":178099,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178104,"byte_end":178111,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178116,"byte_end":178157,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178162,"byte_end":178205,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178210,"byte_end":178213,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178218,"byte_end":178255,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178260,"byte_end":178327,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178332,"byte_end":178335,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178340,"byte_end":178413,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178418,"byte_end":178427,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178432,"byte_end":178439,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180513,"byte_end":180531,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"pub fn flat_map_unordered<U, F,\n                          impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                         impl Into<Option<usize>>,\n                                                                         F)\n-> FlatMapUnordered<Self, U, F> where U: Stream + Unpin, F: FnMut(Self::Item)\n-> U, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178658,"byte_end":178729,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178734,"byte_end":178808,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178813,"byte_end":178827,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178832,"byte_end":178835,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178840,"byte_end":178907,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178912,"byte_end":178981,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":178986,"byte_end":179055,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179060,"byte_end":179127,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179132,"byte_end":179185,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179190,"byte_end":179193,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179198,"byte_end":179271,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179276,"byte_end":179353,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179358,"byte_end":179422,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179427,"byte_end":179494,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179499,"byte_end":179568,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179573,"byte_end":179645,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179650,"byte_end":179653,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179658,"byte_end":179728,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179733,"byte_end":179802,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179807,"byte_end":179860,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179865,"byte_end":179868,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179873,"byte_end":179939,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179944,"byte_end":179980,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179985,"byte_end":179988,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":179993,"byte_end":180007,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180012,"byte_end":180015,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180020,"byte_end":180027,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180032,"byte_end":180073,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180078,"byte_end":180121,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180126,"byte_end":180129,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180134,"byte_end":180170,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180175,"byte_end":180251,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180256,"byte_end":180310,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180315,"byte_end":180333,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180338,"byte_end":180341,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180346,"byte_end":180410,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180415,"byte_end":180424,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180429,"byte_end":180436,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180441,"byte_end":180475,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180480,"byte_end":180505,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181618,"byte_end":181622,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180809,"byte_end":180880,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180885,"byte_end":180915,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180920,"byte_end":180923,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":180928,"byte_end":181003,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181008,"byte_end":181079,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181084,"byte_end":181124,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181129,"byte_end":181132,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181137,"byte_end":181151,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181156,"byte_end":181159,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181164,"byte_end":181171,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181176,"byte_end":181217,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181222,"byte_end":181246,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181251,"byte_end":181294,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181299,"byte_end":181302,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181307,"byte_end":181345,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181350,"byte_end":181353,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181358,"byte_end":181402,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181407,"byte_end":181427,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181432,"byte_end":181495,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181500,"byte_end":181507,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181512,"byte_end":181515,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181520,"byte_end":181584,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181589,"byte_end":181598,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181603,"byte_end":181610,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182669,"byte_end":182679,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181891,"byte_end":181965,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181970,"byte_end":181993,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":181998,"byte_end":182001,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182006,"byte_end":182079,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182084,"byte_end":182156,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182161,"byte_end":182238,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182243,"byte_end":182254,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182259,"byte_end":182262,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182267,"byte_end":182281,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182286,"byte_end":182289,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182294,"byte_end":182301,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182306,"byte_end":182347,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182352,"byte_end":182376,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182381,"byte_end":182424,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182429,"byte_end":182432,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182437,"byte_end":182475,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182480,"byte_end":182483,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182488,"byte_end":182551,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182556,"byte_end":182559,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182564,"byte_end":182635,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182640,"byte_end":182649,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182654,"byte_end":182661,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183668,"byte_end":183678,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182913,"byte_end":182989,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":182994,"byte_end":183017,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183022,"byte_end":183025,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183030,"byte_end":183105,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183110,"byte_end":183182,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183187,"byte_end":183254,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183259,"byte_end":183262,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183267,"byte_end":183281,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183286,"byte_end":183289,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183294,"byte_end":183301,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183306,"byte_end":183347,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183352,"byte_end":183376,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183381,"byte_end":183424,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183429,"byte_end":183432,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183437,"byte_end":183475,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183480,"byte_end":183483,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183488,"byte_end":183551,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183556,"byte_end":183559,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183564,"byte_end":183634,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183639,"byte_end":183648,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183653,"byte_end":183660,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185194,"byte_end":185204,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183912,"byte_end":183982,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183987,"byte_end":183990,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":183995,"byte_end":184066,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184071,"byte_end":184143,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184148,"byte_end":184218,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184223,"byte_end":184226,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184231,"byte_end":184302,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184307,"byte_end":184393,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184398,"byte_end":184465,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184470,"byte_end":184534,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184539,"byte_end":184542,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184547,"byte_end":184561,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184566,"byte_end":184569,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184574,"byte_end":184581,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184586,"byte_end":184627,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184632,"byte_end":184656,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184661,"byte_end":184704,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184709,"byte_end":184737,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184742,"byte_end":184745,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184750,"byte_end":184788,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184793,"byte_end":184796,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184801,"byte_end":184819,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184824,"byte_end":184866,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184871,"byte_end":184886,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184891,"byte_end":184910,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184915,"byte_end":184940,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184945,"byte_end":184961,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184966,"byte_end":184993,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":184998,"byte_end":185007,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185012,"byte_end":185019,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185024,"byte_end":185027,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185032,"byte_end":185077,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185082,"byte_end":185085,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185090,"byte_end":185160,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185165,"byte_end":185174,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185179,"byte_end":185186,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3922},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186443,"byte_end":186451,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185385,"byte_end":185456,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185461,"byte_end":185504,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185509,"byte_end":185512,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185517,"byte_end":185592,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185597,"byte_end":185667,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185672,"byte_end":185710,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185715,"byte_end":185718,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185723,"byte_end":185798,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185803,"byte_end":185846,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185851,"byte_end":185854,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185859,"byte_end":185932,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185937,"byte_end":185980,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185985,"byte_end":185988,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":185993,"byte_end":186007,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186012,"byte_end":186015,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186020,"byte_end":186027,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186032,"byte_end":186073,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186078,"byte_end":186102,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186107,"byte_end":186150,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186155,"byte_end":186158,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186163,"byte_end":186181,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186186,"byte_end":186189,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186194,"byte_end":186199,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186204,"byte_end":186265,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186270,"byte_end":186292,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186297,"byte_end":186326,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186331,"byte_end":186342,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186347,"byte_end":186365,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186370,"byte_end":186375,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186380,"byte_end":186383,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186388,"byte_end":186409,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186414,"byte_end":186423,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186428,"byte_end":186435,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3925},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188613,"byte_end":188632,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186670,"byte_end":186741,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186746,"byte_end":186820,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186825,"byte_end":186839,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186844,"byte_end":186847,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186852,"byte_end":186915,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186920,"byte_end":186991,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":186996,"byte_end":187048,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187053,"byte_end":187056,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187061,"byte_end":187136,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187141,"byte_end":187211,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187216,"byte_end":187280,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187285,"byte_end":187288,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187293,"byte_end":187364,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187369,"byte_end":187439,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187444,"byte_end":187505,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187510,"byte_end":187577,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187582,"byte_end":187651,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187656,"byte_end":187728,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187733,"byte_end":187736,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187741,"byte_end":187816,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187821,"byte_end":187878,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187883,"byte_end":187886,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187891,"byte_end":187905,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187910,"byte_end":187913,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187918,"byte_end":187925,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187930,"byte_end":187971,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":187976,"byte_end":188010,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188015,"byte_end":188058,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188063,"byte_end":188066,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188071,"byte_end":188111,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188116,"byte_end":188156,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188161,"byte_end":188201,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188206,"byte_end":188209,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188214,"byte_end":188282,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188287,"byte_end":188309,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188314,"byte_end":188339,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188344,"byte_end":188374,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188379,"byte_end":188388,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188393,"byte_end":188399,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188404,"byte_end":188430,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188435,"byte_end":188461,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188466,"byte_end":188492,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188497,"byte_end":188511,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188516,"byte_end":188524,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188529,"byte_end":188536,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188541,"byte_end":188575,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188580,"byte_end":188605,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189457,"byte_end":189461,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":188949,"byte_end":189020,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189025,"byte_end":189028,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189033,"byte_end":189106,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189111,"byte_end":189146,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189151,"byte_end":189154,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189159,"byte_end":189173,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189178,"byte_end":189181,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189186,"byte_end":189193,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189198,"byte_end":189239,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189244,"byte_end":189287,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189292,"byte_end":189295,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189300,"byte_end":189346,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189351,"byte_end":189354,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189359,"byte_end":189423,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189428,"byte_end":189437,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189442,"byte_end":189449,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190126,"byte_end":190130,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189599,"byte_end":189671,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189676,"byte_end":189679,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189684,"byte_end":189757,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189762,"byte_end":189808,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189813,"byte_end":189816,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189821,"byte_end":189835,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189840,"byte_end":189843,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189848,"byte_end":189855,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189860,"byte_end":189901,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189906,"byte_end":189949,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189954,"byte_end":189957,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":189962,"byte_end":190008,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190013,"byte_end":190016,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190021,"byte_end":190092,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190097,"byte_end":190106,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190111,"byte_end":190118,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191751,"byte_end":191755,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190268,"byte_end":190339,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190344,"byte_end":190417,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190422,"byte_end":190460,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190465,"byte_end":190468,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190473,"byte_end":190527,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190532,"byte_end":190604,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190609,"byte_end":190685,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190690,"byte_end":190758,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190763,"byte_end":190839,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190844,"byte_end":190866,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190871,"byte_end":190874,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190879,"byte_end":190946,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":190951,"byte_end":191019,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191024,"byte_end":191037,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191042,"byte_end":191045,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191050,"byte_end":191064,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191069,"byte_end":191072,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191077,"byte_end":191084,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191089,"byte_end":191132,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191137,"byte_end":191180,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191185,"byte_end":191213,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191218,"byte_end":191221,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191226,"byte_end":191244,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191249,"byte_end":191287,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191292,"byte_end":191307,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191312,"byte_end":191329,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191334,"byte_end":191376,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191381,"byte_end":191416,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191421,"byte_end":191465,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191470,"byte_end":191479,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191484,"byte_end":191498,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191503,"byte_end":191506,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191511,"byte_end":191554,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191559,"byte_end":191596,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191601,"byte_end":191638,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191643,"byte_end":191677,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191682,"byte_end":191716,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191721,"byte_end":191731,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191736,"byte_end":191743,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192684,"byte_end":192690,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191880,"byte_end":191927,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191932,"byte_end":191935,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":191940,"byte_end":192014,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192019,"byte_end":192056,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192061,"byte_end":192064,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192069,"byte_end":192083,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192088,"byte_end":192091,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192096,"byte_end":192103,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192108,"byte_end":192149,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192154,"byte_end":192197,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192202,"byte_end":192205,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192210,"byte_end":192250,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192255,"byte_end":192258,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192263,"byte_end":192292,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192297,"byte_end":192325,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192330,"byte_end":192387,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192392,"byte_end":192419,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192424,"byte_end":192447,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192452,"byte_end":192455,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192460,"byte_end":192495,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192500,"byte_end":192528,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192533,"byte_end":192590,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192595,"byte_end":192622,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192627,"byte_end":192650,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192655,"byte_end":192664,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192669,"byte_end":192676,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194449,"byte_end":194461,"line_start":1310,"line_end":1310,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192741,"byte_end":192795,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192800,"byte_end":192803,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192808,"byte_end":192883,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192888,"byte_end":192891,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192896,"byte_end":192971,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":192976,"byte_end":193050,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193055,"byte_end":193129,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193134,"byte_end":193183,"line_start":1276,"line_end":1276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193188,"byte_end":193191,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193196,"byte_end":193271,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193276,"byte_end":193346,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193351,"byte_end":193418,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193423,"byte_end":193495,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193500,"byte_end":193569,"line_start":1282,"line_end":1282,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193574,"byte_end":193589,"line_start":1283,"line_end":1283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193594,"byte_end":193597,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193602,"byte_end":193666,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193671,"byte_end":193728,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193733,"byte_end":193736,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193741,"byte_end":193755,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193760,"byte_end":193763,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193768,"byte_end":193775,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193780,"byte_end":193821,"line_start":1291,"line_end":1291,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193826,"byte_end":193869,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193874,"byte_end":193877,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193882,"byte_end":193944,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193949,"byte_end":193979,"line_start":1295,"line_end":1295,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":193984,"byte_end":194038,"line_start":1296,"line_end":1296,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194043,"byte_end":194073,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194078,"byte_end":194127,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194132,"byte_end":194135,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194140,"byte_end":194202,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194207,"byte_end":194229,"line_start":1301,"line_end":1301,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194234,"byte_end":194254,"line_start":1302,"line_end":1302,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194259,"byte_end":194301,"line_start":1303,"line_end":1303,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194306,"byte_end":194311,"line_start":1304,"line_end":1304,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194316,"byte_end":194349,"line_start":1305,"line_end":1305,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194354,"byte_end":194387,"line_start":1306,"line_end":1306,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194392,"byte_end":194401,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194406,"byte_end":194413,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194418,"byte_end":194441,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194837,"byte_end":194842,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194608,"byte_end":194649,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194654,"byte_end":194657,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194662,"byte_end":194737,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194742,"byte_end":194799,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194804,"byte_end":194829,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195298,"byte_end":195309,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":194997,"byte_end":195038,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195043,"byte_end":195046,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195051,"byte_end":195110,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195115,"byte_end":195118,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195123,"byte_end":195198,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195203,"byte_end":195260,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195265,"byte_end":195290,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196202,"byte_end":196210,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195462,"byte_end":195525,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195530,"byte_end":195533,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195538,"byte_end":195613,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195618,"byte_end":195694,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195699,"byte_end":195772,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195777,"byte_end":195850,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195855,"byte_end":195897,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195902,"byte_end":195905,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195910,"byte_end":195975,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195980,"byte_end":195983,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":195988,"byte_end":196063,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196068,"byte_end":196125,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196130,"byte_end":196164,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196169,"byte_end":196194,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197890,"byte_end":197906,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196404,"byte_end":196479,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196484,"byte_end":196487,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196492,"byte_end":196567,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196572,"byte_end":196646,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196651,"byte_end":196723,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196728,"byte_end":196802,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196807,"byte_end":196836,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196841,"byte_end":196844,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196849,"byte_end":196914,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196919,"byte_end":196922,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":196927,"byte_end":197002,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197007,"byte_end":197064,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197069,"byte_end":197072,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197077,"byte_end":197091,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197096,"byte_end":197099,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197104,"byte_end":197111,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197116,"byte_end":197157,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197162,"byte_end":197196,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197201,"byte_end":197244,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197249,"byte_end":197252,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197257,"byte_end":197307,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197312,"byte_end":197362,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197367,"byte_end":197370,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197375,"byte_end":197442,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197447,"byte_end":197509,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197514,"byte_end":197517,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197522,"byte_end":197547,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197552,"byte_end":197606,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197611,"byte_end":197614,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197619,"byte_end":197644,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197649,"byte_end":197703,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197708,"byte_end":197711,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197716,"byte_end":197760,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197765,"byte_end":197801,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197806,"byte_end":197813,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197818,"byte_end":197852,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":197857,"byte_end":197882,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198802,"byte_end":198805,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198114,"byte_end":198162,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198167,"byte_end":198170,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198175,"byte_end":198248,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198253,"byte_end":198325,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198330,"byte_end":198343,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198348,"byte_end":198351,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198356,"byte_end":198370,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198375,"byte_end":198378,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198383,"byte_end":198390,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198395,"byte_end":198436,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198441,"byte_end":198484,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198489,"byte_end":198492,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198497,"byte_end":198535,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198540,"byte_end":198579,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198584,"byte_end":198587,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198592,"byte_end":198626,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198631,"byte_end":198672,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198677,"byte_end":198705,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198710,"byte_end":198760,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198765,"byte_end":198774,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198779,"byte_end":198786,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198791,"byte_end":198794,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199713,"byte_end":199718,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":198986,"byte_end":199023,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199028,"byte_end":199031,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199036,"byte_end":199107,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199112,"byte_end":199188,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199193,"byte_end":199196,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199201,"byte_end":199208,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199213,"byte_end":199254,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199259,"byte_end":199302,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199307,"byte_end":199310,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199315,"byte_end":199372,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199377,"byte_end":199433,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199438,"byte_end":199441,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199446,"byte_end":199486,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199491,"byte_end":199494,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199499,"byte_end":199547,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199552,"byte_end":199580,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199585,"byte_end":199600,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199605,"byte_end":199624,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199629,"byte_end":199647,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199652,"byte_end":199667,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199672,"byte_end":199679,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199684,"byte_end":199693,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199698,"byte_end":199705,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200056,"byte_end":200064,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199910,"byte_end":199965,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199970,"byte_end":199973,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":199978,"byte_end":200048,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201099,"byte_end":201105,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200197,"byte_end":200264,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200269,"byte_end":200272,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200277,"byte_end":200351,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200356,"byte_end":200428,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200433,"byte_end":200485,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200490,"byte_end":200493,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200498,"byte_end":200571,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200576,"byte_end":200650,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200655,"byte_end":200730,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200735,"byte_end":200807,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200812,"byte_end":200824,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200829,"byte_end":200832,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200837,"byte_end":200912,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200917,"byte_end":200974,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200979,"byte_end":200982,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":200987,"byte_end":200999,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201004,"byte_end":201007,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201012,"byte_end":201061,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201066,"byte_end":201091,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3946},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202202,"byte_end":202214,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201266,"byte_end":201339,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201344,"byte_end":201347,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201352,"byte_end":201425,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201430,"byte_end":201500,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201505,"byte_end":201580,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201585,"byte_end":201662,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201667,"byte_end":201695,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201700,"byte_end":201703,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201708,"byte_end":201781,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201786,"byte_end":201861,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201866,"byte_end":201927,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201932,"byte_end":201935,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":201940,"byte_end":202015,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202020,"byte_end":202077,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202082,"byte_end":202085,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202090,"byte_end":202102,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202107,"byte_end":202110,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202115,"byte_end":202164,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":202169,"byte_end":202194,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205011,"byte_end":205018,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204708,"byte_end":204781,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204786,"byte_end":204789,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204794,"byte_end":204863,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204868,"byte_end":204937,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":204942,"byte_end":205003,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205474,"byte_end":205485,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205195,"byte_end":205270,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205275,"byte_end":205296,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205301,"byte_end":205304,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205309,"byte_end":205389,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205394,"byte_end":205466,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205938,"byte_end":205950,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205659,"byte_end":205735,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205740,"byte_end":205761,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205766,"byte_end":205769,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205774,"byte_end":205853,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":205858,"byte_end":205930,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3953},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206226,"byte_end":206241,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206125,"byte_end":206196,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206201,"byte_end":206218,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3954},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208342,"byte_end":208358,"line_start":1677,"line_end":1677,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":3862},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206388,"byte_end":206463,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206468,"byte_end":206478,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206483,"byte_end":206486,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206491,"byte_end":206564,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206569,"byte_end":206637,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206642,"byte_end":206690,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206695,"byte_end":206770,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206775,"byte_end":206851,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206856,"byte_end":206882,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206887,"byte_end":206890,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206895,"byte_end":206968,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":206973,"byte_end":207043,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207048,"byte_end":207088,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207093,"byte_end":207096,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207101,"byte_end":207155,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207160,"byte_end":207244,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207249,"byte_end":207252,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207257,"byte_end":207271,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207276,"byte_end":207279,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207284,"byte_end":207291,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207296,"byte_end":207337,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207342,"byte_end":207376,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207381,"byte_end":207436,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207441,"byte_end":207444,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207449,"byte_end":207484,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207489,"byte_end":207539,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207544,"byte_end":207566,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207571,"byte_end":207581,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207586,"byte_end":207603,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207608,"byte_end":207634,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207639,"byte_end":207694,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207699,"byte_end":207728,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207733,"byte_end":207796,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207801,"byte_end":207847,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207852,"byte_end":207866,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207871,"byte_end":207940,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207945,"byte_end":207970,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":207975,"byte_end":208028,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208033,"byte_end":208062,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208067,"byte_end":208080,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208085,"byte_end":208155,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208160,"byte_end":208219,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208224,"byte_end":208254,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208259,"byte_end":208268,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208273,"byte_end":208278,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208283,"byte_end":208308,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208313,"byte_end":208322,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":208327,"byte_end":208334,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":13454},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":360819,"byte_end":360826,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13458},{"krate":0,"index":13459},{"krate":0,"index":13460}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13518},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":322557,"byte_end":322564,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13521}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13587},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":322812,"byte_end":322821,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13590}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13656},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":323122,"byte_end":323132,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13659}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13722},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363568,"byte_end":363578,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":13724}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13765},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":323558,"byte_end":323563,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":13768}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13834},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":323840,"byte_end":323846,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":13837}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13900},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":364926,"byte_end":364932,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":13904},{"krate":0,"index":13905},{"krate":0,"index":13906}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13961},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367768,"byte_end":367775,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":13964}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367601,"byte_end":367671,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367689,"byte_end":367756,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":13969},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":368860,"byte_end":368870,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":13973},{"krate":0,"index":13974},{"krate":0,"index":13975}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14026},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":370756,"byte_end":370765,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":14030},{"krate":0,"index":14031},{"krate":0,"index":14032},{"krate":0,"index":14033}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14091},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":373900,"byte_end":373912,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":14095},{"krate":0,"index":14096},{"krate":0,"index":14097}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14152},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":376917,"byte_end":376927,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":14154},{"krate":0,"index":14155}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14196},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379105,"byte_end":379115,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":14199},{"krate":0,"index":14200}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14245},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":380464,"byte_end":380473,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":14247},{"krate":0,"index":14248}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14285},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":381984,"byte_end":381993,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":14287},{"krate":0,"index":14288},{"krate":0,"index":14289}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14333},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385245,"byte_end":385259,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385022,"byte_end":385106,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385107,"byte_end":385110,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385111,"byte_end":385208,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14337},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385266,"byte_end":385276,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14338},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385278,"byte_end":385283,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14354},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386121,"byte_end":386128,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14359},{"krate":0,"index":14360},{"krate":0,"index":14361},{"krate":0,"index":14362}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":4795},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390576,"byte_end":390586,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":388719,"byte_end":388795,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":388796,"byte_end":388799,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":388800,"byte_end":388876,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":388877,"byte_end":388947,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":388948,"byte_end":389007,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389008,"byte_end":389011,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389012,"byte_end":389090,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389091,"byte_end":389168,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389169,"byte_end":389233,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389234,"byte_end":389237,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389238,"byte_end":389310,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389311,"byte_end":389389,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389390,"byte_end":389419,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389420,"byte_end":389423,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389424,"byte_end":389501,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389502,"byte_end":389566,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389567,"byte_end":389619,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389620,"byte_end":389623,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389624,"byte_end":389701,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389702,"byte_end":389774,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389775,"byte_end":389844,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389845,"byte_end":389923,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389924,"byte_end":389927,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389928,"byte_end":389941,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389942,"byte_end":389945,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389946,"byte_end":389953,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389954,"byte_end":389987,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":389988,"byte_end":390011,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390012,"byte_end":390053,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390054,"byte_end":390100,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390101,"byte_end":390104,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390105,"byte_end":390164,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390165,"byte_end":390187,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390188,"byte_end":390222,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390223,"byte_end":390232,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390233,"byte_end":390236,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390237,"byte_end":390260,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390261,"byte_end":390300,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390301,"byte_end":390337,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390338,"byte_end":390381,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390382,"byte_end":390398,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390399,"byte_end":390419,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390420,"byte_end":390429,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390430,"byte_end":390437,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390438,"byte_end":390441,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390442,"byte_end":390507,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390508,"byte_end":390550,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390551,"byte_end":390560,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390561,"byte_end":390568,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14423},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":390949,"byte_end":390958,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14427},{"krate":0,"index":14428},{"krate":0,"index":14429}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14480},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":392866,"byte_end":392878,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14484},{"krate":0,"index":14485},{"krate":0,"index":14486},{"krate":0,"index":14487},{"krate":0,"index":14488}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14549},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":396422,"byte_end":396434,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14553},{"krate":0,"index":14554},{"krate":0,"index":14555},{"krate":0,"index":14556},{"krate":0,"index":14557}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14618},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":400210,"byte_end":400228,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14620},{"krate":0,"index":14621},{"krate":0,"index":14622}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14666},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":402768,"byte_end":402779,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14668},{"krate":0,"index":14669},{"krate":0,"index":14670}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14714},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405311,"byte_end":405331,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":14718},{"krate":0,"index":14719},{"krate":0,"index":14720},{"krate":0,"index":14721}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14775},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409593,"byte_end":409606,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":14777},{"krate":0,"index":14778}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409385,"byte_end":409469,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409487,"byte_end":409535,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":5170},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327055,"byte_end":327067,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5171},{"krate":0,"index":5173},{"krate":0,"index":5176},{"krate":0,"index":5179},{"krate":0,"index":5182},{"krate":0,"index":5185},{"krate":0,"index":5187},{"krate":0,"index":5189},{"krate":0,"index":5190},{"krate":0,"index":5191},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5204},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5210},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":326993,"byte_end":327044,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5171},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327609,"byte_end":327617,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327085,"byte_end":327159,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327164,"byte_end":327190,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327195,"byte_end":327198,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327203,"byte_end":327217,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327222,"byte_end":327225,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327230,"byte_end":327237,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327242,"byte_end":327283,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327288,"byte_end":327334,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327339,"byte_end":327342,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327347,"byte_end":327367,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327372,"byte_end":327417,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327422,"byte_end":327453,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327458,"byte_end":327461,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327466,"byte_end":327520,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327525,"byte_end":327576,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327581,"byte_end":327589,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327594,"byte_end":327601,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5173},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328313,"byte_end":328319,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327793,"byte_end":327866,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327871,"byte_end":327902,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327907,"byte_end":327910,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327915,"byte_end":327929,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327934,"byte_end":327937,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327942,"byte_end":327949,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327954,"byte_end":327995,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328000,"byte_end":328046,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328051,"byte_end":328054,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328059,"byte_end":328079,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328084,"byte_end":328125,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328130,"byte_end":328161,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328166,"byte_end":328169,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328174,"byte_end":328227,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328232,"byte_end":328280,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328285,"byte_end":328293,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328298,"byte_end":328305,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5176},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329028,"byte_end":329035,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328509,"byte_end":328580,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328585,"byte_end":328616,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328621,"byte_end":328624,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328629,"byte_end":328643,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328648,"byte_end":328651,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328656,"byte_end":328663,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328668,"byte_end":328709,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328714,"byte_end":328760,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328765,"byte_end":328768,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328773,"byte_end":328793,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328798,"byte_end":328839,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328844,"byte_end":328876,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328881,"byte_end":328884,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328889,"byte_end":328942,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":328947,"byte_end":328995,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329000,"byte_end":329008,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329013,"byte_end":329020,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5179},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330640,"byte_end":330648,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329227,"byte_end":329303,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329308,"byte_end":329348,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329353,"byte_end":329356,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329361,"byte_end":329437,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329442,"byte_end":329518,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329523,"byte_end":329596,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329601,"byte_end":329643,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329648,"byte_end":329651,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329656,"byte_end":329729,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329734,"byte_end":329765,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329770,"byte_end":329773,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329778,"byte_end":329852,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329857,"byte_end":329931,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329936,"byte_end":329952,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329957,"byte_end":329960,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":329965,"byte_end":330036,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330041,"byte_end":330067,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330072,"byte_end":330075,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330080,"byte_end":330152,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330157,"byte_end":330206,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330211,"byte_end":330214,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330219,"byte_end":330233,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330238,"byte_end":330241,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330246,"byte_end":330253,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330258,"byte_end":330289,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330294,"byte_end":330318,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330323,"byte_end":330361,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330366,"byte_end":330369,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330374,"byte_end":330430,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330435,"byte_end":330438,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330443,"byte_end":330478,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330483,"byte_end":330522,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330527,"byte_end":330551,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330556,"byte_end":330572,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330577,"byte_end":330593,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330598,"byte_end":330608,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330613,"byte_end":330620,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330625,"byte_end":330632,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5182},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331800,"byte_end":331807,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330901,"byte_end":330966,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":330971,"byte_end":331020,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331025,"byte_end":331028,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331033,"byte_end":331112,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331117,"byte_end":331191,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331196,"byte_end":331272,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331277,"byte_end":331322,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331327,"byte_end":331330,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331335,"byte_end":331410,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331415,"byte_end":331455,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331460,"byte_end":331463,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331468,"byte_end":331577,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331582,"byte_end":331656,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331661,"byte_end":331677,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331682,"byte_end":331685,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331690,"byte_end":331761,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":331766,"byte_end":331792,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5185},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332359,"byte_end":332369,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332056,"byte_end":332130,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332135,"byte_end":332145,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332150,"byte_end":332153,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332158,"byte_end":332228,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332233,"byte_end":332309,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332314,"byte_end":332351,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5187},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332858,"byte_end":332869,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332567,"byte_end":332646,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332651,"byte_end":332654,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332659,"byte_end":332729,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332734,"byte_end":332808,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":332813,"byte_end":332850,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333790,"byte_end":333801,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333072,"byte_end":333125,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333130,"byte_end":333174,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333179,"byte_end":333182,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333187,"byte_end":333236,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333241,"byte_end":333314,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333319,"byte_end":333339,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333344,"byte_end":333347,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333352,"byte_end":333366,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333371,"byte_end":333374,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333379,"byte_end":333386,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333391,"byte_end":333450,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333455,"byte_end":333458,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333463,"byte_end":333482,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333487,"byte_end":333505,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333510,"byte_end":333582,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333587,"byte_end":333617,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333622,"byte_end":333629,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333634,"byte_end":333708,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333713,"byte_end":333716,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333721,"byte_end":333770,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333775,"byte_end":333782,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5190},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334696,"byte_end":334704,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":333957,"byte_end":334031,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334036,"byte_end":334110,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334115,"byte_end":334127,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334132,"byte_end":334135,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334140,"byte_end":334207,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334212,"byte_end":334284,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334289,"byte_end":334328,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334333,"byte_end":334336,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334341,"byte_end":334355,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334360,"byte_end":334363,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334368,"byte_end":334375,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334380,"byte_end":334421,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334426,"byte_end":334472,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334477,"byte_end":334480,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334485,"byte_end":334542,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334547,"byte_end":334550,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334555,"byte_end":334609,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334614,"byte_end":334663,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334668,"byte_end":334676,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334681,"byte_end":334688,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5191},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336056,"byte_end":336068,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334871,"byte_end":334940,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":334945,"byte_end":335001,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335006,"byte_end":335009,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335014,"byte_end":335089,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335094,"byte_end":335164,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335169,"byte_end":335207,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335212,"byte_end":335215,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335220,"byte_end":335298,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335303,"byte_end":335363,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335368,"byte_end":335425,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335430,"byte_end":335497,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335502,"byte_end":335532,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335537,"byte_end":335540,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335545,"byte_end":335559,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335564,"byte_end":335567,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335572,"byte_end":335579,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335584,"byte_end":335625,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335630,"byte_end":335654,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335659,"byte_end":335705,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335710,"byte_end":335713,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335718,"byte_end":335739,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335744,"byte_end":335747,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335752,"byte_end":335757,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335762,"byte_end":335823,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335828,"byte_end":335850,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335855,"byte_end":335919,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335924,"byte_end":335935,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335940,"byte_end":335979,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335984,"byte_end":335989,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":335994,"byte_end":335997,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336002,"byte_end":336023,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336028,"byte_end":336036,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336041,"byte_end":336048,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5194},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337081,"byte_end":337095,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336332,"byte_end":336406,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336411,"byte_end":336434,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336439,"byte_end":336442,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336447,"byte_end":336478,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336483,"byte_end":336560,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336565,"byte_end":336594,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336599,"byte_end":336602,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336607,"byte_end":336621,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336626,"byte_end":336629,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336634,"byte_end":336641,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336646,"byte_end":336687,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336692,"byte_end":336716,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336721,"byte_end":336767,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336772,"byte_end":336775,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336780,"byte_end":336849,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336854,"byte_end":336924,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336929,"byte_end":336932,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":336937,"byte_end":337004,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337009,"byte_end":337048,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337053,"byte_end":337061,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337066,"byte_end":337073,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5197},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338128,"byte_end":338142,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337372,"byte_end":337446,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337451,"byte_end":337474,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337479,"byte_end":337482,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337487,"byte_end":337518,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337523,"byte_end":337600,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337605,"byte_end":337634,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337639,"byte_end":337642,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337647,"byte_end":337661,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337666,"byte_end":337669,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337674,"byte_end":337681,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337686,"byte_end":337727,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337732,"byte_end":337756,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337761,"byte_end":337807,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337812,"byte_end":337815,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337820,"byte_end":337896,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337901,"byte_end":337971,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337976,"byte_end":337979,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":337984,"byte_end":338051,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338056,"byte_end":338095,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338100,"byte_end":338108,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338113,"byte_end":338120,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5200},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340057,"byte_end":340080,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338419,"byte_end":338501,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338506,"byte_end":338580,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338585,"byte_end":338635,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338640,"byte_end":338643,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338648,"byte_end":338670,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338675,"byte_end":338761,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338766,"byte_end":338851,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338856,"byte_end":338884,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338889,"byte_end":338892,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338897,"byte_end":338972,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":338977,"byte_end":339034,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339039,"byte_end":339042,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339047,"byte_end":339061,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339066,"byte_end":339069,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339074,"byte_end":339081,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339086,"byte_end":339127,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339132,"byte_end":339166,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339171,"byte_end":339228,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339233,"byte_end":339236,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339241,"byte_end":339281,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339286,"byte_end":339326,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339331,"byte_end":339372,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339377,"byte_end":339380,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339385,"byte_end":339436,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339441,"byte_end":339494,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339499,"byte_end":339521,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339526,"byte_end":339551,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339556,"byte_end":339618,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339623,"byte_end":339638,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339643,"byte_end":339652,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339657,"byte_end":339663,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339668,"byte_end":339671,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339676,"byte_end":339702,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339707,"byte_end":339774,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339779,"byte_end":339793,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339798,"byte_end":339801,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339806,"byte_end":339867,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339872,"byte_end":339900,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339905,"byte_end":339955,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339960,"byte_end":339968,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339973,"byte_end":339980,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":339985,"byte_end":340019,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340024,"byte_end":340049,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5204},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341529,"byte_end":341540,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340490,"byte_end":340542,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340547,"byte_end":340614,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340619,"byte_end":340622,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340627,"byte_end":340701,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340706,"byte_end":340787,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340792,"byte_end":340862,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340867,"byte_end":340870,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340875,"byte_end":340943,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340948,"byte_end":340951,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340956,"byte_end":340970,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340975,"byte_end":340978,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340983,"byte_end":340990,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":340995,"byte_end":341036,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341041,"byte_end":341072,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341077,"byte_end":341115,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341120,"byte_end":341140,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341145,"byte_end":341148,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341153,"byte_end":341190,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341195,"byte_end":341198,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341203,"byte_end":341230,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341235,"byte_end":341259,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341264,"byte_end":341310,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341315,"byte_end":341324,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341329,"byte_end":341372,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341377,"byte_end":341384,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341389,"byte_end":341392,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341397,"byte_end":341460,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341465,"byte_end":341496,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341501,"byte_end":341509,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341514,"byte_end":341521,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5206},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343355,"byte_end":343365,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"pub fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341723,"byte_end":341801,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341806,"byte_end":341809,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341814,"byte_end":341899,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341904,"byte_end":341976,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":341981,"byte_end":342033,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342038,"byte_end":342041,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342046,"byte_end":342119,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342124,"byte_end":342198,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342203,"byte_end":342278,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342283,"byte_end":342355,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342360,"byte_end":342372,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342377,"byte_end":342380,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342385,"byte_end":342460,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342465,"byte_end":342522,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342527,"byte_end":342530,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342535,"byte_end":342566,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342571,"byte_end":342640,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342645,"byte_end":342674,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342679,"byte_end":342682,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342687,"byte_end":342701,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342706,"byte_end":342709,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342714,"byte_end":342721,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342726,"byte_end":342767,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342772,"byte_end":342834,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342839,"byte_end":342842,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342847,"byte_end":342938,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342943,"byte_end":342985,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342990,"byte_end":342993,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":342998,"byte_end":343060,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343065,"byte_end":343138,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343143,"byte_end":343205,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343210,"byte_end":343218,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343223,"byte_end":343230,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343235,"byte_end":343238,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343243,"byte_end":343255,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343260,"byte_end":343263,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343268,"byte_end":343317,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343322,"byte_end":343347,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344888,"byte_end":344898,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343600,"byte_end":343673,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343678,"byte_end":343712,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343717,"byte_end":343720,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343725,"byte_end":343800,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343805,"byte_end":343880,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343885,"byte_end":343958,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":343963,"byte_end":344034,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344039,"byte_end":344089,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344094,"byte_end":344097,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344102,"byte_end":344173,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344178,"byte_end":344181,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344186,"byte_end":344262,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344267,"byte_end":344337,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344342,"byte_end":344367,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344372,"byte_end":344375,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344380,"byte_end":344394,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344399,"byte_end":344406,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344411,"byte_end":344452,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344457,"byte_end":344481,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344486,"byte_end":344543,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344548,"byte_end":344551,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344556,"byte_end":344636,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344641,"byte_end":344684,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344689,"byte_end":344722,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344727,"byte_end":344734,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344739,"byte_end":344742,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344747,"byte_end":344795,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344800,"byte_end":344855,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344860,"byte_end":344868,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":344873,"byte_end":344880,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5210},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346525,"byte_end":346539,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345149,"byte_end":345211,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345216,"byte_end":345284,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345289,"byte_end":345323,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345328,"byte_end":345331,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345336,"byte_end":345411,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345416,"byte_end":345491,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345496,"byte_end":345572,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345577,"byte_end":345642,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345647,"byte_end":345650,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345655,"byte_end":345726,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345731,"byte_end":345734,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345739,"byte_end":345815,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345820,"byte_end":345894,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345899,"byte_end":345924,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345929,"byte_end":345932,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345937,"byte_end":345951,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345956,"byte_end":345963,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":345968,"byte_end":346009,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346014,"byte_end":346071,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346076,"byte_end":346101,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346106,"byte_end":346109,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346114,"byte_end":346184,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346189,"byte_end":346244,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346249,"byte_end":346311,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346316,"byte_end":346331,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346336,"byte_end":346343,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346348,"byte_end":346351,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346356,"byte_end":346377,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346382,"byte_end":346431,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346436,"byte_end":346492,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346497,"byte_end":346505,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346510,"byte_end":346517,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5214},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348435,"byte_end":348446,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346816,"byte_end":346881,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346886,"byte_end":346889,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346894,"byte_end":346967,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":346972,"byte_end":347045,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347050,"byte_end":347123,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347128,"byte_end":347198,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347203,"byte_end":347206,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347211,"byte_end":347225,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347230,"byte_end":347233,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347238,"byte_end":347245,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347250,"byte_end":347291,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347296,"byte_end":347327,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347332,"byte_end":347383,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347388,"byte_end":347408,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347413,"byte_end":347416,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347421,"byte_end":347460,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347465,"byte_end":347504,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347509,"byte_end":347548,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347553,"byte_end":347556,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347561,"byte_end":347588,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347593,"byte_end":347636,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347641,"byte_end":347648,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347653,"byte_end":347680,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347685,"byte_end":347728,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347733,"byte_end":347777,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347782,"byte_end":347825,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347830,"byte_end":347837,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347842,"byte_end":347869,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347874,"byte_end":347919,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347924,"byte_end":347969,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":347974,"byte_end":348018,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348023,"byte_end":348030,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348035,"byte_end":348038,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348043,"byte_end":348082,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348087,"byte_end":348136,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348141,"byte_end":348190,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348195,"byte_end":348245,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348250,"byte_end":348299,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348304,"byte_end":348354,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348359,"byte_end":348401,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348406,"byte_end":348415,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348420,"byte_end":348427,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5215},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350038,"byte_end":350046,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348751,"byte_end":348821,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348826,"byte_end":348886,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348891,"byte_end":348894,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348899,"byte_end":348969,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":348974,"byte_end":349050,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349055,"byte_end":349131,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349136,"byte_end":349206,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349211,"byte_end":349237,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349242,"byte_end":349245,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349250,"byte_end":349330,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349335,"byte_end":349404,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349409,"byte_end":349430,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349435,"byte_end":349438,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349443,"byte_end":349457,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349462,"byte_end":349465,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349470,"byte_end":349477,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349482,"byte_end":349523,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349528,"byte_end":349574,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349579,"byte_end":349582,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349587,"byte_end":349656,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349661,"byte_end":349738,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349743,"byte_end":349776,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349781,"byte_end":349784,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349789,"byte_end":349875,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349880,"byte_end":349966,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":349971,"byte_end":350005,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350010,"byte_end":350018,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350023,"byte_end":350030,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5219},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351572,"byte_end":351582,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350326,"byte_end":350388,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350393,"byte_end":350468,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350473,"byte_end":350476,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350481,"byte_end":350552,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350557,"byte_end":350633,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350638,"byte_end":350677,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350682,"byte_end":350685,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350690,"byte_end":350776,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350781,"byte_end":350784,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350789,"byte_end":350873,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350878,"byte_end":350934,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350939,"byte_end":350942,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350947,"byte_end":350961,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350966,"byte_end":350969,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350974,"byte_end":350981,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":350986,"byte_end":351027,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351032,"byte_end":351063,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351068,"byte_end":351106,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351111,"byte_end":351131,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351136,"byte_end":351139,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351144,"byte_end":351205,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351210,"byte_end":351213,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351218,"byte_end":351245,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351250,"byte_end":351281,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351286,"byte_end":351312,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351317,"byte_end":351387,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351392,"byte_end":351401,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351406,"byte_end":351413,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351418,"byte_end":351421,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351426,"byte_end":351465,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351470,"byte_end":351473,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351478,"byte_end":351538,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351543,"byte_end":351552,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351557,"byte_end":351564,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5220},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354304,"byte_end":354324,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351836,"byte_end":351914,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351919,"byte_end":351922,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":351927,"byte_end":352032,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352037,"byte_end":352080,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352085,"byte_end":352088,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352093,"byte_end":352161,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352166,"byte_end":352239,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352244,"byte_end":352300,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352305,"byte_end":352308,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352313,"byte_end":352388,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352393,"byte_end":352466,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352471,"byte_end":352536,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352541,"byte_end":352544,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352549,"byte_end":352624,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352629,"byte_end":352686,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352691,"byte_end":352694,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352699,"byte_end":352713,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352718,"byte_end":352721,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352726,"byte_end":352778,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352783,"byte_end":352790,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352795,"byte_end":352836,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352841,"byte_end":352875,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352880,"byte_end":352937,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352942,"byte_end":352945,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":352950,"byte_end":353000,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353005,"byte_end":353055,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353060,"byte_end":353063,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353068,"byte_end":353143,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353148,"byte_end":353151,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353156,"byte_end":353222,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353227,"byte_end":353230,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353235,"byte_end":353260,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353265,"byte_end":353319,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353324,"byte_end":353327,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353332,"byte_end":353357,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353362,"byte_end":353416,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353421,"byte_end":353424,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353429,"byte_end":353473,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353478,"byte_end":353514,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353519,"byte_end":353526,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353531,"byte_end":353534,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353539,"byte_end":353599,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353604,"byte_end":353611,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353616,"byte_end":353657,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353662,"byte_end":353693,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353698,"byte_end":353749,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353754,"byte_end":353757,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353762,"byte_end":353816,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353821,"byte_end":353887,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353892,"byte_end":353895,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353900,"byte_end":353949,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":353954,"byte_end":354008,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354013,"byte_end":354016,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354021,"byte_end":354074,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354079,"byte_end":354151,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354156,"byte_end":354215,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354220,"byte_end":354227,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354232,"byte_end":354266,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354271,"byte_end":354296,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5221},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357305,"byte_end":357317,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"pub fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354601,"byte_end":354667,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354672,"byte_end":354675,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354680,"byte_end":354785,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354790,"byte_end":354833,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354838,"byte_end":354841,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354846,"byte_end":354914,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the order. If the underlying stream returns an error, it will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":354919,"byte_end":354995,"line_start":921,"line_end":921,"column_start":5,"column_end":81}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355000,"byte_end":355030,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355035,"byte_end":355038,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355043,"byte_end":355118,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355123,"byte_end":355196,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355201,"byte_end":355266,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355271,"byte_end":355274,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355279,"byte_end":355354,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355359,"byte_end":355416,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355421,"byte_end":355424,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355429,"byte_end":355443,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355448,"byte_end":355451,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355456,"byte_end":355506,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355511,"byte_end":355518,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355523,"byte_end":355564,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355569,"byte_end":355603,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355608,"byte_end":355638,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355643,"byte_end":355700,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355705,"byte_end":355708,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355713,"byte_end":355763,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355768,"byte_end":355818,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355823,"byte_end":355826,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355831,"byte_end":355870,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355875,"byte_end":355954,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355959,"byte_end":355962,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":355967,"byte_end":356029,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356034,"byte_end":356037,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356042,"byte_end":356105,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356110,"byte_end":356113,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356118,"byte_end":356147,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356152,"byte_end":356215,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356220,"byte_end":356250,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356255,"byte_end":356269,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356274,"byte_end":356277,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356282,"byte_end":356307,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356312,"byte_end":356366,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356371,"byte_end":356425,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356430,"byte_end":356433,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356438,"byte_end":356482,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356487,"byte_end":356523,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356528,"byte_end":356535,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356540,"byte_end":356543,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356548,"byte_end":356608,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356613,"byte_end":356620,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356625,"byte_end":356666,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356671,"byte_end":356702,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356707,"byte_end":356758,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356763,"byte_end":356766,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356771,"byte_end":356825,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356830,"byte_end":356888,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356893,"byte_end":356896,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356901,"byte_end":356950,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":356955,"byte_end":357009,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357014,"byte_end":357017,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357022,"byte_end":357075,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357080,"byte_end":357152,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357157,"byte_end":357216,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357221,"byte_end":357228,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357233,"byte_end":357267,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357272,"byte_end":357297,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357772,"byte_end":357791,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357664,"byte_end":357742,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":357747,"byte_end":357764,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360152,"byte_end":360167,"line_start":1062,"line_end":1062,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5170},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":358930,"byte_end":359012,"line_start":1034,"line_end":1034,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359017,"byte_end":359020,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359025,"byte_end":359140,"line_start":1036,"line_end":1036,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359145,"byte_end":359236,"line_start":1037,"line_end":1037,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359241,"byte_end":359331,"line_start":1038,"line_end":1038,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359336,"byte_end":359421,"line_start":1039,"line_end":1039,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359426,"byte_end":359429,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359434,"byte_end":359498,"line_start":1041,"line_end":1041,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359503,"byte_end":359560,"line_start":1042,"line_end":1042,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359565,"byte_end":359568,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359573,"byte_end":359587,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359592,"byte_end":359595,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359600,"byte_end":359607,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359612,"byte_end":359653,"line_start":1047,"line_end":1047,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359658,"byte_end":359704,"line_start":1048,"line_end":1048,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359709,"byte_end":359743,"line_start":1049,"line_end":1049,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359748,"byte_end":359751,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359756,"byte_end":359817,"line_start":1051,"line_end":1051,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359822,"byte_end":359868,"line_start":1052,"line_end":1052,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359873,"byte_end":359902,"line_start":1053,"line_end":1053,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359907,"byte_end":359910,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359915,"byte_end":359971,"line_start":1055,"line_end":1055,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":359976,"byte_end":360014,"line_start":1056,"line_end":1056,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360019,"byte_end":360027,"line_start":1057,"line_end":1057,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360032,"byte_end":360039,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360044,"byte_end":360066,"line_start":1059,"line_end":1059,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":360121,"byte_end":360144,"line_start":1061,"line_end":1061,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":14794},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414467,"byte_end":414471,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":14796}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414345,"byte_end":414382,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414407,"byte_end":414455,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5327},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414989,"byte_end":414993,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414523,"byte_end":414587,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414588,"byte_end":414616,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414617,"byte_end":414620,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414621,"byte_end":414694,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414695,"byte_end":414750,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414751,"byte_end":414754,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414755,"byte_end":414762,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414763,"byte_end":414804,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414805,"byte_end":414848,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414849,"byte_end":414852,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414853,"byte_end":414897,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414898,"byte_end":414963,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414964,"byte_end":414973,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414974,"byte_end":414981,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14803},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415684,"byte_end":415690,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":14805}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415560,"byte_end":415599,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415624,"byte_end":415672,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5362},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416214,"byte_end":416220,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415712,"byte_end":415772,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415773,"byte_end":415776,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415777,"byte_end":415844,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415845,"byte_end":415917,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415918,"byte_end":415975,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415976,"byte_end":415979,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415980,"byte_end":415987,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":415988,"byte_end":416029,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416030,"byte_end":416073,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416074,"byte_end":416077,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416078,"byte_end":416113,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416114,"byte_end":416188,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416189,"byte_end":416198,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416199,"byte_end":416206,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14812},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417211,"byte_end":417221,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":14814}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":416909,"byte_end":416969,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":416970,"byte_end":417022,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417023,"byte_end":417026,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417027,"byte_end":417090,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417091,"byte_end":417126,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417151,"byte_end":417199,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5415},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419509,"byte_end":419520,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"pub fn repeat_with<A, F: FnMut() -> A>(F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417737,"byte_end":417808,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417809,"byte_end":417876,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417877,"byte_end":417880,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417881,"byte_end":417953,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417954,"byte_end":417957,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417958,"byte_end":418032,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418033,"byte_end":418085,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418086,"byte_end":418089,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418090,"byte_end":418162,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418163,"byte_end":418236,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418237,"byte_end":418274,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418275,"byte_end":418278,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418279,"byte_end":418293,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418294,"byte_end":418297,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418298,"byte_end":418314,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418315,"byte_end":418318,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418319,"byte_end":418326,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418327,"byte_end":418368,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418369,"byte_end":418412,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418413,"byte_end":418416,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418417,"byte_end":418485,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418486,"byte_end":418564,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418565,"byte_end":418596,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418597,"byte_end":418618,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418619,"byte_end":418622,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418623,"byte_end":418657,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418658,"byte_end":418713,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418714,"byte_end":418717,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418718,"byte_end":418771,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418772,"byte_end":418825,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418826,"byte_end":418879,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418880,"byte_end":418889,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418890,"byte_end":418897,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418898,"byte_end":418901,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418902,"byte_end":418938,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418939,"byte_end":418942,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418943,"byte_end":418954,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418955,"byte_end":418996,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":418997,"byte_end":419040,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419041,"byte_end":419044,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419045,"byte_end":419094,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419095,"byte_end":419116,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419117,"byte_end":419194,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419195,"byte_end":419228,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419229,"byte_end":419232,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419233,"byte_end":419276,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419277,"byte_end":419320,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419321,"byte_end":419364,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419365,"byte_end":419408,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419409,"byte_end":419412,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419413,"byte_end":419442,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419443,"byte_end":419483,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419484,"byte_end":419493,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":419494,"byte_end":419501,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14821},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":419911,"byte_end":419916,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":14823}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":419795,"byte_end":419833,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":419851,"byte_end":419899,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5449},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420085,"byte_end":420090,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":419955,"byte_end":420003,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420004,"byte_end":420007,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420008,"byte_end":420077,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":5501},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421175,"byte_end":421179,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":420868,"byte_end":420909,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":420910,"byte_end":420913,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":420914,"byte_end":420921,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":420922,"byte_end":420963,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":420964,"byte_end":421007,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421008,"byte_end":421011,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421012,"byte_end":421056,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421057,"byte_end":421112,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421113,"byte_end":421149,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421150,"byte_end":421159,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421160,"byte_end":421167,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14827},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421441,"byte_end":421445,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":14829}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14863},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422621,"byte_end":422628,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":14865}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422501,"byte_end":422543,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422561,"byte_end":422609,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5545},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422804,"byte_end":422811,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422672,"byte_end":422726,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422727,"byte_end":422730,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422731,"byte_end":422796,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":5587},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423654,"byte_end":423660,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5589}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423553,"byte_end":423593,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423594,"byte_end":423642,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5595},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424348,"byte_end":424355,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423860,"byte_end":423933,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423934,"byte_end":423937,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423938,"byte_end":423997,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423998,"byte_end":424001,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424002,"byte_end":424016,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424017,"byte_end":424020,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424021,"byte_end":424028,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424029,"byte_end":424062,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424063,"byte_end":424091,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424092,"byte_end":424095,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424096,"byte_end":424125,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424126,"byte_end":424129,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424130,"byte_end":424194,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424195,"byte_end":424248,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424249,"byte_end":424270,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424271,"byte_end":424324,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424325,"byte_end":424332,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424333,"byte_end":424340,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14869},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":425116,"byte_end":425129,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":14871}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5636},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":427110,"byte_end":427124,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"pub fn poll_immediate<S: Stream>(S) -> PollImmediate<S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426229,"byte_end":426342,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426343,"byte_end":426346,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426347,"byte_end":426442,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426443,"byte_end":426446,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426447,"byte_end":426461,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426462,"byte_end":426465,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426466,"byte_end":426473,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426474,"byte_end":426515,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426516,"byte_end":426559,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426560,"byte_end":426588,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426589,"byte_end":426592,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426593,"byte_end":426666,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426667,"byte_end":426720,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426721,"byte_end":426774,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426775,"byte_end":426812,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426813,"byte_end":426816,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426817,"byte_end":426885,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426886,"byte_end":426914,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426915,"byte_end":426928,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426929,"byte_end":426938,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426939,"byte_end":426991,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426992,"byte_end":427046,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":427047,"byte_end":427084,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":427085,"byte_end":427094,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":427095,"byte_end":427102,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14908},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":427657,"byte_end":427663,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":14911}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5679},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428689,"byte_end":428695,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":427785,"byte_end":427853,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":427854,"byte_end":427930,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":427931,"byte_end":427979,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":427980,"byte_end":427983,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":427984,"byte_end":428059,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428060,"byte_end":428129,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428130,"byte_end":428157,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428158,"byte_end":428161,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428162,"byte_end":428233,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428234,"byte_end":428254,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428255,"byte_end":428258,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428259,"byte_end":428274,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428275,"byte_end":428278,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428279,"byte_end":428290,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428291,"byte_end":428332,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428333,"byte_end":428388,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428389,"byte_end":428392,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428393,"byte_end":428418,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428419,"byte_end":428445,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428446,"byte_end":428449,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428450,"byte_end":428488,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428489,"byte_end":428492,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428493,"byte_end":428514,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428515,"byte_end":428551,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428552,"byte_end":428604,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428605,"byte_end":428657,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428658,"byte_end":428663,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428664,"byte_end":428673,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":428674,"byte_end":428681,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429164,"byte_end":429171,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429056,"byte_end":429130,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429135,"byte_end":429152,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5687},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429499,"byte_end":429506,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429237,"byte_end":429305,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429310,"byte_end":429341,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429346,"byte_end":429349,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429354,"byte_end":429427,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429432,"byte_end":429487,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5688},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429853,"byte_end":429864,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429584,"byte_end":429659,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429664,"byte_end":429695,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429700,"byte_end":429703,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429708,"byte_end":429781,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429786,"byte_end":429841,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430238,"byte_end":430248,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430002,"byte_end":430065,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430070,"byte_end":430073,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430078,"byte_end":430150,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430155,"byte_end":430226,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14954},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431190,"byte_end":431194,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":14953},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431159,"byte_end":431185,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":14956},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431232,"byte_end":431237,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":14953},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431200,"byte_end":431227,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":14953},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431144,"byte_end":431152,"line_start":10,"line_end":10,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"pub enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":14954},{"krate":0,"index":14956}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431017,"byte_end":431083,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431318,"byte_end":431324,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"pub fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431262,"byte_end":431306,"line_start":18,"line_end":18,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":14972},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431796,"byte_end":431814,"line_start":40,"line_end":40,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":14977},{"krate":0,"index":14978},{"krate":0,"index":14979},{"krate":0,"index":14980}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5745},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434106,"byte_end":434126,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"pub fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431977,"byte_end":432054,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432055,"byte_end":432135,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432136,"byte_end":432218,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432219,"byte_end":432284,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432285,"byte_end":432288,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432289,"byte_end":432364,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432365,"byte_end":432434,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432435,"byte_end":432462,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432463,"byte_end":432466,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432467,"byte_end":432538,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432539,"byte_end":432559,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432560,"byte_end":432563,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432564,"byte_end":432579,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432580,"byte_end":432583,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432584,"byte_end":432600,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432601,"byte_end":432665,"line_start":65,"line_end":65,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432666,"byte_end":432669,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432670,"byte_end":432681,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432682,"byte_end":432723,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432724,"byte_end":432803,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432804,"byte_end":432807,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432808,"byte_end":432833,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432834,"byte_end":432860,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432861,"byte_end":432864,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432865,"byte_end":432929,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":432930,"byte_end":433004,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433005,"byte_end":433075,"line_start":76,"line_end":76,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433076,"byte_end":433127,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433128,"byte_end":433187,"line_start":78,"line_end":78,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433188,"byte_end":433191,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433192,"byte_end":433255,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433256,"byte_end":433259,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433260,"byte_end":433281,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433282,"byte_end":433337,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433338,"byte_end":433390,"line_start":84,"line_end":84,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433391,"byte_end":433396,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433397,"byte_end":433406,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433407,"byte_end":433414,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433415,"byte_end":433418,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433419,"byte_end":433438,"line_start":89,"line_end":89,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433439,"byte_end":433506,"line_start":90,"line_end":90,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433507,"byte_end":433583,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433584,"byte_end":433587,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433588,"byte_end":433599,"line_start":93,"line_end":93,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433600,"byte_end":433641,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433642,"byte_end":433721,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433722,"byte_end":433725,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433726,"byte_end":433751,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433752,"byte_end":433778,"line_start":98,"line_end":98,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433779,"byte_end":433782,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433783,"byte_end":433836,"line_start":100,"line_end":100,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433837,"byte_end":433840,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433841,"byte_end":433901,"line_start":102,"line_end":102,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433902,"byte_end":433905,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433906,"byte_end":433927,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433928,"byte_end":433968,"line_start":105,"line_end":105,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":433969,"byte_end":434021,"line_start":106,"line_end":106,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434022,"byte_end":434074,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434075,"byte_end":434080,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434081,"byte_end":434090,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434091,"byte_end":434098,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5755},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434743,"byte_end":434750,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434635,"byte_end":434709,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434714,"byte_end":434731,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5756},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435106,"byte_end":435113,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434844,"byte_end":434912,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434917,"byte_end":434948,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434953,"byte_end":434956,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434961,"byte_end":435034,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435039,"byte_end":435094,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5757},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435488,"byte_end":435499,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435219,"byte_end":435294,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435299,"byte_end":435330,"line_start":147,"line_end":147,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435335,"byte_end":435338,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435343,"byte_end":435416,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435421,"byte_end":435476,"line_start":150,"line_end":150,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5758},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435905,"byte_end":435915,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435669,"byte_end":435732,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435737,"byte_end":435740,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435745,"byte_end":435817,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":435822,"byte_end":435893,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":5827},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439593,"byte_end":439599,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438151,"byte_end":438221,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438222,"byte_end":438225,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438226,"byte_end":438295,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438296,"byte_end":438377,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438378,"byte_end":438409,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438410,"byte_end":438413,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438414,"byte_end":438493,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438494,"byte_end":438573,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438574,"byte_end":438628,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438629,"byte_end":438632,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438633,"byte_end":438713,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438714,"byte_end":438784,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438785,"byte_end":438807,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438808,"byte_end":438811,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438812,"byte_end":438889,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438890,"byte_end":438962,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":438963,"byte_end":439040,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439041,"byte_end":439101,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439102,"byte_end":439105,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439106,"byte_end":439119,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439120,"byte_end":439123,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439124,"byte_end":439131,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439132,"byte_end":439173,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439174,"byte_end":439217,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439218,"byte_end":439221,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439222,"byte_end":439277,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439278,"byte_end":439301,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439302,"byte_end":439341,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439342,"byte_end":439379,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439380,"byte_end":439419,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439420,"byte_end":439436,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439437,"byte_end":439453,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439454,"byte_end":439463,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439464,"byte_end":439471,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439472,"byte_end":439475,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439476,"byte_end":439528,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439529,"byte_end":439567,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439568,"byte_end":439577,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439578,"byte_end":439585,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15041},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":439946,"byte_end":439952,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15045},{"krate":0,"index":15046}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5927},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445003,"byte_end":445017,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5932}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442937,"byte_end":442971,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442972,"byte_end":442975,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442976,"byte_end":443055,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443056,"byte_end":443127,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443128,"byte_end":443204,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443205,"byte_end":443253,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443254,"byte_end":443257,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443258,"byte_end":443337,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443338,"byte_end":443413,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443414,"byte_end":443492,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443493,"byte_end":443573,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443574,"byte_end":443603,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443604,"byte_end":443607,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443608,"byte_end":443686,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443687,"byte_end":443761,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443762,"byte_end":443837,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443838,"byte_end":443913,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443914,"byte_end":443989,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":443990,"byte_end":444048,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444049,"byte_end":444052,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444053,"byte_end":444126,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444127,"byte_end":444205,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444206,"byte_end":444264,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444265,"byte_end":444338,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444339,"byte_end":444407,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444408,"byte_end":444484,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444485,"byte_end":444553,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444554,"byte_end":444607,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444608,"byte_end":444611,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444612,"byte_end":444678,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444679,"byte_end":444758,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444759,"byte_end":444806,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444807,"byte_end":444810,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444811,"byte_end":444884,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444885,"byte_end":444942,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":444943,"byte_end":444991,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445525,"byte_end":445528,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445305,"byte_end":445349,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445354,"byte_end":445357,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445362,"byte_end":445437,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445442,"byte_end":445513,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446025,"byte_end":446028,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445752,"byte_end":445809,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445814,"byte_end":445817,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445822,"byte_end":445885,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445890,"byte_end":445954,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445959,"byte_end":446013,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446186,"byte_end":446194,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446123,"byte_end":446174,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446618,"byte_end":446622,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446299,"byte_end":446332,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446337,"byte_end":446340,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446345,"byte_end":446421,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446426,"byte_end":446500,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446505,"byte_end":446578,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446583,"byte_end":446606,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":5967},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":5968},{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5975},{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5985},{"krate":0,"index":5986},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5994},{"krate":0,"index":5997},{"krate":0,"index":6000},{"krate":0,"index":6003},{"krate":0,"index":6004},{"krate":0,"index":6005},{"krate":0,"index":6007},{"krate":0,"index":6008},{"krate":0,"index":6010},{"krate":0,"index":6011},{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6016},{"krate":0,"index":6017},{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6023},{"krate":0,"index":6026},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6033},{"krate":0,"index":6036},{"krate":0,"index":6037},{"krate":0,"index":6040},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6047},{"krate":0,"index":6050},{"krate":0,"index":6053},{"krate":0,"index":6056},{"krate":0,"index":6059},{"krate":0,"index":6065},{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6136},{"krate":0,"index":6137},{"krate":0,"index":6139},{"krate":0,"index":6140},{"krate":0,"index":6142},{"krate":0,"index":6145},{"krate":0,"index":6148},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6282},{"krate":0,"index":6285},{"krate":0,"index":6290},{"krate":0,"index":6292},{"krate":0,"index":6294},{"krate":0,"index":6296},{"krate":0,"index":6298},{"krate":0,"index":6300},{"krate":0,"index":6303},{"krate":0,"index":6318},{"krate":0,"index":6331},{"krate":0,"index":6334},{"krate":0,"index":6338},{"krate":0,"index":6341},{"krate":0,"index":6347},{"krate":0,"index":6353},{"krate":0,"index":6358},{"krate":0,"index":6363},{"krate":0,"index":6366}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149933,"byte_end":149967,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":149968,"byte_end":149993,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":448987,"byte_end":449019,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449020,"byte_end":449023,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449024,"byte_end":449099,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449100,"byte_end":449157,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15134},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476187,"byte_end":476197,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":15137},{"krate":0,"index":15138},{"krate":0,"index":15139}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476099,"byte_end":476158,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15144},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476434,"byte_end":476441,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476346,"byte_end":476405,"line_start":15,"line_end":15,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15153},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476582,"byte_end":476592,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":15156},{"krate":0,"index":15157},{"krate":0,"index":15158},{"krate":0,"index":15159}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476492,"byte_end":476553,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15164},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476880,"byte_end":476884,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476786,"byte_end":476851,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15173},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":477021,"byte_end":477029,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":15175},{"krate":0,"index":15176}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":476935,"byte_end":476992,"line_start":32,"line_end":32,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6285},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451024,"byte_end":451040,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449929,"byte_end":449982,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449983,"byte_end":449986,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":449987,"byte_end":450055,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450056,"byte_end":450129,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450130,"byte_end":450206,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450207,"byte_end":450251,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450252,"byte_end":450255,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450256,"byte_end":450334,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450335,"byte_end":450393,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450394,"byte_end":450458,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450459,"byte_end":450512,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450513,"byte_end":450592,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450593,"byte_end":450622,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450623,"byte_end":450626,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450627,"byte_end":450697,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450698,"byte_end":450775,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450776,"byte_end":450827,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450828,"byte_end":450831,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450832,"byte_end":450905,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450906,"byte_end":450963,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":450964,"byte_end":451012,"line_start":53,"line_end":53,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6305},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453657,"byte_end":453660,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453386,"byte_end":453435,"line_start":110,"line_end":110,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453440,"byte_end":453443,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453448,"byte_end":453515,"line_start":112,"line_end":112,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453520,"byte_end":453594,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453599,"byte_end":453645,"line_start":114,"line_end":114,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6306},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":454690,"byte_end":454693,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":454552,"byte_end":454607,"line_start":141,"line_end":141,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":454612,"byte_end":454615,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":454620,"byte_end":454678,"line_start":143,"line_end":143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6307},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":454857,"byte_end":454865,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":454795,"byte_end":454845,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6308},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455448,"byte_end":455452,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455078,"byte_end":455109,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455114,"byte_end":455117,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455122,"byte_end":455192,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455197,"byte_end":455283,"line_start":159,"line_end":159,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455288,"byte_end":455364,"line_start":160,"line_end":160,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":455369,"byte_end":455436,"line_start":161,"line_end":161,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6309},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":456770,"byte_end":456774,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":456688,"byte_end":456758,"line_start":190,"line_end":190,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6310},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":456972,"byte_end":456984,"line_start":199,"line_end":199,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"pub fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":456890,"byte_end":456960,"line_start":198,"line_end":198,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6311},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":457313,"byte_end":457321,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":457232,"byte_end":457301,"line_start":206,"line_end":206,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6312},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":457528,"byte_end":457540,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":457447,"byte_end":457516,"line_start":214,"line_end":214,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6336},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472423,"byte_end":472428,"line_start":556,"line_end":556,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472370,"byte_end":472411,"line_start":555,"line_end":555,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6373},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6381},{"krate":0,"index":6384},{"krate":0,"index":6387},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6401},{"krate":0,"index":6404},{"krate":0,"index":6407},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6414},{"krate":0,"index":6417},{"krate":0,"index":6420},{"krate":0,"index":15180},{"krate":0,"index":15183},{"krate":0,"index":6423},{"krate":0,"index":6426},{"krate":0,"index":6435},{"krate":0,"index":6438},{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6447},{"krate":0,"index":6451},{"krate":0,"index":6455},{"krate":0,"index":6460},{"krate":0,"index":6466},{"krate":0,"index":15213},{"krate":0,"index":15218},{"krate":0,"index":15222},{"krate":0,"index":15227},{"krate":0,"index":15231},{"krate":0,"index":15235},{"krate":0,"index":6472},{"krate":0,"index":6478},{"krate":0,"index":6480},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6493}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150149,"byte_end":150183,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150184,"byte_end":150209,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":489642,"byte_end":489673,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":15180},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":490713,"byte_end":490722,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":15182}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6428},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491204,"byte_end":491207,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491004,"byte_end":491043,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491048,"byte_end":491051,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491056,"byte_end":491126,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491131,"byte_end":491192,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6429},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491417,"byte_end":491420,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491279,"byte_end":491334,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491339,"byte_end":491342,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491347,"byte_end":491405,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6430},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491536,"byte_end":491544,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491475,"byte_end":491524,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6431},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491906,"byte_end":491910,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491603,"byte_end":491634,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491639,"byte_end":491642,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491647,"byte_end":491719,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491724,"byte_end":491798,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491803,"byte_end":491871,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491876,"byte_end":491894,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6432},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492076,"byte_end":492080,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"pub fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":491994,"byte_end":492064,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6433},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492230,"byte_end":492238,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492149,"byte_end":492218,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6434},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492374,"byte_end":492379,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492321,"byte_end":492362,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":6445},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494086,"byte_end":494096,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493465,"byte_end":493539,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493540,"byte_end":493543,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493544,"byte_end":493623,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493624,"byte_end":493675,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493676,"byte_end":493750,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493751,"byte_end":493810,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493811,"byte_end":493814,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493815,"byte_end":493887,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493888,"byte_end":493938,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493939,"byte_end":493942,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493943,"byte_end":494020,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494021,"byte_end":494078,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15213},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495403,"byte_end":495407,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495313,"byte_end":495374,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15222},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495560,"byte_end":495567,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495472,"byte_end":495531,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15231},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495721,"byte_end":495729,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495635,"byte_end":495692,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":6516},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497744,"byte_end":497753,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"pub fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497374,"byte_end":497461,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497462,"byte_end":497465,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497466,"byte_end":497542,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497543,"byte_end":497596,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497597,"byte_end":497600,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497601,"byte_end":497678,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/abortable.rs","byte_start":497679,"byte_end":497736,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6550},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6555},{"krate":0,"index":6558},{"krate":0,"index":6561},{"krate":0,"index":6564},{"krate":0,"index":6567},{"krate":0,"index":6568},{"krate":0,"index":6571},{"krate":0,"index":6574},{"krate":0,"index":6577},{"krate":0,"index":6580},{"krate":0,"index":6583},{"krate":0,"index":6586},{"krate":0,"index":6589},{"krate":0,"index":6592},{"krate":0,"index":6595},{"krate":0,"index":6598},{"krate":0,"index":6599},{"krate":0,"index":6602},{"krate":0,"index":6605},{"krate":0,"index":6608},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6646}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":497981,"byte_end":498014,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498015,"byte_end":498018,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498019,"byte_end":498044,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498045,"byte_end":498048,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498049,"byte_end":498097,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498098,"byte_end":498151,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498152,"byte_end":498200,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498201,"byte_end":498248,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498249,"byte_end":498252,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498253,"byte_end":498327,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/mod.rs","byte_start":498328,"byte_end":498400,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6636},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499650,"byte_end":499658,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6637}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499607,"byte_end":499639,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6637},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500740,"byte_end":500745,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6636},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499672,"byte_end":499737,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499742,"byte_end":499757,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499762,"byte_end":499765,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499770,"byte_end":499840,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499845,"byte_end":499864,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499869,"byte_end":499872,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499877,"byte_end":499946,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499951,"byte_end":500024,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500029,"byte_end":500068,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500073,"byte_end":500076,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500081,"byte_end":500147,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500152,"byte_end":500218,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500223,"byte_end":500294,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500299,"byte_end":500355,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500360,"byte_end":500363,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500368,"byte_end":500375,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # if cfg!(miri) { return; } // https://github.com/rust-lang/miri/issues/1038","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500380,"byte_end":500460,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500465,"byte_end":500503,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500508,"byte_end":500540,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500545,"byte_end":500548,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500553,"byte_end":500599,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500604,"byte_end":500607,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500612,"byte_end":500649,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500654,"byte_end":500690,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500695,"byte_end":500702,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":500707,"byte_end":500732,"line_start":46,"line_end":46,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6639},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502584,"byte_end":502597,"line_start":99,"line_end":99,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6640}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502536,"byte_end":502573,"line_start":98,"line_end":98,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6640},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503640,"byte_end":503651,"line_start":126,"line_end":126,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6639},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502616,"byte_end":502681,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502686,"byte_end":502701,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502706,"byte_end":502709,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502714,"byte_end":502784,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502789,"byte_end":502808,"line_start":104,"line_end":104,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502813,"byte_end":502816,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502821,"byte_end":502890,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502895,"byte_end":502968,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502973,"byte_end":503012,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503017,"byte_end":503020,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503025,"byte_end":503091,"line_start":110,"line_end":110,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503096,"byte_end":503162,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503167,"byte_end":503238,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503243,"byte_end":503299,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503304,"byte_end":503307,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503312,"byte_end":503319,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503324,"byte_end":503361,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503366,"byte_end":503403,"line_start":117,"line_end":117,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503408,"byte_end":503411,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503416,"byte_end":503452,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503457,"byte_end":503494,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503499,"byte_end":503502,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503507,"byte_end":503544,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503549,"byte_end":503590,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503595,"byte_end":503602,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":503607,"byte_end":503632,"line_start":125,"line_end":125,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6649},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","parent":null,"children":[{"krate":0,"index":6650}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505141,"byte_end":505183,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505184,"byte_end":505187,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505188,"byte_end":505254,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6650},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505891,"byte_end":505896,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505256,"byte_end":505291,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505292,"byte_end":505295,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505296,"byte_end":505371,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505372,"byte_end":505409,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505410,"byte_end":505413,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505414,"byte_end":505478,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505479,"byte_end":505482,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505483,"byte_end":505554,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505555,"byte_end":505606,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505607,"byte_end":505699,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505700,"byte_end":505703,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505704,"byte_end":505775,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/never.rs","byte_start":505776,"byte_end":505881,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6651},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":6652},{"krate":0,"index":6655},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6662},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6669},{"krate":0,"index":6672},{"krate":0,"index":6675},{"krate":0,"index":6678},{"krate":0,"index":6681},{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6688},{"krate":0,"index":6691},{"krate":0,"index":6694},{"krate":0,"index":6697},{"krate":0,"index":6698},{"krate":0,"index":6700},{"krate":0,"index":6787},{"krate":0,"index":6790},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6885},{"krate":0,"index":6888},{"krate":0,"index":6969},{"krate":0,"index":6972},{"krate":0,"index":7020},{"krate":0,"index":7023},{"krate":0,"index":7079},{"krate":0,"index":7082},{"krate":0,"index":7112},{"krate":0,"index":7115},{"krate":0,"index":7160},{"krate":0,"index":7161},{"krate":0,"index":7164},{"krate":0,"index":7167},{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7209},{"krate":0,"index":7212},{"krate":0,"index":7272},{"krate":0,"index":7275},{"krate":0,"index":7309},{"krate":0,"index":7310},{"krate":0,"index":7313},{"krate":0,"index":7316},{"krate":0,"index":7347},{"krate":0,"index":7350},{"krate":0,"index":7380},{"krate":0,"index":7383},{"krate":0,"index":7422},{"krate":0,"index":7425},{"krate":0,"index":7455},{"krate":0,"index":7458},{"krate":0,"index":7492},{"krate":0,"index":7495},{"krate":0,"index":7531},{"krate":0,"index":7534},{"krate":0,"index":7579},{"krate":0,"index":7582},{"krate":0,"index":7626},{"krate":0,"index":7629},{"krate":0,"index":7678},{"krate":0,"index":7681},{"krate":0,"index":7719},{"krate":0,"index":7722},{"krate":0,"index":7757},{"krate":0,"index":7758},{"krate":0,"index":7761},{"krate":0,"index":7764},{"krate":0,"index":7798},{"krate":0,"index":7801},{"krate":0,"index":7836},{"krate":0,"index":7837},{"krate":0,"index":7840},{"krate":0,"index":7843},{"krate":0,"index":7922},{"krate":0,"index":7923},{"krate":0,"index":7926},{"krate":0,"index":7927},{"krate":0,"index":7929},{"krate":0,"index":7932},{"krate":0,"index":7975},{"krate":0,"index":7978},{"krate":0,"index":8005},{"krate":0,"index":8008},{"krate":0,"index":8038},{"krate":0,"index":8041},{"krate":0,"index":8075},{"krate":0,"index":8078},{"krate":0,"index":8114},{"krate":0,"index":8117},{"krate":0,"index":8132},{"krate":0,"index":8134},{"krate":0,"index":8143},{"krate":0,"index":8145},{"krate":0,"index":8148},{"krate":0,"index":8150},{"krate":0,"index":8158},{"krate":0,"index":8160},{"krate":0,"index":8162}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":505927,"byte_end":505948,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":505949,"byte_end":505952,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":505953,"byte_end":506026,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506027,"byte_end":506106,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506107,"byte_end":506180,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506181,"byte_end":506256,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506257,"byte_end":506336,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506337,"byte_end":506412,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506413,"byte_end":506441,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506442,"byte_end":506445,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506446,"byte_end":506525,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506526,"byte_end":506604,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506605,"byte_end":506681,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506682,"byte_end":506724,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506725,"byte_end":506728,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506729,"byte_end":506793,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":506794,"byte_end":506851,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15238},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533938,"byte_end":533948,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533289,"byte_end":533354,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533355,"byte_end":533404,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533405,"byte_end":533476,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533477,"byte_end":533480,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533481,"byte_end":533557,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533558,"byte_end":533629,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533630,"byte_end":533698,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533699,"byte_end":533767,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533768,"byte_end":533843,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533844,"byte_end":533858,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6745},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534513,"byte_end":534516,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534443,"byte_end":534501,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6746},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534625,"byte_end":534632,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534562,"byte_end":534613,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534746,"byte_end":534753,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534675,"byte_end":534734,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6748},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534874,"byte_end":534884,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534808,"byte_end":534862,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":15271},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":539750,"byte_end":539759,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":15273},{"krate":0,"index":15274},{"krate":0,"index":15275},{"krate":0,"index":15276}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6848},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540054,"byte_end":540057,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":539912,"byte_end":540004,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540009,"byte_end":540042,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6849},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540219,"byte_end":540232,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540142,"byte_end":540207,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6850},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540738,"byte_end":540744,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540578,"byte_end":540634,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540639,"byte_end":540642,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":540647,"byte_end":540726,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":6854},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541393,"byte_end":541406,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"pub fn seek_relative(Pin<&mut Self>, i64) -> SeeKRelative<, R>","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541064,"byte_end":541151,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541156,"byte_end":541226,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541231,"byte_end":541315,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541320,"byte_end":541381,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6855},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541876,"byte_end":541894,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"pub fn poll_seek_relative(Pin<&mut Self>, &mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541536,"byte_end":541634,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541639,"byte_end":541709,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541714,"byte_end":541798,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541803,"byte_end":541864,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15324},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":548090,"byte_end":548102,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":15327},{"krate":0,"index":15328},{"krate":0,"index":15329}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":547925,"byte_end":548012,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":548030,"byte_end":548078,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":15334},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550177,"byte_end":550186,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":15336},{"krate":0,"index":15337},{"krate":0,"index":15338}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6942},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550461,"byte_end":550464,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550319,"byte_end":550411,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550416,"byte_end":550449,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6943},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550626,"byte_end":550639,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550549,"byte_end":550614,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6945},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":551762,"byte_end":551768,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":551694,"byte_end":551750,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15383},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":556857,"byte_end":556867,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":15385}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7003},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557122,"byte_end":557125,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"pub fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":556971,"byte_end":557059,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557064,"byte_end":557110,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7004},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557291,"byte_end":557304,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557213,"byte_end":557279,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":7006},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557878,"byte_end":557884,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557799,"byte_end":557866,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7007},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":558062,"byte_end":558069,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":557947,"byte_end":558028,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":558033,"byte_end":558050,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":15419},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":561906,"byte_end":561911,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":15422},{"krate":0,"index":15423},{"krate":0,"index":15424}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7060},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562277,"byte_end":562284,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562203,"byte_end":562265,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7061},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562616,"byte_end":562623,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562353,"byte_end":562423,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562428,"byte_end":562431,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562436,"byte_end":562509,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562514,"byte_end":562587,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562592,"byte_end":562604,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7062},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562982,"byte_end":562993,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562712,"byte_end":562789,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562794,"byte_end":562797,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562802,"byte_end":562875,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562880,"byte_end":562953,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562958,"byte_end":562970,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7063},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":563196,"byte_end":563206,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":563128,"byte_end":563184,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15468},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565736,"byte_end":565741,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15471}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565574,"byte_end":565639,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565657,"byte_end":565724,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":7152},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567294,"byte_end":567298,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566445,"byte_end":566520,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566521,"byte_end":566524,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566525,"byte_end":566608,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566609,"byte_end":566689,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566690,"byte_end":566762,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566763,"byte_end":566776,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566777,"byte_end":566780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566781,"byte_end":566828,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566829,"byte_end":566832,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566833,"byte_end":566847,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566848,"byte_end":566851,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566852,"byte_end":566859,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566860,"byte_end":566901,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566902,"byte_end":566953,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566954,"byte_end":566957,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":566958,"byte_end":567001,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567002,"byte_end":567049,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567050,"byte_end":567053,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567054,"byte_end":567107,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567108,"byte_end":567134,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567135,"byte_end":567138,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567139,"byte_end":567164,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567165,"byte_end":567218,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567219,"byte_end":567278,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567279,"byte_end":567286,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15476},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567643,"byte_end":567647,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":15480}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7197},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":569047,"byte_end":569055,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W>(R, &mut W) -> CopyBuf<, R, W> where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568191,"byte_end":568266,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568267,"byte_end":568270,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568271,"byte_end":568357,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568358,"byte_end":568438,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568439,"byte_end":568511,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568512,"byte_end":568525,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568526,"byte_end":568529,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568530,"byte_end":568577,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568578,"byte_end":568581,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568582,"byte_end":568596,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568597,"byte_end":568600,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568601,"byte_end":568608,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568609,"byte_end":568650,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568651,"byte_end":568702,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568703,"byte_end":568706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568707,"byte_end":568750,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568751,"byte_end":568798,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568799,"byte_end":568802,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568803,"byte_end":568860,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568861,"byte_end":568887,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568888,"byte_end":568891,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568892,"byte_end":568917,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568918,"byte_end":568971,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":568972,"byte_end":569031,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":569032,"byte_end":569039,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15530},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":569388,"byte_end":569395,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":15534},{"krate":0,"index":15535},{"krate":0,"index":15536}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15592},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571317,"byte_end":571323,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":15594}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570550,"byte_end":570613,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570614,"byte_end":570647,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570648,"byte_end":570651,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570652,"byte_end":570720,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570721,"byte_end":570803,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570804,"byte_end":570883,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570884,"byte_end":570909,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570910,"byte_end":570913,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570914,"byte_end":570980,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":570981,"byte_end":571048,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571049,"byte_end":571082,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571083,"byte_end":571086,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571087,"byte_end":571126,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571127,"byte_end":571166,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571167,"byte_end":571208,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571209,"byte_end":571272,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7250},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571903,"byte_end":571906,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571382,"byte_end":571457,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571462,"byte_end":571465,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571470,"byte_end":571544,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571549,"byte_end":571617,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571622,"byte_end":571660,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571665,"byte_end":571668,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571673,"byte_end":571687,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571692,"byte_end":571695,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571700,"byte_end":571707,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571712,"byte_end":571740,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571745,"byte_end":571748,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571753,"byte_end":571792,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571797,"byte_end":571845,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571850,"byte_end":571879,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571884,"byte_end":571891,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7251},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572330,"byte_end":572340,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571985,"byte_end":572042,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572047,"byte_end":572050,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572055,"byte_end":572069,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572074,"byte_end":572077,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572082,"byte_end":572089,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572094,"byte_end":572122,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572127,"byte_end":572130,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572135,"byte_end":572174,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572179,"byte_end":572227,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572232,"byte_end":572261,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572266,"byte_end":572269,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572274,"byte_end":572306,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572311,"byte_end":572318,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7252},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572748,"byte_end":572755,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572397,"byte_end":572457,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572462,"byte_end":572465,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572470,"byte_end":572484,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572489,"byte_end":572492,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572497,"byte_end":572504,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572509,"byte_end":572537,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572542,"byte_end":572545,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572550,"byte_end":572589,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572594,"byte_end":572642,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572647,"byte_end":572676,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572681,"byte_end":572684,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572689,"byte_end":572724,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572729,"byte_end":572736,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7253},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573327,"byte_end":573334,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572811,"byte_end":572879,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572884,"byte_end":572887,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572892,"byte_end":572965,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":572970,"byte_end":573032,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573037,"byte_end":573040,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573045,"byte_end":573059,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573064,"byte_end":573067,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573072,"byte_end":573079,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573084,"byte_end":573112,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573117,"byte_end":573120,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573125,"byte_end":573168,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573173,"byte_end":573221,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573226,"byte_end":573255,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573260,"byte_end":573263,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573268,"byte_end":573303,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573308,"byte_end":573315,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7254},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573992,"byte_end":574000,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573398,"byte_end":573446,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573451,"byte_end":573454,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573459,"byte_end":573473,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573478,"byte_end":573481,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573486,"byte_end":573493,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573498,"byte_end":573539,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573544,"byte_end":573598,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573603,"byte_end":573606,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573611,"byte_end":573663,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573668,"byte_end":573671,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573676,"byte_end":573711,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573716,"byte_end":573719,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573724,"byte_end":573767,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573772,"byte_end":573807,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573812,"byte_end":573815,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573820,"byte_end":573864,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573869,"byte_end":573904,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573909,"byte_end":573968,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":573973,"byte_end":573980,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7255},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574468,"byte_end":574480,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574058,"byte_end":574095,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574100,"byte_end":574103,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574108,"byte_end":574122,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574127,"byte_end":574130,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574135,"byte_end":574142,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574147,"byte_end":574175,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574180,"byte_end":574183,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574188,"byte_end":574240,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574245,"byte_end":574248,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574253,"byte_end":574288,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574293,"byte_end":574296,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574301,"byte_end":574326,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574331,"byte_end":574366,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574371,"byte_end":574374,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574379,"byte_end":574404,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574409,"byte_end":574444,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574449,"byte_end":574456,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7299},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577250,"byte_end":577255,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7300}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577149,"byte_end":577189,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577190,"byte_end":577238,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7301},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577815,"byte_end":577820,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577276,"byte_end":577323,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577324,"byte_end":577327,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577328,"byte_end":577400,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577401,"byte_end":577404,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577405,"byte_end":577419,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577420,"byte_end":577423,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577424,"byte_end":577489,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577490,"byte_end":577493,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577494,"byte_end":577501,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577502,"byte_end":577543,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577544,"byte_end":577586,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577587,"byte_end":577590,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577591,"byte_end":577626,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577627,"byte_end":577660,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577661,"byte_end":577707,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577708,"byte_end":577739,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577740,"byte_end":577799,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577800,"byte_end":577807,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15620},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578749,"byte_end":578756,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":15623}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578579,"byte_end":578652,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578670,"byte_end":578737,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15628},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580528,"byte_end":580533,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":15631}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580366,"byte_end":580431,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580449,"byte_end":580516,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15636},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/lines.rs","byte_start":581453,"byte_end":581458,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":15638},{"krate":0,"index":15639},{"krate":0,"index":15640},{"krate":0,"index":15641}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":15684},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582658,"byte_end":582662,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":15687},{"krate":0,"index":15688}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582499,"byte_end":582561,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582579,"byte_end":582646,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15693},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583554,"byte_end":583566,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":15696},{"krate":0,"index":15697}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583377,"byte_end":583457,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583475,"byte_end":583542,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15702},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584532,"byte_end":584541,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":15705},{"krate":0,"index":15706}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584361,"byte_end":584435,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584453,"byte_end":584520,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15711},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":585881,"byte_end":585889,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":15714},{"krate":0,"index":15715},{"krate":0,"index":15716},{"krate":0,"index":15717}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":585709,"byte_end":585784,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":585802,"byte_end":585869,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15722},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587697,"byte_end":587706,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":15725},{"krate":0,"index":15726},{"krate":0,"index":15727}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587524,"byte_end":587600,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587618,"byte_end":587685,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15732},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590712,"byte_end":590724,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":15735},{"krate":0,"index":15736},{"krate":0,"index":15737},{"krate":0,"index":15738}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590533,"byte_end":590615,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590633,"byte_end":590700,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15743},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592562,"byte_end":592571,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":15746},{"krate":0,"index":15747},{"krate":0,"index":15748},{"krate":0,"index":15749}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592388,"byte_end":592465,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592483,"byte_end":592550,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7749},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594284,"byte_end":594290,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7750}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594182,"byte_end":594223,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594224,"byte_end":594272,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7751},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594847,"byte_end":594853,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594310,"byte_end":594379,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594380,"byte_end":594383,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594384,"byte_end":594464,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594465,"byte_end":594484,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594485,"byte_end":594488,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594489,"byte_end":594503,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594504,"byte_end":594507,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594508,"byte_end":594515,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594516,"byte_end":594557,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594558,"byte_end":594600,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594601,"byte_end":594604,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594605,"byte_end":594633,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594634,"byte_end":594673,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594674,"byte_end":594724,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594725,"byte_end":594771,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594772,"byte_end":594831,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594832,"byte_end":594839,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15754},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":595986,"byte_end":595990,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":15757},{"krate":0,"index":15758}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":595823,"byte_end":595889,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":595907,"byte_end":595974,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7825},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596760,"byte_end":596764,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":7826}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596660,"byte_end":596699,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596700,"byte_end":596748,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7827},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597372,"byte_end":597376,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596785,"byte_end":596862,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596863,"byte_end":596866,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596867,"byte_end":596962,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":596963,"byte_end":597020,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597021,"byte_end":597024,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597025,"byte_end":597039,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597040,"byte_end":597043,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597044,"byte_end":597055,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597056,"byte_end":597097,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597098,"byte_end":597141,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597142,"byte_end":597145,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597146,"byte_end":597183,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597184,"byte_end":597216,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597217,"byte_end":597266,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597267,"byte_end":597296,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597297,"byte_end":597356,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597357,"byte_end":597364,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15763},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":598563,"byte_end":598571,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":15765}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":598466,"byte_end":598534,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":15769},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":598700,"byte_end":598709,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":15771}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":598603,"byte_end":598671,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7888},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599442,"byte_end":599449,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599196,"byte_end":599273,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599278,"byte_end":599349,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599354,"byte_end":599430,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":7892},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599951,"byte_end":599958,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599705,"byte_end":599782,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599787,"byte_end":599858,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599863,"byte_end":599939,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7909},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601546,"byte_end":601558,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601390,"byte_end":601465,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601466,"byte_end":601534,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7912},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601562,"byte_end":601577,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7913},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601579,"byte_end":601595,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":7909},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15775},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602438,"byte_end":602442,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":15777},{"krate":0,"index":15778}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7966},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603387,"byte_end":603392,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602634,"byte_end":602687,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602692,"byte_end":602738,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602743,"byte_end":602746,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602751,"byte_end":602761,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602766,"byte_end":602769,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602774,"byte_end":602851,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602856,"byte_end":602925,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602930,"byte_end":602933,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602938,"byte_end":602952,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602957,"byte_end":602960,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602965,"byte_end":602972,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602977,"byte_end":603018,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603023,"byte_end":603067,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603072,"byte_end":603075,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603080,"byte_end":603127,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603132,"byte_end":603160,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603165,"byte_end":603168,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603173,"byte_end":603207,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603212,"byte_end":603254,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603259,"byte_end":603262,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603267,"byte_end":603299,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603304,"byte_end":603363,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603368,"byte_end":603375,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7967},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604303,"byte_end":604312,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603439,"byte_end":603510,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603515,"byte_end":603589,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603594,"byte_end":603669,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603674,"byte_end":603698,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603703,"byte_end":603706,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603711,"byte_end":603725,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603730,"byte_end":603733,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603738,"byte_end":603745,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603750,"byte_end":603791,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603796,"byte_end":603840,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603845,"byte_end":603848,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603853,"byte_end":603900,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603905,"byte_end":603933,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603938,"byte_end":603941,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603946,"byte_end":603980,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":603985,"byte_end":604027,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604032,"byte_end":604035,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604040,"byte_end":604061,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604066,"byte_end":604098,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604103,"byte_end":604106,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604111,"byte_end":604134,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604139,"byte_end":604181,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604186,"byte_end":604207,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604212,"byte_end":604215,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604220,"byte_end":604279,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604284,"byte_end":604291,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":15819},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606736,"byte_end":606742,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":15821},{"krate":0,"index":15822}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":605781,"byte_end":605828,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":605829,"byte_end":605832,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":605833,"byte_end":605909,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":605910,"byte_end":605988,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":605989,"byte_end":606065,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606066,"byte_end":606141,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606142,"byte_end":606215,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606216,"byte_end":606247,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606248,"byte_end":606251,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606252,"byte_end":606323,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606324,"byte_end":606403,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606404,"byte_end":606431,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606432,"byte_end":606435,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606436,"byte_end":606510,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606511,"byte_end":606585,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606586,"byte_end":606665,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606666,"byte_end":606707,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":7991},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607051,"byte_end":607054,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606827,"byte_end":606898,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606903,"byte_end":606913,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606918,"byte_end":606921,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606926,"byte_end":607000,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607005,"byte_end":607039,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7992},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607233,"byte_end":607240,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607136,"byte_end":607203,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607208,"byte_end":607221,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7993},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607385,"byte_end":607392,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607287,"byte_end":607355,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607360,"byte_end":607373,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":7994},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607523,"byte_end":607533,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607451,"byte_end":607511,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7995},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607674,"byte_end":607679,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607577,"byte_end":607649,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607654,"byte_end":607662,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7996},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607826,"byte_end":607829,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607734,"byte_end":607801,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607806,"byte_end":607814,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":7997},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608275,"byte_end":608278,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607882,"byte_end":607942,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607947,"byte_end":607950,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607955,"byte_end":607967,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607972,"byte_end":607975,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":607980,"byte_end":608053,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608058,"byte_end":608135,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608140,"byte_end":608143,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608148,"byte_end":608205,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608210,"byte_end":608263,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15826},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609465,"byte_end":609470,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":15829},{"krate":0,"index":15830}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609303,"byte_end":609368,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609386,"byte_end":609453,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15835},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610361,"byte_end":610374,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":15838},{"krate":0,"index":15839}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610181,"byte_end":610264,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610282,"byte_end":610349,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":15844},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611333,"byte_end":611341,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":15847},{"krate":0,"index":15848}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611163,"byte_end":611236,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611254,"byte_end":611321,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":8117},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509635,"byte_end":509647,"line_start":145,"line_end":145,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":8118},{"krate":0,"index":8120},{"krate":0,"index":8122},{"krate":0,"index":8124},{"krate":0,"index":8126},{"krate":0,"index":8128},{"krate":0,"index":8130},{"krate":0,"index":8131}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509553,"byte_end":509624,"line_start":144,"line_end":144,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8118},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510500,"byte_end":510505,"line_start":169,"line_end":169,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509665,"byte_end":509730,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509735,"byte_end":509738,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509743,"byte_end":509823,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509828,"byte_end":509900,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509905,"byte_end":509926,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509931,"byte_end":509934,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509939,"byte_end":509953,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509958,"byte_end":509961,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509966,"byte_end":509973,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509978,"byte_end":510019,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510024,"byte_end":510068,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510073,"byte_end":510076,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510081,"byte_end":510125,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510130,"byte_end":510174,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510179,"byte_end":510182,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510187,"byte_end":510231,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510236,"byte_end":510268,"line_start":162,"line_end":162,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510273,"byte_end":510276,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510281,"byte_end":510314,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510319,"byte_end":510362,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510367,"byte_end":510416,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510421,"byte_end":510480,"line_start":167,"line_end":167,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510485,"byte_end":510492,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8120},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511558,"byte_end":511562,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510656,"byte_end":510730,"line_start":177,"line_end":177,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510735,"byte_end":510771,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510776,"byte_end":510779,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510784,"byte_end":510862,"line_start":180,"line_end":180,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510867,"byte_end":510894,"line_start":181,"line_end":181,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510899,"byte_end":510902,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510907,"byte_end":510921,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510926,"byte_end":510929,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510934,"byte_end":510941,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510946,"byte_end":510987,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":510992,"byte_end":511036,"line_start":187,"line_end":187,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511041,"byte_end":511044,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511049,"byte_end":511096,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511101,"byte_end":511131,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511136,"byte_end":511139,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511144,"byte_end":511196,"line_start":192,"line_end":192,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511201,"byte_end":511204,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511209,"byte_end":511280,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511285,"byte_end":511349,"line_start":195,"line_end":195,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511354,"byte_end":511399,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511404,"byte_end":511429,"line_start":197,"line_end":197,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511434,"byte_end":511474,"line_start":198,"line_end":198,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511479,"byte_end":511538,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511543,"byte_end":511550,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8122},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511968,"byte_end":511981,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511730,"byte_end":511814,"line_start":208,"line_end":208,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511819,"byte_end":511837,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511842,"byte_end":511845,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511850,"byte_end":511928,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":511933,"byte_end":511960,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8124},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513392,"byte_end":513402,"line_start":257,"line_end":257,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512179,"byte_end":512251,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512256,"byte_end":512314,"line_start":221,"line_end":221,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512319,"byte_end":512322,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512327,"byte_end":512401,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512406,"byte_end":512409,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512414,"byte_end":512491,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512496,"byte_end":512518,"line_start":226,"line_end":226,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512523,"byte_end":512526,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512531,"byte_end":512545,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512550,"byte_end":512553,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512558,"byte_end":512565,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512570,"byte_end":512611,"line_start":231,"line_end":231,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512616,"byte_end":512660,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512665,"byte_end":512668,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512673,"byte_end":512720,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512725,"byte_end":512755,"line_start":235,"line_end":235,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512760,"byte_end":512763,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512768,"byte_end":512810,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512815,"byte_end":512818,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512823,"byte_end":512860,"line_start":239,"line_end":239,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512865,"byte_end":512924,"line_start":240,"line_end":240,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512929,"byte_end":512936,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512941,"byte_end":512944,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512949,"byte_end":512989,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":512994,"byte_end":512997,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513002,"byte_end":513009,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513014,"byte_end":513055,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513060,"byte_end":513110,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513115,"byte_end":513118,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513123,"byte_end":513170,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513175,"byte_end":513205,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513210,"byte_end":513213,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513218,"byte_end":513272,"line_start":252,"line_end":252,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513277,"byte_end":513280,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513285,"byte_end":513358,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513363,"byte_end":513372,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513377,"byte_end":513384,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8126},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514207,"byte_end":514218,"line_start":283,"line_end":283,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513577,"byte_end":513650,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513655,"byte_end":513658,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513663,"byte_end":513721,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513726,"byte_end":513729,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513734,"byte_end":513748,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513753,"byte_end":513756,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513761,"byte_end":513768,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513773,"byte_end":513814,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513819,"byte_end":513863,"line_start":272,"line_end":272,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513868,"byte_end":513871,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513876,"byte_end":513923,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513928,"byte_end":513971,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513976,"byte_end":513979,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":513984,"byte_end":514039,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514044,"byte_end":514047,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514052,"byte_end":514077,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514082,"byte_end":514123,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514128,"byte_end":514187,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514192,"byte_end":514199,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8128},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515039,"byte_end":515053,"line_start":309,"line_end":309,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514399,"byte_end":514472,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514477,"byte_end":514480,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514485,"byte_end":514543,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514548,"byte_end":514551,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514556,"byte_end":514570,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514575,"byte_end":514578,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514583,"byte_end":514590,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514595,"byte_end":514636,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514641,"byte_end":514685,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514690,"byte_end":514693,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514698,"byte_end":514745,"line_start":300,"line_end":300,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514750,"byte_end":514796,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514801,"byte_end":514804,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514809,"byte_end":514867,"line_start":303,"line_end":303,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514872,"byte_end":514875,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514880,"byte_end":514905,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514910,"byte_end":514955,"line_start":306,"line_end":306,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":514960,"byte_end":515019,"line_start":307,"line_end":307,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515024,"byte_end":515031,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8130},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516396,"byte_end":516401,"line_start":345,"line_end":345,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515239,"byte_end":515310,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515315,"byte_end":515318,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515323,"byte_end":515393,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515398,"byte_end":515423,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515428,"byte_end":515431,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515436,"byte_end":515450,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515455,"byte_end":515458,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515463,"byte_end":515470,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515475,"byte_end":515516,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515521,"byte_end":515571,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515576,"byte_end":515579,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515584,"byte_end":515654,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515659,"byte_end":515729,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515734,"byte_end":515785,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515790,"byte_end":515793,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515798,"byte_end":515841,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515846,"byte_end":515909,"line_start":332,"line_end":332,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515914,"byte_end":515961,"line_start":333,"line_end":333,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515966,"byte_end":515969,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515974,"byte_end":515979,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":515984,"byte_end":516055,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516060,"byte_end":516112,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516117,"byte_end":516169,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516174,"byte_end":516179,"line_start":339,"line_end":339,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516184,"byte_end":516187,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516192,"byte_end":516254,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516259,"byte_end":516312,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516317,"byte_end":516376,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516381,"byte_end":516388,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8131},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517182,"byte_end":517186,"line_start":372,"line_end":372,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":8117},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516589,"byte_end":516659,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516664,"byte_end":516695,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516700,"byte_end":516703,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516708,"byte_end":516722,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516727,"byte_end":516730,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516735,"byte_end":516742,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516747,"byte_end":516788,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516793,"byte_end":516837,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516842,"byte_end":516845,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516850,"byte_end":516897,"line_start":362,"line_end":362,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516902,"byte_end":516930,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516935,"byte_end":516938,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516943,"byte_end":516977,"line_start":365,"line_end":365,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":516982,"byte_end":517024,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517029,"byte_end":517032,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517037,"byte_end":517058,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517063,"byte_end":517098,"line_start":369,"line_end":369,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517103,"byte_end":517162,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517167,"byte_end":517174,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":8134},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517995,"byte_end":518008,"line_start":398,"line_end":398,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8139},{"krate":0,"index":8141}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517912,"byte_end":517984,"line_start":397,"line_end":397,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8135},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518749,"byte_end":518754,"line_start":421,"line_end":421,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518027,"byte_end":518092,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518097,"byte_end":518100,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518105,"byte_end":518119,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518124,"byte_end":518127,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518132,"byte_end":518139,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518144,"byte_end":518185,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518190,"byte_end":518239,"line_start":405,"line_end":405,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518244,"byte_end":518281,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518286,"byte_end":518289,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518294,"byte_end":518328,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518333,"byte_end":518336,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518341,"byte_end":518346,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518351,"byte_end":518397,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518402,"byte_end":518469,"line_start":412,"line_end":412,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518474,"byte_end":518517,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518522,"byte_end":518565,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518570,"byte_end":518602,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518607,"byte_end":518612,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518617,"byte_end":518620,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518625,"byte_end":518665,"line_start":418,"line_end":418,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518670,"byte_end":518729,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518734,"byte_end":518741,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8136},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518963,"byte_end":518968,"line_start":429,"line_end":429,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518890,"byte_end":518955,"line_start":428,"line_end":428,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8137},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519310,"byte_end":519315,"line_start":440,"line_end":440,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519104,"byte_end":519175,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519180,"byte_end":519183,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519188,"byte_end":519270,"line_start":438,"line_end":438,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519275,"byte_end":519302,"line_start":439,"line_end":439,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8139},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519725,"byte_end":519739,"line_start":452,"line_end":452,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519481,"byte_end":519567,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519572,"byte_end":519590,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519595,"byte_end":519598,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519603,"byte_end":519685,"line_start":450,"line_end":450,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519690,"byte_end":519717,"line_start":451,"line_end":451,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8141},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520585,"byte_end":520594,"line_start":479,"line_end":479,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":8134},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519932,"byte_end":519964,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519969,"byte_end":519972,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":519977,"byte_end":520058,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520063,"byte_end":520085,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520090,"byte_end":520093,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520098,"byte_end":520176,"line_start":464,"line_end":464,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520181,"byte_end":520184,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520189,"byte_end":520203,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520208,"byte_end":520211,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520216,"byte_end":520223,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520228,"byte_end":520269,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520274,"byte_end":520319,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520324,"byte_end":520327,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520332,"byte_end":520379,"line_start":472,"line_end":472,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520384,"byte_end":520387,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520392,"byte_end":520435,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520440,"byte_end":520443,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520448,"byte_end":520501,"line_start":476,"line_end":476,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520506,"byte_end":520565,"line_start":477,"line_end":477,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":520570,"byte_end":520577,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":8145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524450,"byte_end":524462,"line_start":592,"line_end":592,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":8146},{"krate":0,"index":8147}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524368,"byte_end":524439,"line_start":591,"line_end":591,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8146},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524732,"byte_end":524736,"line_start":598,"line_end":598,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":8145},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524480,"byte_end":524549,"line_start":593,"line_end":593,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524554,"byte_end":524607,"line_start":594,"line_end":594,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524612,"byte_end":524615,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524620,"byte_end":524697,"line_start":596,"line_end":596,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524702,"byte_end":524724,"line_start":597,"line_end":597,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":8147},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525074,"byte_end":525089,"line_start":609,"line_end":609,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":8145},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524891,"byte_end":524964,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524969,"byte_end":524993,"line_start":606,"line_end":606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524998,"byte_end":525001,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525006,"byte_end":525066,"line_start":608,"line_end":608,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":8150},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525341,"byte_end":525356,"line_start":620,"line_end":620,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8155},{"krate":0,"index":8157}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525256,"byte_end":525330,"line_start":619,"line_end":619,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":8151},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526310,"byte_end":526318,"line_start":644,"line_end":644,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":8150},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525377,"byte_end":525466,"line_start":621,"line_end":621,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525471,"byte_end":525503,"line_start":622,"line_end":622,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525508,"byte_end":525511,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525516,"byte_end":525609,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525614,"byte_end":525617,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525622,"byte_end":525633,"line_start":626,"line_end":626,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525638,"byte_end":525679,"line_start":627,"line_end":627,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525684,"byte_end":525763,"line_start":628,"line_end":628,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525768,"byte_end":525771,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525776,"byte_end":525864,"line_start":630,"line_end":630,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525869,"byte_end":525872,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525877,"byte_end":525933,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525938,"byte_end":525966,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525971,"byte_end":525974,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525979,"byte_end":526029,"line_start":635,"line_end":635,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526034,"byte_end":526062,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526067,"byte_end":526070,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526075,"byte_end":526131,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526136,"byte_end":526164,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526169,"byte_end":526172,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526177,"byte_end":526226,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526231,"byte_end":526290,"line_start":642,"line_end":642,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526295,"byte_end":526302,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8152},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527119,"byte_end":527132,"line_start":668,"line_end":668,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":8150},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526461,"byte_end":526539,"line_start":651,"line_end":651,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526544,"byte_end":526547,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526552,"byte_end":526563,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526568,"byte_end":526609,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526614,"byte_end":526693,"line_start":655,"line_end":655,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526698,"byte_end":526701,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526706,"byte_end":526775,"line_start":657,"line_end":657,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526780,"byte_end":526783,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526788,"byte_end":526844,"line_start":659,"line_end":659,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526849,"byte_end":526877,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526882,"byte_end":526885,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526890,"byte_end":526940,"line_start":662,"line_end":662,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526945,"byte_end":526973,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526978,"byte_end":526981,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":526986,"byte_end":527035,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527040,"byte_end":527099,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527104,"byte_end":527111,"line_start":667,"line_end":667,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8153},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528823,"byte_end":528833,"line_start":716,"line_end":716,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":8150},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527240,"byte_end":527315,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527320,"byte_end":527387,"line_start":676,"line_end":676,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527392,"byte_end":527489,"line_start":677,"line_end":677,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527494,"byte_end":527497,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527502,"byte_end":527572,"line_start":679,"line_end":679,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527577,"byte_end":527651,"line_start":680,"line_end":680,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527656,"byte_end":527711,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527716,"byte_end":527719,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527724,"byte_end":527802,"line_start":683,"line_end":683,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527807,"byte_end":527834,"line_start":684,"line_end":684,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527839,"byte_end":527842,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527847,"byte_end":527924,"line_start":686,"line_end":686,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527929,"byte_end":527951,"line_start":687,"line_end":687,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527956,"byte_end":527959,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527964,"byte_end":527978,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527983,"byte_end":527986,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":527991,"byte_end":527998,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528003,"byte_end":528044,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528049,"byte_end":528096,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528101,"byte_end":528104,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528109,"byte_end":528158,"line_start":695,"line_end":695,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528163,"byte_end":528188,"line_start":696,"line_end":696,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528193,"byte_end":528196,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528201,"byte_end":528224,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528229,"byte_end":528290,"line_start":699,"line_end":699,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528295,"byte_end":528324,"line_start":700,"line_end":700,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528329,"byte_end":528360,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528365,"byte_end":528381,"line_start":702,"line_end":702,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528386,"byte_end":528389,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528394,"byte_end":528417,"line_start":704,"line_end":704,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528422,"byte_end":528483,"line_start":705,"line_end":705,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528488,"byte_end":528517,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528522,"byte_end":528552,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528557,"byte_end":528573,"line_start":708,"line_end":708,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528578,"byte_end":528581,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528586,"byte_end":528609,"line_start":710,"line_end":710,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528614,"byte_end":528675,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528680,"byte_end":528709,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528714,"byte_end":528739,"line_start":713,"line_end":713,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528744,"byte_end":528803,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":528808,"byte_end":528815,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8155},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531012,"byte_end":531021,"line_start":774,"line_end":774,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":8150},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529030,"byte_end":529105,"line_start":723,"line_end":723,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529110,"byte_end":529181,"line_start":724,"line_end":724,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529186,"byte_end":529281,"line_start":725,"line_end":725,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529286,"byte_end":529289,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529294,"byte_end":529364,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529369,"byte_end":529444,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529449,"byte_end":529519,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529524,"byte_end":529534,"line_start":730,"line_end":730,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529539,"byte_end":529542,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529547,"byte_end":529625,"line_start":732,"line_end":732,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529630,"byte_end":529657,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529662,"byte_end":529665,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529670,"byte_end":529747,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529752,"byte_end":529774,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529779,"byte_end":529782,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529787,"byte_end":529799,"line_start":738,"line_end":738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529804,"byte_end":529807,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529812,"byte_end":529885,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529890,"byte_end":529963,"line_start":741,"line_end":741,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":529968,"byte_end":530042,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530047,"byte_end":530103,"line_start":743,"line_end":743,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530108,"byte_end":530111,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530116,"byte_end":530163,"line_start":745,"line_end":745,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530168,"byte_end":530171,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530176,"byte_end":530190,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530195,"byte_end":530198,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530203,"byte_end":530210,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530215,"byte_end":530256,"line_start":750,"line_end":750,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530261,"byte_end":530308,"line_start":751,"line_end":751,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530313,"byte_end":530316,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530321,"byte_end":530367,"line_start":753,"line_end":753,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530372,"byte_end":530404,"line_start":754,"line_end":754,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530409,"byte_end":530412,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530417,"byte_end":530440,"line_start":756,"line_end":756,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530445,"byte_end":530499,"line_start":757,"line_end":757,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530504,"byte_end":530533,"line_start":758,"line_end":758,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530538,"byte_end":530567,"line_start":759,"line_end":759,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530572,"byte_end":530588,"line_start":760,"line_end":760,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530593,"byte_end":530596,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530601,"byte_end":530624,"line_start":762,"line_end":762,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530629,"byte_end":530683,"line_start":763,"line_end":763,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530688,"byte_end":530717,"line_start":764,"line_end":764,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530722,"byte_end":530749,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530754,"byte_end":530770,"line_start":766,"line_end":766,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530775,"byte_end":530778,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530783,"byte_end":530806,"line_start":768,"line_end":768,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530811,"byte_end":530865,"line_start":769,"line_end":769,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530870,"byte_end":530899,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530904,"byte_end":530928,"line_start":771,"line_end":771,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530933,"byte_end":530992,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":530997,"byte_end":531004,"line_start":773,"line_end":773,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8157},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532545,"byte_end":532550,"line_start":813,"line_end":813,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":8150},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531199,"byte_end":531250,"line_start":781,"line_end":781,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531255,"byte_end":531342,"line_start":782,"line_end":782,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531347,"byte_end":531350,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531355,"byte_end":531421,"line_start":784,"line_end":784,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531426,"byte_end":531508,"line_start":785,"line_end":785,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531513,"byte_end":531573,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531578,"byte_end":531581,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531586,"byte_end":531621,"line_start":788,"line_end":788,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531626,"byte_end":531648,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531653,"byte_end":531656,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531661,"byte_end":531673,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531678,"byte_end":531681,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531686,"byte_end":531777,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531782,"byte_end":531785,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531790,"byte_end":531852,"line_start":795,"line_end":795,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531857,"byte_end":531860,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531865,"byte_end":531879,"line_start":797,"line_end":797,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531884,"byte_end":531887,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531892,"byte_end":531899,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531904,"byte_end":531945,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":531950,"byte_end":531997,"line_start":801,"line_end":801,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532002,"byte_end":532037,"line_start":802,"line_end":802,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532042,"byte_end":532045,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532050,"byte_end":532105,"line_start":804,"line_end":804,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532110,"byte_end":532113,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532118,"byte_end":532180,"line_start":806,"line_end":806,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532185,"byte_end":532256,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532261,"byte_end":532332,"line_start":808,"line_end":808,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532337,"byte_end":532408,"line_start":809,"line_end":809,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532413,"byte_end":532461,"line_start":810,"line_end":810,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532466,"byte_end":532525,"line_start":811,"line_end":811,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532530,"byte_end":532537,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8189},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":8190},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8376},{"krate":0,"index":8379},{"krate":0,"index":8382},{"krate":0,"index":8385},{"krate":0,"index":8467}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612257,"byte_end":612304,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612305,"byte_end":612308,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612309,"byte_end":612384,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mod.rs","byte_start":612385,"byte_end":612442,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8244},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613865,"byte_end":613870,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8246},{"krate":0,"index":8247},{"krate":0,"index":8248}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613538,"byte_end":613564,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613565,"byte_end":613568,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613569,"byte_end":613583,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613584,"byte_end":613587,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613588,"byte_end":613667,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613668,"byte_end":613750,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613751,"byte_end":613835,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":613836,"byte_end":613853,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8271},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615096,"byte_end":615099,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615046,"byte_end":615084,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8272},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615526,"byte_end":615536,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615280,"byte_end":615335,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615340,"byte_end":615343,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615348,"byte_end":615362,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615367,"byte_end":615370,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615375,"byte_end":615382,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615387,"byte_end":615416,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615421,"byte_end":615424,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615429,"byte_end":615459,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615464,"byte_end":615502,"line_start":90,"line_end":90,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615507,"byte_end":615514,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8275},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615750,"byte_end":615758,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615622,"byte_end":615666,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615671,"byte_end":615674,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615679,"byte_end":615738,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8276},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616179,"byte_end":616183,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616014,"byte_end":616050,"line_start":110,"line_end":110,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616055,"byte_end":616058,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616063,"byte_end":616136,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616141,"byte_end":616167,"line_start":113,"line_end":113,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8277},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616811,"byte_end":616818,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616301,"byte_end":616356,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616361,"byte_end":616364,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616369,"byte_end":616444,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616449,"byte_end":616523,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616528,"byte_end":616531,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616536,"byte_end":616550,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616555,"byte_end":616558,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616563,"byte_end":616570,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616575,"byte_end":616616,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616621,"byte_end":616650,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616655,"byte_end":616658,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616663,"byte_end":616697,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616702,"byte_end":616728,"line_start":130,"line_end":130,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616733,"byte_end":616773,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616778,"byte_end":616787,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":616792,"byte_end":616799,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8281},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":618540,"byte_end":618555,"line_start":179,"line_end":179,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8284},{"krate":0,"index":8285}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":618447,"byte_end":618528,"line_start":178,"line_end":178,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":8300},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621090,"byte_end":621100,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8303}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":620926,"byte_end":620990,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":620991,"byte_end":621064,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621065,"byte_end":621078,"line_start":254,"line_end":254,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8307},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621669,"byte_end":621672,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621190,"byte_end":621250,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621255,"byte_end":621258,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621263,"byte_end":621276,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621281,"byte_end":621284,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621289,"byte_end":621296,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621301,"byte_end":621342,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621347,"byte_end":621390,"line_start":266,"line_end":266,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621395,"byte_end":621398,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621403,"byte_end":621456,"line_start":268,"line_end":268,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621461,"byte_end":621466,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621471,"byte_end":621560,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621565,"byte_end":621607,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621612,"byte_end":621617,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621622,"byte_end":621631,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621636,"byte_end":621643,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621648,"byte_end":621657,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8323},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622964,"byte_end":622980,"line_start":316,"line_end":316,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8327},{"krate":0,"index":8328},{"krate":0,"index":8329}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622780,"byte_end":622868,"line_start":314,"line_end":314,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622869,"byte_end":622952,"line_start":315,"line_end":315,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8334},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623746,"byte_end":623749,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623157,"byte_end":623217,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623222,"byte_end":623225,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623230,"byte_end":623243,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623248,"byte_end":623251,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623256,"byte_end":623263,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623268,"byte_end":623309,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623314,"byte_end":623375,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623380,"byte_end":623383,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623388,"byte_end":623441,"line_start":331,"line_end":331,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623446,"byte_end":623451,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623456,"byte_end":623545,"line_start":333,"line_end":333,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623550,"byte_end":623640,"line_start":334,"line_end":334,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623645,"byte_end":623684,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623689,"byte_end":623694,"line_start":336,"line_end":336,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623699,"byte_end":623708,"line_start":337,"line_end":337,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623713,"byte_end":623720,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623725,"byte_end":623734,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":15874},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":636803,"byte_end":636812,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":15876},{"krate":0,"index":15877}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13919511,"byte_end":13919520,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8508},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638222,"byte_end":638225,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"pub fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":636918,"byte_end":637000,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637005,"byte_end":637073,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637078,"byte_end":637081,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637086,"byte_end":637158,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637163,"byte_end":637246,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637251,"byte_end":637276,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637281,"byte_end":637284,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637289,"byte_end":637304,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637309,"byte_end":637312,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637317,"byte_end":637340,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637345,"byte_end":637348,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637353,"byte_end":637360,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637365,"byte_end":637406,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637411,"byte_end":637470,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637475,"byte_end":637478,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637483,"byte_end":637552,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637557,"byte_end":637622,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637627,"byte_end":637652,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637657,"byte_end":637700,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637705,"byte_end":637714,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637719,"byte_end":637726,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637731,"byte_end":637734,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637739,"byte_end":637762,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637767,"byte_end":637770,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637775,"byte_end":637782,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637787,"byte_end":637828,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637833,"byte_end":637885,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637890,"byte_end":637935,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637940,"byte_end":637943,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":637948,"byte_end":638017,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638022,"byte_end":638107,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638112,"byte_end":638137,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638142,"byte_end":638184,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638189,"byte_end":638198,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638203,"byte_end":638210,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8509},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638730,"byte_end":638740,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"pub fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638320,"byte_end":638384,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638389,"byte_end":638457,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638462,"byte_end":638512,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638517,"byte_end":638571,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638576,"byte_end":638668,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638673,"byte_end":638718,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":15917},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639008,"byte_end":639025,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":15918}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638818,"byte_end":638868,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638869,"byte_end":638945,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":638946,"byte_end":638979,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":15921},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639131,"byte_end":639142,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":15922}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639059,"byte_end":639095,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8511},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639413,"byte_end":639421,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639199,"byte_end":639273,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639278,"byte_end":639318,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639323,"byte_end":639326,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639331,"byte_end":639401,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":15932},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639943,"byte_end":639950,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639834,"byte_end":639886,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8531},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":642084,"byte_end":642089,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641717,"byte_end":641785,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641790,"byte_end":641793,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641798,"byte_end":641865,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641870,"byte_end":641938,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641943,"byte_end":642017,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":642022,"byte_end":642072,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8543},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642272,"byte_end":642279,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8545},{"krate":0,"index":8546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8545},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642294,"byte_end":642300,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8546},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642309,"byte_end":642318,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8553},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642511,"byte_end":642517,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8555}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8555},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642542,"byte_end":642550,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":8553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8570},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":643856,"byte_end":643860,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15963},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644216,"byte_end":644223,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15984},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644957,"byte_end":644970,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16000},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645312,"byte_end":645321,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16015},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646276,"byte_end":646283,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16030},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646994,"byte_end":647002,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16045},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647722,"byte_end":647733,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16057},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648618,"byte_end":648630,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16069},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":649778,"byte_end":649792,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8734},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650557,"byte_end":650563,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":53099,"byte_end":53104,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":54811,"byte_end":54817,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":54976,"byte_end":54982,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55410,"byte_end":55418,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55777,"byte_end":55787,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78213,"byte_end":78223,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78374,"byte_end":78384,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78507,"byte_end":78517,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79226,"byte_end":79236,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79366,"byte_end":79376,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79619,"byte_end":79629,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":80582,"byte_end":80592,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":80835,"byte_end":80845,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84169,"byte_end":84182,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84312,"byte_end":84325,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84568,"byte_end":84581,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60759,"byte_end":60762,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85890,"byte_end":85894,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86490,"byte_end":86494,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86638,"byte_end":86642,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87245,"byte_end":87252,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87813,"byte_end":87820,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87965,"byte_end":87972,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87998,"byte_end":88005,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88759,"byte_end":88768,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89371,"byte_end":89380,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":90478,"byte_end":90487,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":90688,"byte_end":90697,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92017,"byte_end":92029,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92255,"byte_end":92267,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":93380,"byte_end":93392,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":93596,"byte_end":93608,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95258,"byte_end":95270,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95368,"byte_end":95380,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95694,"byte_end":95706,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95893,"byte_end":95905,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96343,"byte_end":96349,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":97043,"byte_end":97049,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":97191,"byte_end":97197,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":97925,"byte_end":97938,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":98504,"byte_end":98517,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":99537,"byte_end":99550,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101722,"byte_end":101727,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101906,"byte_end":101911,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101943,"byte_end":101948,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102045,"byte_end":102050,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110037,"byte_end":110044,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":112805,"byte_end":112812,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":113800,"byte_end":113807,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114303,"byte_end":114309,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116745,"byte_end":116751,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":117455,"byte_end":117461,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118024,"byte_end":118033,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119040,"byte_end":119049,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119232,"byte_end":119241,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119911,"byte_end":119920,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128528,"byte_end":128538,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":130368,"byte_end":130378,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":131526,"byte_end":131536,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132018,"byte_end":132027,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133866,"byte_end":133875,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135237,"byte_end":135245,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":136323,"byte_end":136331,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":137762,"byte_end":137770,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138749,"byte_end":138755,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139094,"byte_end":139100,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139485,"byte_end":139491,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139872,"byte_end":139878,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":140119,"byte_end":140125,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":140464,"byte_end":140470,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":140746,"byte_end":140752,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":141287,"byte_end":141293,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":142965,"byte_end":142971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":143772,"byte_end":143778,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":145085,"byte_end":145091,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":145521,"byte_end":145527,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":209062,"byte_end":209067,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":209293,"byte_end":209298,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":209507,"byte_end":209512,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":211108,"byte_end":211115,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":211380,"byte_end":211387,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":211565,"byte_end":211572,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":212598,"byte_end":212603,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":212997,"byte_end":213002,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":213252,"byte_end":213257,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":214382,"byte_end":214388,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":214608,"byte_end":214614,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":215322,"byte_end":215328,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216054,"byte_end":216059,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216280,"byte_end":216285,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216417,"byte_end":216422,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216540,"byte_end":216545,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":217351,"byte_end":217356,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":217512,"byte_end":217517,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":218266,"byte_end":218271,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":219019,"byte_end":219028,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":11533},{"krate":0,"index":11534},{"krate":0,"index":11535},{"krate":0,"index":11536}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":219214,"byte_end":219223,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":219341,"byte_end":219350,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":220791,"byte_end":220797,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":221270,"byte_end":221276,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":11598},{"krate":0,"index":11599},{"krate":0,"index":11600},{"krate":0,"index":11601}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":221599,"byte_end":221605,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":221942,"byte_end":221948,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224120,"byte_end":224129,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224426,"byte_end":224435,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":11659},{"krate":0,"index":11660},{"krate":0,"index":11661},{"krate":0,"index":11662}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224702,"byte_end":224711,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224978,"byte_end":224987,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":227089,"byte_end":227096,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2385},{"krate":0,"index":11712},{"krate":0,"index":11713},{"krate":0,"index":11714},{"krate":0,"index":11715}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":227265,"byte_end":227272,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":227464,"byte_end":227471,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2391},{"krate":0,"index":2392}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":228985,"byte_end":228989,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2428}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":229345,"byte_end":229349,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2434}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":229610,"byte_end":229614,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":229849,"byte_end":229853,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":231442,"byte_end":231445,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":231775,"byte_end":231778,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":232031,"byte_end":232034,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":232263,"byte_end":232266,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234018,"byte_end":234021,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234351,"byte_end":234354,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234606,"byte_end":234609,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234838,"byte_end":234841,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":236595,"byte_end":236602,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":236895,"byte_end":236902,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":237133,"byte_end":237140,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2607}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":237379,"byte_end":237386,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238487,"byte_end":238491,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":12059},{"krate":0,"index":12060},{"krate":0,"index":12061},{"krate":0,"index":12062}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238988,"byte_end":238992,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":239090,"byte_end":239094,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240296,"byte_end":240308,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242798,"byte_end":242810,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242930,"byte_end":242942,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2696}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":243827,"byte_end":243830,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":244019,"byte_end":244022,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":12183},{"krate":0,"index":12184},{"krate":0,"index":12185},{"krate":0,"index":12186}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":244191,"byte_end":244194,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":244362,"byte_end":244365,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245477,"byte_end":245481,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245532,"byte_end":245536,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245687,"byte_end":245691,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245830,"byte_end":245834,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246485,"byte_end":246499,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246650,"byte_end":246664,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246808,"byte_end":246822,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2832},{"krate":0,"index":2833}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248133,"byte_end":248141,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":12326},{"krate":0,"index":12327},{"krate":0,"index":12328},{"krate":0,"index":12329},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253638,"byte_end":253646,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253788,"byte_end":253796,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":254955,"byte_end":254959,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":255204,"byte_end":255208,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":255319,"byte_end":255323,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":256020,"byte_end":256027,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2917}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":256275,"byte_end":256282,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2920}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":256393,"byte_end":256400,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257120,"byte_end":257126,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257478,"byte_end":257484,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257753,"byte_end":257759,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259020,"byte_end":259028,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259348,"byte_end":259356,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259540,"byte_end":259548,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259919,"byte_end":259929,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260594,"byte_end":260598,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":12550},{"krate":0,"index":12551},{"krate":0,"index":12552},{"krate":0,"index":12553}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260789,"byte_end":260793,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260911,"byte_end":260915,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":262512,"byte_end":262521,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":262973,"byte_end":262982,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":12619},{"krate":0,"index":12620},{"krate":0,"index":12621},{"krate":0,"index":12622}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":263308,"byte_end":263317,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":263565,"byte_end":263574,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":265874,"byte_end":265878,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":12663},{"krate":0,"index":12664},{"krate":0,"index":12665},{"krate":0,"index":12666}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":266051,"byte_end":266055,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":267027,"byte_end":267031,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3114}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":268054,"byte_end":268063,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":268511,"byte_end":268520,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3157},{"krate":0,"index":12732},{"krate":0,"index":12733},{"krate":0,"index":12734},{"krate":0,"index":12735}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":268839,"byte_end":268848,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":270367,"byte_end":270376,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":271760,"byte_end":271769,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3206}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272057,"byte_end":272066,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":12789},{"krate":0,"index":12790},{"krate":0,"index":12791},{"krate":0,"index":12792},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":274183,"byte_end":274192,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":275224,"byte_end":275233,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276175,"byte_end":276179,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276430,"byte_end":276434,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":12850},{"krate":0,"index":12851},{"krate":0,"index":12852},{"krate":0,"index":12853}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276680,"byte_end":276684,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276910,"byte_end":276914,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3278}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":278796,"byte_end":278799,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280385,"byte_end":280388,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280583,"byte_end":280586,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":283281,"byte_end":283287,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":12955},{"krate":0,"index":12956},{"krate":0,"index":12957},{"krate":0,"index":12958}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":283795,"byte_end":283801,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":285417,"byte_end":285423,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":286395,"byte_end":286406,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":13003},{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13006}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":286758,"byte_end":286769,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":288938,"byte_end":288949,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3422}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":289947,"byte_end":289951,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":290437,"byte_end":290441,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":290605,"byte_end":290609,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":13072},{"krate":0,"index":13073},{"krate":0,"index":13074},{"krate":0,"index":13075}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":290971,"byte_end":290975,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":292202,"byte_end":292206,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":293387,"byte_end":293402,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3539}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":293734,"byte_end":293749,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":13117},{"krate":0,"index":13118},{"krate":0,"index":13119},{"krate":0,"index":13120}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":294136,"byte_end":294151,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":295605,"byte_end":295620,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":296730,"byte_end":296738,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":297085,"byte_end":297093,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3595},{"krate":0,"index":13162},{"krate":0,"index":13163},{"krate":0,"index":13164},{"krate":0,"index":13165}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":297373,"byte_end":297381,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":300525,"byte_end":300540,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3686},{"krate":0,"index":3688},{"krate":0,"index":3690}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":304659,"byte_end":304672,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305192,"byte_end":305205,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305603,"byte_end":305613,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305638,"byte_end":305648,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305658,"byte_end":305668,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3716}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":306719,"byte_end":306729,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":308330,"byte_end":308343,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":308547,"byte_end":308560,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3725},{"krate":0,"index":3726}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":309675,"byte_end":309691,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":310165,"byte_end":310181,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3733},{"krate":0,"index":13262},{"krate":0,"index":13263},{"krate":0,"index":13264},{"krate":0,"index":13265}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":311120,"byte_end":311140,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":311407,"byte_end":311423,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":311628,"byte_end":311644,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":317073,"byte_end":317090,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3789}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":317436,"byte_end":317453,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3794}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":317886,"byte_end":317903,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3799}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":318133,"byte_end":318150,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3804},{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":320510,"byte_end":320521,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":13450},{"krate":0,"index":13451},{"krate":0,"index":13452},{"krate":0,"index":13453}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":320713,"byte_end":320724,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":321576,"byte_end":321587,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3856}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158480,"byte_end":158481,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":360975,"byte_end":360982,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":361275,"byte_end":361282,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":13511},{"krate":0,"index":13512},{"krate":0,"index":13513},{"krate":0,"index":13514}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":361563,"byte_end":361570,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":362713,"byte_end":362720,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363638,"byte_end":363648,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4224},{"krate":0,"index":13758},{"krate":0,"index":13759},{"krate":0,"index":13760},{"krate":0,"index":13761}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363841,"byte_end":363851,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4227}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363972,"byte_end":363982,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4232}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":365081,"byte_end":365087,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":365379,"byte_end":365385,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":13957},{"krate":0,"index":13958},{"krate":0,"index":13959},{"krate":0,"index":13960}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":365663,"byte_end":365669,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4283},{"krate":0,"index":4284},{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":366946,"byte_end":366952,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367856,"byte_end":367863,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367917,"byte_end":367924,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":368087,"byte_end":368094,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":368236,"byte_end":368243,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":369019,"byte_end":369029,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4372}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":369325,"byte_end":369335,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4377}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":369580,"byte_end":369590,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":370989,"byte_end":370998,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4424}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":371394,"byte_end":371403,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4429},{"krate":0,"index":14087},{"krate":0,"index":14088},{"krate":0,"index":14089},{"krate":0,"index":14090}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":371646,"byte_end":371655,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4434}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":371912,"byte_end":371921,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374062,"byte_end":374074,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4482}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374374,"byte_end":374386,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4487},{"krate":0,"index":14148},{"krate":0,"index":14149},{"krate":0,"index":14150},{"krate":0,"index":14151}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374583,"byte_end":374595,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4493}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374873,"byte_end":374885,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4499},{"krate":0,"index":4500},{"krate":0,"index":4501}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":377069,"byte_end":377079,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4534},{"krate":0,"index":14192},{"krate":0,"index":14193},{"krate":0,"index":14194},{"krate":0,"index":14195}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":377344,"byte_end":377354,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4537}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":377600,"byte_end":377610,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4540},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379219,"byte_end":379229,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4582}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379369,"byte_end":379379,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4586}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379567,"byte_end":379577,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4590},{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":380575,"byte_end":380584,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4620}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":380803,"byte_end":380812,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4623},{"krate":0,"index":4624}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":382196,"byte_end":382205,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":14329},{"krate":0,"index":14330},{"krate":0,"index":14331},{"krate":0,"index":14332}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":382700,"byte_end":382709,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":384657,"byte_end":384666,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4686}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385325,"byte_end":385339,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4690}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385484,"byte_end":385498,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385685,"byte_end":385699,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386309,"byte_end":386316,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386675,"byte_end":386682,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386962,"byte_end":386969,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4755}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":387223,"byte_end":387230,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4761},{"krate":0,"index":4762}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":391093,"byte_end":391102,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4804}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":391364,"byte_end":391373,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4810},{"krate":0,"index":4811}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":393119,"byte_end":393131,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":393587,"byte_end":393599,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4861},{"krate":0,"index":14545},{"krate":0,"index":14546},{"krate":0,"index":14547},{"krate":0,"index":14548}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":393939,"byte_end":393951,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4866},{"krate":0,"index":4867},{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":395450,"byte_end":395462,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4873}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":396690,"byte_end":396702,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":397154,"byte_end":397166,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4919},{"krate":0,"index":14614},{"krate":0,"index":14615},{"krate":0,"index":14616},{"krate":0,"index":14617}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":397504,"byte_end":397516,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":399123,"byte_end":399135,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":400423,"byte_end":400441,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4981},{"krate":0,"index":14662},{"krate":0,"index":14663},{"krate":0,"index":14664},{"krate":0,"index":14665}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":400780,"byte_end":400798,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4984},{"krate":0,"index":4985}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":403004,"byte_end":403015,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5035},{"krate":0,"index":14710},{"krate":0,"index":14711},{"krate":0,"index":14712},{"krate":0,"index":14713}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":403352,"byte_end":403363,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5038},{"krate":0,"index":5039}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405521,"byte_end":405541,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5087}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405906,"byte_end":405926,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406165,"byte_end":406185,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5097}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406633,"byte_end":406653,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5102},{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409754,"byte_end":409767,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409983,"byte_end":409996,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":410208,"byte_end":410221,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5155}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":411842,"byte_end":411855,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5158},{"krate":0,"index":5159},{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":412462,"byte_end":412475,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5163},{"krate":0,"index":5164}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":326987,"byte_end":326988,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414511,"byte_end":414515,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":415137,"byte_end":415141,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5333}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416332,"byte_end":416338,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416365,"byte_end":416371,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5370}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416679,"byte_end":416685,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5373}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417282,"byte_end":417292,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417336,"byte_end":417346,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":5410}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417660,"byte_end":417670,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5414}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420190,"byte_end":420195,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420227,"byte_end":420232,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420317,"byte_end":420322,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420571,"byte_end":420576,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5463}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421515,"byte_end":421519,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5505}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421648,"byte_end":421652,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":422257,"byte_end":422261,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5513}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422920,"byte_end":422927,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422959,"byte_end":422966,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5551}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":423051,"byte_end":423058,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":423303,"byte_end":423310,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5559}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423697,"byte_end":423703,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423734,"byte_end":423740,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5594}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424505,"byte_end":424511,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5602}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":425207,"byte_end":425220,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5632}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426133,"byte_end":426146,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5635}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429033,"byte_end":429039,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430343,"byte_end":430349,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5693}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430528,"byte_end":430534,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5697},{"krate":0,"index":5698}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431247,"byte_end":431255,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5742}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431552,"byte_end":431560,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5744}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434587,"byte_end":434605,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757},{"krate":0,"index":5758}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":436054,"byte_end":436072,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5764}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":436352,"byte_end":436370,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5770},{"krate":0,"index":5771}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":437482,"byte_end":437500,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":440071,"byte_end":440077,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5836}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":440317,"byte_end":440323,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5842}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":440603,"byte_end":440609,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5848},{"krate":0,"index":5849}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442157,"byte_end":442169,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5913}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442274,"byte_end":442286,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442317,"byte_end":442329,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5918}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442452,"byte_end":442464,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5921}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442645,"byte_end":442657,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5924},{"krate":0,"index":5925}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445239,"byte_end":445253,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445279,"byte_end":445293,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446859,"byte_end":446873,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446966,"byte_end":446980,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448142,"byte_end":448156,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448322,"byte_end":448336,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448616,"byte_end":448630,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5959}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448800,"byte_end":448814,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5962}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/abort.rs","byte_start":475779,"byte_end":475790,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6064}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":477149,"byte_end":477157,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":478231,"byte_end":478239,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":478276,"byte_end":478286,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6091},{"krate":0,"index":6092},{"krate":0,"index":6093}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479138,"byte_end":479148,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479196,"byte_end":479203,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479466,"byte_end":479473,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479514,"byte_end":479524,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480393,"byte_end":480403,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480451,"byte_end":480455,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480714,"byte_end":480718,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480887,"byte_end":480897,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480942,"byte_end":480952,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480998,"byte_end":481008,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":481053,"byte_end":481063,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":481117,"byte_end":481125,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":481174,"byte_end":481182,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":482867,"byte_end":482871,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":482906,"byte_end":482910,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":482942,"byte_end":482946,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":484079,"byte_end":484083,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":485083,"byte_end":485087,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6215}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":486537,"byte_end":486552,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6271},{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":489220,"byte_end":489235,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6277}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451201,"byte_end":451217,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451258,"byte_end":451274,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451303,"byte_end":451319,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451344,"byte_end":451360,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6297}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451545,"byte_end":451561,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6299}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453268,"byte_end":453284,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6302}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453358,"byte_end":453374,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":464983,"byte_end":464999,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6320},{"krate":0,"index":6321},{"krate":0,"index":6330}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":469375,"byte_end":469379,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6329}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472188,"byte_end":472204,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6333}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472342,"byte_end":472358,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6336},{"krate":0,"index":6337}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472929,"byte_end":472945,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6340}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":474595,"byte_end":474611,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6357}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475081,"byte_end":475097,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6360}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475373,"byte_end":475389,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6365}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475511,"byte_end":475527,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6368}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":490830,"byte_end":490839,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6425}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":490984,"byte_end":490993,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6428},{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":6434}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492466,"byte_end":492475,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492574,"byte_end":492583,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6440},{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493367,"byte_end":493376,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6444}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494394,"byte_end":494403,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6449}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494548,"byte_end":494557,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494740,"byte_end":494749,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6457},{"krate":0,"index":6458},{"krate":0,"index":6459}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495832,"byte_end":495836,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6477}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496269,"byte_end":496273,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496328,"byte_end":496335,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496772,"byte_end":496779,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496830,"byte_end":496838,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":497266,"byte_end":497274,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499522,"byte_end":499524,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499579,"byte_end":499581,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533975,"byte_end":533985,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534423,"byte_end":534433,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534944,"byte_end":534954,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6751},{"krate":0,"index":6752},{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":535499,"byte_end":535509,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":6761}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":536301,"byte_end":536311,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6764},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6768}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":536910,"byte_end":536920,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6771},{"krate":0,"index":6772}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":537424,"byte_end":537434,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6775}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":537578,"byte_end":537588,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6778}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":537850,"byte_end":537860,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6781},{"krate":0,"index":6782}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":538076,"byte_end":538086,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6785},{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":539893,"byte_end":539902,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":15316},{"krate":0,"index":15317},{"krate":0,"index":15318},{"krate":0,"index":15319},{"krate":0,"index":6850},{"krate":0,"index":6851}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541045,"byte_end":541054,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6854},{"krate":0,"index":6855}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":542615,"byte_end":542624,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6860},{"krate":0,"index":6861}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":544026,"byte_end":544035,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6865},{"krate":0,"index":6866}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":544865,"byte_end":544874,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":15320},{"krate":0,"index":15321},{"krate":0,"index":15322},{"krate":0,"index":15323}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":544952,"byte_end":544961,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6871}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":545277,"byte_end":545286,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6874}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":548206,"byte_end":548218,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6877},{"krate":0,"index":6878}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550300,"byte_end":550309,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944},{"krate":0,"index":15375},{"krate":0,"index":15376},{"krate":0,"index":15377},{"krate":0,"index":15378},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":553908,"byte_end":553917,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6954},{"krate":0,"index":6955},{"krate":0,"index":6957},{"krate":0,"index":6958}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555340,"byte_end":555349,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":15379},{"krate":0,"index":15380}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555430,"byte_end":555439,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":15381},{"krate":0,"index":15382}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555520,"byte_end":555529,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555888,"byte_end":555897,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6968}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":556951,"byte_end":556961,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":558163,"byte_end":558173,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7018},{"krate":0,"index":7019}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562033,"byte_end":562038,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7059},{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":7063}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":563294,"byte_end":563299,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7067}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":563629,"byte_end":563634,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7071},{"krate":0,"index":7072}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":564703,"byte_end":564708,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7077},{"krate":0,"index":7078}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565819,"byte_end":565824,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565877,"byte_end":565882,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7107}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":566024,"byte_end":566029,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7110},{"krate":0,"index":7111}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567799,"byte_end":567803,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7158},{"krate":0,"index":7159}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":569526,"byte_end":569533,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7203},{"krate":0,"index":7204}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571366,"byte_end":571372,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7252},{"krate":0,"index":7253},{"krate":0,"index":7254},{"krate":0,"index":7255}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574572,"byte_end":574578,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7258}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574865,"byte_end":574871,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7261},{"krate":0,"index":7262}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":575503,"byte_end":575509,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7265},{"krate":0,"index":7266}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576713,"byte_end":576719,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15604},{"krate":0,"index":15605},{"krate":0,"index":15606},{"krate":0,"index":15607}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576794,"byte_end":576800,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15608},{"krate":0,"index":15609},{"krate":0,"index":15610},{"krate":0,"index":15611}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576878,"byte_end":576884,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15612},{"krate":0,"index":15613},{"krate":0,"index":15614},{"krate":0,"index":15615}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576957,"byte_end":576963,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":15616},{"krate":0,"index":15617},{"krate":0,"index":15618},{"krate":0,"index":15619}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577880,"byte_end":577885,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7303}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":578094,"byte_end":578099,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7305},{"krate":0,"index":7306}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":578331,"byte_end":578336,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7308}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578834,"byte_end":578841,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578896,"byte_end":578903,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7341}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":579034,"byte_end":579041,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7345},{"krate":0,"index":7346}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580611,"byte_end":580616,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580669,"byte_end":580674,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7375}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580787,"byte_end":580792,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7378},{"krate":0,"index":7379}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/lines.rs","byte_start":581595,"byte_end":581600,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7417}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/lines.rs","byte_start":581763,"byte_end":581768,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7420},{"krate":0,"index":7421}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582763,"byte_end":582767,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582819,"byte_end":582823,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7450}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582988,"byte_end":582992,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7453},{"krate":0,"index":7454}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583680,"byte_end":583692,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583744,"byte_end":583756,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7487}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583935,"byte_end":583947,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7490},{"krate":0,"index":7491}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584642,"byte_end":584651,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584703,"byte_end":584712,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7526}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584877,"byte_end":584886,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7529},{"krate":0,"index":7530}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":586029,"byte_end":586037,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":586092,"byte_end":586100,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7571}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":587069,"byte_end":587077,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7577},{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587832,"byte_end":587841,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587893,"byte_end":587902,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7613}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":588147,"byte_end":588152,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7619}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":589987,"byte_end":589996,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7624},{"krate":0,"index":7625}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590869,"byte_end":590881,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590933,"byte_end":590945,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7670}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":591874,"byte_end":591886,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7676},{"krate":0,"index":7677}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592706,"byte_end":592715,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592770,"byte_end":592779,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7712}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":593751,"byte_end":593760,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7717},{"krate":0,"index":7718}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594918,"byte_end":594924,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7753},{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":595565,"byte_end":595571,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7756}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":596085,"byte_end":596089,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":596141,"byte_end":596145,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7793}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":596302,"byte_end":596306,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7796},{"krate":0,"index":7797}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597435,"byte_end":597439,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7829},{"krate":0,"index":7830},{"krate":0,"index":7832},{"krate":0,"index":7833}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":598157,"byte_end":598161,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7835}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599178,"byte_end":599186,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599686,"byte_end":599695,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7892}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":600087,"byte_end":600095,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7895},{"krate":0,"index":7897}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":600598,"byte_end":600607,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7901},{"krate":0,"index":7903},{"krate":0,"index":7905},{"krate":0,"index":7907}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601622,"byte_end":601634,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7916}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601798,"byte_end":601810,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7919}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":602044,"byte_end":602056,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602529,"byte_end":602533,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7965},{"krate":0,"index":7966},{"krate":0,"index":7967},{"krate":0,"index":15815},{"krate":0,"index":15816},{"krate":0,"index":15817},{"krate":0,"index":15818}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604450,"byte_end":604454,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7970}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604964,"byte_end":604968,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7973},{"krate":0,"index":7974}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606811,"byte_end":606817,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7991},{"krate":0,"index":7992},{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7997}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608887,"byte_end":608893,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":609040,"byte_end":609046,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8004}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609567,"byte_end":609572,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609625,"byte_end":609630,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8033}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609792,"byte_end":609797,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8036},{"krate":0,"index":8037}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610481,"byte_end":610494,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610547,"byte_end":610560,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610733,"byte_end":610746,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":8073},{"krate":0,"index":8074}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611438,"byte_end":611446,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611499,"byte_end":611507,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8109}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611669,"byte_end":611677,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8112},{"krate":0,"index":8113}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517906,"byte_end":517907,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524362,"byte_end":524363,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525250,"byte_end":525251,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532730,"byte_end":532731,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614005,"byte_end":614010,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8251}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614343,"byte_end":614348,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8254}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614441,"byte_end":614446,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8257}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614579,"byte_end":614585,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8265},{"krate":0,"index":8266}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615031,"byte_end":615036,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8271},{"krate":0,"index":8272}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615607,"byte_end":615612,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8275},{"krate":0,"index":8276},{"krate":0,"index":8277},{"krate":0,"index":8278},{"krate":0,"index":8279}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":618727,"byte_end":618742,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8288}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":619173,"byte_end":619188,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8291}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":619305,"byte_end":619320,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8295},{"krate":0,"index":8296}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":620549,"byte_end":620564,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8299}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621166,"byte_end":621176,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8307}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622188,"byte_end":622198,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8312}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622404,"byte_end":622414,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8315}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622512,"byte_end":622522,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8318},{"krate":0,"index":8319}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622663,"byte_end":622673,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8322}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623124,"byte_end":623140,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8334}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624270,"byte_end":624286,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8340}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624551,"byte_end":624567,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624679,"byte_end":624695,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8348},{"krate":0,"index":8349}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624838,"byte_end":624854,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8353}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625131,"byte_end":625136,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625182,"byte_end":625187,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625354,"byte_end":625369,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625473,"byte_end":625488,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625692,"byte_end":625702,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625752,"byte_end":625762,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625830,"byte_end":625846,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625917,"byte_end":625933,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":627937,"byte_end":627942,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":627979,"byte_end":627984,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":628000,"byte_end":628006,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8433},{"krate":0,"index":8434}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":633626,"byte_end":633631,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8437}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":633753,"byte_end":633758,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8440}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634086,"byte_end":634098,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8448}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634262,"byte_end":634274,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8451}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634495,"byte_end":634507,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634889,"byte_end":634900,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8456},{"krate":0,"index":8457}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":635063,"byte_end":635074,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8460}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":635212,"byte_end":635223,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8463}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":635575,"byte_end":635586,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8466}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":636899,"byte_end":636908,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8508},{"krate":0,"index":8509}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639181,"byte_end":639192,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8511}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639975,"byte_end":639982,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8513}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":640165,"byte_end":640172,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":640185,"byte_end":640194,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8517}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641183,"byte_end":641192,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8522},{"krate":0,"index":8523}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641431,"byte_end":641440,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8527},{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641699,"byte_end":641710,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8531}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642382,"byte_end":642383,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8551},{"krate":0,"index":8552}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642618,"byte_end":642619,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8560}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642889,"byte_end":642890,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8568}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":643906,"byte_end":643910,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8576}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644004,"byte_end":644008,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8580},{"krate":0,"index":8581}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644267,"byte_end":644274,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8586},{"krate":0,"index":8587}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644497,"byte_end":644504,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8592}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644695,"byte_end":644702,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8597}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645007,"byte_end":645020,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8603},{"krate":0,"index":8604}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645437,"byte_end":645446,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8609},{"krate":0,"index":8610}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645730,"byte_end":645739,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8615}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646001,"byte_end":646010,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8620}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646332,"byte_end":646339,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8627},{"krate":0,"index":8628}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646558,"byte_end":646565,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8634}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646743,"byte_end":646750,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8640}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647051,"byte_end":647059,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8648},{"krate":0,"index":8649}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647282,"byte_end":647290,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8655}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647472,"byte_end":647480,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8661}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647790,"byte_end":647801,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8670},{"krate":0,"index":8671}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648061,"byte_end":648072,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8677}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648309,"byte_end":648320,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8683}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648687,"byte_end":648699,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8691},{"krate":0,"index":8692}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648960,"byte_end":648972,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8698}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":649210,"byte_end":649222,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8704}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":649841,"byte_end":649855,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8717},{"krate":0,"index":8718}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650078,"byte_end":650092,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8724}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650293,"byte_end":650307,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8730}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650613,"byte_end":650619,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8740}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650712,"byte_end":650718,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8744},{"krate":0,"index":8745}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/unfold_state.rs","byte_start":651323,"byte_end":651334,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8756},{"krate":0,"index":8757}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1845}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150002,"byte_end":150019,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":5967}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/mod.rs","byte_start":150218,"byte_end":150228,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6373}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6550}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6649}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6651}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8189}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":8758},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":8758},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":8758},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":8758},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":8805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":8805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8805},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8805},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":8841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":8841},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":8841},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":44475,"byte_end":44486,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":9393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/catch_unwind.rs","byte_start":44629,"byte_end":44640,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":9393},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":45867,"byte_end":45877,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46078,"byte_end":46084,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46127,"byte_end":46133,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46391,"byte_end":46396,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46550,"byte_end":46560,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46792,"byte_end":46797,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":46894,"byte_end":46899,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":341},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47143,"byte_end":47149,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":47573,"byte_end":47579,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":49645,"byte_end":49650,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":51346,"byte_end":51352,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":337},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":51504,"byte_end":51510,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":53099,"byte_end":53104,"line_start":267,"line_end":267,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":54811,"byte_end":54817,"line_start":324,"line_end":324,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":54976,"byte_end":54982,"line_start":333,"line_end":333,"column_start":20,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55410,"byte_end":55418,"line_start":350,"line_end":350,"column_start":18,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":345},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/shared.rs","byte_start":55777,"byte_end":55787,"line_start":363,"line_end":363,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":435},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12915},"to":{"krate":0,"index":436}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78213,"byte_end":78223,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78374,"byte_end":78384,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9429},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/into_future.rs","byte_start":78507,"byte_end":78517,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9429},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79226,"byte_end":79236,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79366,"byte_end":79376,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":9465},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":79619,"byte_end":79629,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":9465},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":80582,"byte_end":80592,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9465},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten.rs","byte_start":80835,"byte_end":80845,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9465},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84169,"byte_end":84182,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84312,"byte_end":84325,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9512},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/try_flatten_err.rs","byte_start":84568,"byte_end":84581,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9512},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60759,"byte_end":60762,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":714},"to":{"krate":0,"index":715}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","byte_start":60845,"byte_end":60854,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":715}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":85890,"byte_end":85894,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86490,"byte_end":86494,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":10379},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/lazy.rs","byte_start":86638,"byte_end":86642,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":10379},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87245,"byte_end":87252,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":10385},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87813,"byte_end":87820,"line_start":40,"line_end":40,"column_start":20,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10385},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87965,"byte_end":87972,"line_start":48,"line_end":48,"column_start":19,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10385},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/pending.rs","byte_start":87998,"byte_end":88005,"line_start":50,"line_end":50,"column_start":19,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10385},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":88759,"byte_end":88768,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10391},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":89371,"byte_end":89380,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10391},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":90478,"byte_end":90487,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10391},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/maybe_done.rs","byte_start":90688,"byte_end":90697,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10391},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92017,"byte_end":92029,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10404},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":92255,"byte_end":92267,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":93380,"byte_end":93392,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10404},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_maybe_done.rs","byte_start":93596,"byte_end":93608,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10404},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95258,"byte_end":95270,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10417},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95368,"byte_end":95380,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10417},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95694,"byte_end":95706,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10417},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/option.rs","byte_start":95893,"byte_end":95905,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10417},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":96343,"byte_end":96349,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":97043,"byte_end":97049,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_fn.rs","byte_start":97191,"byte_end":97197,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":97925,"byte_end":97938,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":10456},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":98504,"byte_end":98517,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":10456},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/poll_immediate.rs","byte_start":99537,"byte_end":99550,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10456},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101722,"byte_end":101727,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101906,"byte_end":101911,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10495},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":101943,"byte_end":101948,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10495},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/ready.rs","byte_start":102045,"byte_end":102050,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10495},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":110037,"byte_end":110044,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":112805,"byte_end":112812,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/join_all.rs","byte_start":113800,"byte_end":113807,"line_start":163,"line_end":163,"column_start":37,"column_end":44},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1289},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":114303,"byte_end":114309,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":10849},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":116745,"byte_end":116751,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":10849},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select.rs","byte_start":117455,"byte_end":117461,"line_start":116,"line_end":116,"column_start":28,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":10849},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":118024,"byte_end":118033,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":10857},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119040,"byte_end":119049,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":10857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119232,"byte_end":119241,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":10857},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_all.rs","byte_start":119911,"byte_end":119920,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":10857},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":128528,"byte_end":128538,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":130368,"byte_end":130378,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_join_all.rs","byte_start":131526,"byte_end":131536,"line_start":133,"line_end":133,"column_start":40,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1552},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":132018,"byte_end":132027,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":11185},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_select.rs","byte_start":133866,"byte_end":133875,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":11185},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":135237,"byte_end":135245,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11193},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":136323,"byte_end":136331,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11193},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/select_ok.rs","byte_start":137762,"byte_end":137770,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11193},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":138749,"byte_end":138755,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139094,"byte_end":139100,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139485,"byte_end":139491,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":139872,"byte_end":139878,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":140119,"byte_end":140125,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11199},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":140464,"byte_end":140470,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11199},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":140746,"byte_end":140752,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11199},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":141287,"byte_end":141293,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11199},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":142965,"byte_end":142971,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11199},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":143772,"byte_end":143778,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11199},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":145085,"byte_end":145091,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11199},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/either.rs","byte_start":145521,"byte_end":145527,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11199},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":209062,"byte_end":209067,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":209293,"byte_end":209298,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11216},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chain.rs","byte_start":209507,"byte_end":209512,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11216},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":211108,"byte_end":211115,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":211380,"byte_end":211387,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11265},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/collect.rs","byte_start":211565,"byte_end":211572,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11265},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":212598,"byte_end":212603,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":212997,"byte_end":213002,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11314},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/unzip.rs","byte_start":213252,"byte_end":213257,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11314},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":214382,"byte_end":214388,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":214608,"byte_end":214614,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11376},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/concat.rs","byte_start":215322,"byte_end":215328,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11376},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216054,"byte_end":216059,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11416},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216280,"byte_end":216285,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216417,"byte_end":216422,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11416},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/count.rs","byte_start":216540,"byte_end":216545,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11416},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":217351,"byte_end":217356,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":217512,"byte_end":217517,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11453},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/cycle.rs","byte_start":218266,"byte_end":218271,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11453},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":219019,"byte_end":219028,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":219214,"byte_end":219223,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11493},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/enumerate.rs","byte_start":219341,"byte_end":219350,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11493},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":220791,"byte_end":220797,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11537},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":221270,"byte_end":221276,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":221599,"byte_end":221605,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11537},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter.rs","byte_start":221942,"byte_end":221948,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11537},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224120,"byte_end":224129,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11602},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224426,"byte_end":224435,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224702,"byte_end":224711,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11602},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/filter_map.rs","byte_start":224978,"byte_end":224987,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11602},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":227089,"byte_end":227096,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":227265,"byte_end":227272,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11663},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten.rs","byte_start":227464,"byte_end":227471,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11663},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":228985,"byte_end":228989,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11771},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":229345,"byte_end":229349,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":229610,"byte_end":229614,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":11771},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fold.rs","byte_start":229849,"byte_end":229853,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":11771},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":231442,"byte_end":231445,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":11840},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":231775,"byte_end":231778,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":11840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":232031,"byte_end":232034,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":11840},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/any.rs","byte_start":232263,"byte_end":232266,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11840},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234018,"byte_end":234021,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":11901},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234351,"byte_end":234354,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":11901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234606,"byte_end":234609,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":11901},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/all.rs","byte_start":234838,"byte_end":234841,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":11901},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":236595,"byte_end":236602,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11962},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":236895,"byte_end":236902,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":11962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":237133,"byte_end":237140,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":11962},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each.rs","byte_start":237379,"byte_end":237386,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11962},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238487,"byte_end":238491,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":12019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":238988,"byte_end":238992,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":12019},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/fuse.rs","byte_start":239090,"byte_end":239094,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":12019},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":240296,"byte_end":240308,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":12063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242798,"byte_end":242810,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":12063},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/into_future.rs","byte_start":242930,"byte_end":242942,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":12063},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":243827,"byte_end":243830,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":12138},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":244019,"byte_end":244022,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":12138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":244191,"byte_end":244194,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":12138},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/map.rs","byte_start":244362,"byte_end":244365,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":12138},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245477,"byte_end":245481,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":12270},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245532,"byte_end":245536,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":12270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245687,"byte_end":245691,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":12270},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/next.rs","byte_start":245830,"byte_end":245834,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":12270},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246485,"byte_end":246499,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":12278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246650,"byte_end":246664,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":12278},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/select_next_some.rs","byte_start":246808,"byte_end":246822,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":12278},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":248133,"byte_end":248141,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":12286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253638,"byte_end":253646,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":12286},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":253788,"byte_end":253796,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":12286},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":254955,"byte_end":254959,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12330},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":255204,"byte_end":255208,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12330},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":255319,"byte_end":255323,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12330},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":256020,"byte_end":256027,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12371},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":256275,"byte_end":256282,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12371},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":256393,"byte_end":256400,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12371},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257120,"byte_end":257126,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12412},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257478,"byte_end":257484,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12412},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":257753,"byte_end":257759,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12412},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259020,"byte_end":259028,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12461},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259348,"byte_end":259356,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12461},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259540,"byte_end":259548,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12461},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/peek.rs","byte_start":259919,"byte_end":259929,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2956},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260594,"byte_end":260598,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260789,"byte_end":260793,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":12510},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip.rs","byte_start":260911,"byte_end":260915,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12510},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":262512,"byte_end":262521,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12554},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":262973,"byte_end":262982,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":263308,"byte_end":263317,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12554},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/skip_while.rs","byte_start":263565,"byte_end":263574,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12554},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":265874,"byte_end":265878,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":266051,"byte_end":266055,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12623},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take.rs","byte_start":267027,"byte_end":267031,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12623},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":268054,"byte_end":268063,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12667},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":268511,"byte_end":268520,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":268839,"byte_end":268848,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12667},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_while.rs","byte_start":270367,"byte_end":270376,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12667},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":271760,"byte_end":271769,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12736},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":272057,"byte_end":272066,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":274183,"byte_end":274192,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":12736},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/take_until.rs","byte_start":275224,"byte_end":275233,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":12736},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276175,"byte_end":276179,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":12793},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276430,"byte_end":276434,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":12793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276680,"byte_end":276684,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":12793},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/then.rs","byte_start":276910,"byte_end":276914,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":12793},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":278796,"byte_end":278799,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":12854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280385,"byte_end":280388,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":12854},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/zip.rs","byte_start":280583,"byte_end":280586,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":12854},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":283281,"byte_end":283287,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":12911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":283795,"byte_end":283801,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":12911},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/chunks.rs","byte_start":285417,"byte_end":285423,"line_start":91,"line_end":91,"column_start":39,"column_end":45},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12911},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":286395,"byte_end":286406,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":286758,"byte_end":286769,"line_start":40,"line_end":40,"column_start":29,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12959},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/ready_chunks.rs","byte_start":288938,"byte_end":288949,"line_start":99,"line_end":99,"column_start":39,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12959},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":289947,"byte_end":289951,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":13007},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":290437,"byte_end":290441,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":13007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":290605,"byte_end":290609,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":13007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":290971,"byte_end":290975,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":13007},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/scan.rs","byte_start":292202,"byte_end":292206,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":13007},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":293387,"byte_end":293402,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":13076},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":293734,"byte_end":293749,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":13076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":294136,"byte_end":294151,"line_start":59,"line_end":59,"column_start":21,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":13076},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffer_unordered.rs","byte_start":295605,"byte_end":295620,"line_start":104,"line_end":104,"column_start":26,"column_end":41},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":13076},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":296730,"byte_end":296738,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":13121},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":297085,"byte_end":297093,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":13121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/buffered.rs","byte_start":297373,"byte_end":297381,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":13121},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":300525,"byte_end":300540,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":13166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":304659,"byte_end":304672,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305192,"byte_end":305205,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3691},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305603,"byte_end":305613,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3706},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305638,"byte_end":305648,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3706},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":305658,"byte_end":305668,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":306719,"byte_end":306729,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3706},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":308330,"byte_end":308343,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":13172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":308547,"byte_end":308560,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":13172},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":309675,"byte_end":309691,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13205},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":310165,"byte_end":310181,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":311120,"byte_end":311140,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":13214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":311407,"byte_end":311423,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":13205},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/flatten_unordered.rs","byte_start":311628,"byte_end":311644,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":13205},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":317073,"byte_end":317090,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":13349},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":317436,"byte_end":317453,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":13349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":317886,"byte_end":317903,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":13349},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/for_each_concurrent.rs","byte_start":318133,"byte_end":318150,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":13349},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":320510,"byte_end":320521,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":13410},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":320713,"byte_end":320724,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":13410},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/catch_unwind.rs","byte_start":321576,"byte_end":321587,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":13410},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158480,"byte_end":158481,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3861},"to":{"krate":0,"index":3862}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/stream/mod.rs","byte_start":158624,"byte_end":158630,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":3862}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":360975,"byte_end":360982,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13454},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":361275,"byte_end":361282,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":13454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":361563,"byte_end":361570,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":13454},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/and_then.rs","byte_start":362713,"byte_end":362720,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":13454},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363638,"byte_end":363648,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":13722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363841,"byte_end":363851,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":13722},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_stream.rs","byte_start":363972,"byte_end":363982,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":13722},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":365081,"byte_end":365087,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":13900},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":365379,"byte_end":365385,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":13900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":365663,"byte_end":365669,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":13900},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/or_else.rs","byte_start":366946,"byte_end":366952,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":13900},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367856,"byte_end":367863,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":13961},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":367917,"byte_end":367924,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":13961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":368087,"byte_end":368094,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":13961},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_next.rs","byte_start":368236,"byte_end":368243,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":13961},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":369019,"byte_end":369029,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":13969},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":369325,"byte_end":369335,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":13969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each.rs","byte_start":369580,"byte_end":369590,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":13969},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":370989,"byte_end":370998,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":14026},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":371394,"byte_end":371403,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":14026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":371646,"byte_end":371655,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":14026},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter.rs","byte_start":371912,"byte_end":371921,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":14026},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374062,"byte_end":374074,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14091},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374374,"byte_end":374386,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374583,"byte_end":374595,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14091},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_filter_map.rs","byte_start":374873,"byte_end":374885,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14091},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":377069,"byte_end":377079,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":377344,"byte_end":377354,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":14152},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_flatten.rs","byte_start":377600,"byte_end":377610,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":14152},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379219,"byte_end":379229,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":14196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379369,"byte_end":379379,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":14196},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_collect.rs","byte_start":379567,"byte_end":379577,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":14196},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":380575,"byte_end":380584,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":14245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_concat.rs","byte_start":380803,"byte_end":380812,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":14245},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":382196,"byte_end":382205,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":14285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":382700,"byte_end":382709,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":14285},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":384657,"byte_end":384666,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":14285},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385325,"byte_end":385339,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":14333},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385484,"byte_end":385498,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":14333},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_chunks.rs","byte_start":385685,"byte_end":385699,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":14333},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386309,"byte_end":386316,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":14354},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386675,"byte_end":386682,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":14354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":386962,"byte_end":386969,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":14354},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_fold.rs","byte_start":387223,"byte_end":387230,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":14354},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":391093,"byte_end":391102,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":14423},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_unfold.rs","byte_start":391364,"byte_end":391373,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":14423},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":393119,"byte_end":393131,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":14480},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":393587,"byte_end":393599,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":14480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":393939,"byte_end":393951,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":14480},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_skip_while.rs","byte_start":395450,"byte_end":395462,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":14480},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":396690,"byte_end":396702,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":14549},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":397154,"byte_end":397166,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":14549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":397504,"byte_end":397516,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":14549},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_take_while.rs","byte_start":399123,"byte_end":399135,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":14549},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":400423,"byte_end":400441,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":14618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffer_unordered.rs","byte_start":400780,"byte_end":400798,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":14618},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":403004,"byte_end":403015,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_buffered.rs","byte_start":403352,"byte_end":403363,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14666},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405521,"byte_end":405541,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14714},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":405906,"byte_end":405926,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14714},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406165,"byte_end":406185,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":14714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":406633,"byte_end":406653,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":14714},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409754,"byte_end":409767,"line_start":23,"line_end":23,"column_start":20,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":14775},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":409983,"byte_end":409996,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":14775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":410208,"byte_end":410221,"line_start":47,"line_end":47,"column_start":24,"column_end":37},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":14775},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":411842,"byte_end":411855,"line_start":95,"line_end":95,"column_start":25,"column_end":38},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":14775},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/into_async_read.rs","byte_start":412462,"byte_end":412475,"line_start":117,"line_end":117,"column_start":27,"column_end":40},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":14775},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":326987,"byte_end":326988,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5169},"to":{"krate":0,"index":5170}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/try_stream/mod.rs","byte_start":327069,"byte_end":327078,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5170}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":414511,"byte_end":414515,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":14794},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/iter.rs","byte_start":415137,"byte_end":415141,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":14794},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416332,"byte_end":416338,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":14803},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416365,"byte_end":416371,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":14803},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat.rs","byte_start":416679,"byte_end":416685,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":14803},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417282,"byte_end":417292,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":14812},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417336,"byte_end":417346,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":14812},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/repeat_with.rs","byte_start":417660,"byte_end":417670,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":14812},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420190,"byte_end":420195,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":14821},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420227,"byte_end":420232,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":14821},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420317,"byte_end":420322,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":14821},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/empty.rs","byte_start":420571,"byte_end":420576,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":14821},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421515,"byte_end":421519,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":14827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":421648,"byte_end":421652,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":14827},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/once.rs","byte_start":422257,"byte_end":422261,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":14827},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422920,"byte_end":422927,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":14863},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":422959,"byte_end":422966,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":14863},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":423051,"byte_end":423058,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":14863},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/pending.rs","byte_start":423303,"byte_end":423310,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":14863},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423697,"byte_end":423703,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5587},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":423734,"byte_end":423740,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5587},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_fn.rs","byte_start":424505,"byte_end":424511,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5587},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":425207,"byte_end":425220,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":14869},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/poll_immediate.rs","byte_start":426133,"byte_end":426146,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":14869},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":429033,"byte_end":429039,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":14908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430343,"byte_end":430349,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":14908},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select.rs","byte_start":430528,"byte_end":430534,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":14908},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431247,"byte_end":431255,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":14953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":431552,"byte_end":431560,"line_start":31,"line_end":31,"column_start":18,"column_end":26},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":14953},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":434587,"byte_end":434605,"line_start":130,"line_end":130,"column_start":29,"column_end":47},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":14972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":436054,"byte_end":436072,"line_start":165,"line_end":165,"column_start":45,"column_end":63},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":14972},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":436352,"byte_end":436370,"line_start":176,"line_end":176,"column_start":40,"column_end":58},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":14972},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_with_strategy.rs","byte_start":437482,"byte_end":437500,"line_start":216,"line_end":216,"column_start":44,"column_end":62},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":14972},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":440071,"byte_end":440077,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":15041},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":440317,"byte_end":440323,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":15041},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/unfold.rs","byte_start":440603,"byte_end":440609,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":15041},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442157,"byte_end":442169,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":15094},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442274,"byte_end":442286,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":15094},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442317,"byte_end":442329,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":15094},"to":{"krate":2,"index":2717}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442452,"byte_end":442464,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":15094},"to":{"krate":2,"index":2706}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":442645,"byte_end":442657,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":15094},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445239,"byte_end":445253,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5927},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":445279,"byte_end":445293,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446859,"byte_end":446873,"line_start":145,"line_end":145,"column_start":31,"column_end":45},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5927},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":446966,"byte_end":446980,"line_start":151,"line_end":151,"column_start":30,"column_end":44},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5927},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448142,"byte_end":448156,"line_start":186,"line_end":186,"column_start":29,"column_end":43},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5927},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448322,"byte_end":448336,"line_start":192,"line_end":192,"column_start":41,"column_end":55},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5927},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448616,"byte_end":448630,"line_start":205,"line_end":205,"column_start":35,"column_end":49},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5927},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_ordered.rs","byte_start":448800,"byte_end":448814,"line_start":211,"line_end":211,"column_start":35,"column_end":49},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5927},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/abort.rs","byte_start":475779,"byte_end":475790,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6061},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":477149,"byte_end":477157,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":15173},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":478231,"byte_end":478239,"line_start":71,"line_end":71,"column_start":40,"column_end":48},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":15173},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":478276,"byte_end":478286,"line_start":73,"line_end":73,"column_start":28,"column_end":38},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":15134},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479138,"byte_end":479148,"line_start":100,"line_end":100,"column_start":33,"column_end":43},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":15134},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479196,"byte_end":479203,"line_start":102,"line_end":102,"column_start":35,"column_end":42},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":15144},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479466,"byte_end":479473,"line_start":114,"line_end":114,"column_start":40,"column_end":47},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":15144},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":479514,"byte_end":479524,"line_start":116,"line_end":116,"column_start":28,"column_end":38},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":15153},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480393,"byte_end":480403,"line_start":143,"line_end":143,"column_start":33,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":15153},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480451,"byte_end":480455,"line_start":145,"line_end":145,"column_start":35,"column_end":39},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":15164},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480714,"byte_end":480718,"line_start":157,"line_end":157,"column_start":40,"column_end":44},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":15164},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480887,"byte_end":480897,"line_start":161,"line_end":161,"column_start":33,"column_end":43},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":15153},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480942,"byte_end":480952,"line_start":162,"line_end":162,"column_start":33,"column_end":43},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":15153},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":480998,"byte_end":481008,"line_start":164,"line_end":164,"column_start":33,"column_end":43},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":15134},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":481053,"byte_end":481063,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":15134},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":481117,"byte_end":481125,"line_start":167,"line_end":167,"column_start":41,"column_end":49},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":15173},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/iter.rs","byte_start":481174,"byte_end":481182,"line_start":168,"line_end":168,"column_start":41,"column_end":49},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":15173},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":482867,"byte_end":482871,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":482906,"byte_end":482910,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":482942,"byte_end":482946,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6192},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":484079,"byte_end":484083,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/task.rs","byte_start":485083,"byte_end":485087,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6192},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":486537,"byte_end":486552,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":489220,"byte_end":489235,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6263},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451201,"byte_end":451217,"line_start":60,"line_end":60,"column_start":33,"column_end":49},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451258,"byte_end":451274,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451303,"byte_end":451319,"line_start":62,"line_end":62,"column_start":21,"column_end":37},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451344,"byte_end":451360,"line_start":64,"line_end":64,"column_start":16,"column_end":32},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6285},"to":{"krate":22,"index":15}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":451545,"byte_end":451561,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6285},"to":{"krate":22,"index":18}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453268,"byte_end":453284,"line_start":103,"line_end":103,"column_start":23,"column_end":39},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":453358,"byte_end":453374,"line_start":109,"line_end":109,"column_start":11,"column_end":27},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":464983,"byte_end":464999,"line_start":384,"line_end":384,"column_start":30,"column_end":46},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6285},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":469375,"byte_end":469379,"line_start":482,"line_end":482,"column_start":32,"column_end":36},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6322},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472188,"byte_end":472204,"line_start":548,"line_end":548,"column_start":21,"column_end":37},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472342,"byte_end":472358,"line_start":554,"line_end":554,"column_start":11,"column_end":27},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":472929,"byte_end":472945,"line_start":574,"line_end":574,"column_start":20,"column_end":36},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":474595,"byte_end":474611,"line_start":615,"line_end":615,"column_start":35,"column_end":51},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475081,"byte_end":475097,"line_start":629,"line_end":629,"column_start":33,"column_end":49},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475373,"byte_end":475389,"line_start":642,"line_end":642,"column_start":35,"column_end":51},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6285},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/futures_unordered/mod.rs","byte_start":475511,"byte_end":475527,"line_start":648,"line_end":648,"column_start":27,"column_end":43},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":490830,"byte_end":490839,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":15180},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":490984,"byte_end":490993,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":15180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492466,"byte_end":492475,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":15180},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":492574,"byte_end":492583,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":15180},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":493367,"byte_end":493376,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":15180},"to":{"krate":20,"index":110}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494394,"byte_end":494403,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":15180},"to":{"krate":2,"index":7629}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494548,"byte_end":494557,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":15180},"to":{"krate":2,"index":7642}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":494740,"byte_end":494749,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":15180},"to":{"krate":2,"index":7633}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":495832,"byte_end":495836,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":15213},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496269,"byte_end":496273,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":15213},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496328,"byte_end":496335,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":15222},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496772,"byte_end":496779,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":15222},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":496830,"byte_end":496838,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":15231},"to":{"krate":2,"index":7822}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/stream/select_all.rs","byte_start":497266,"byte_end":497274,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":15231},"to":{"krate":2,"index":7702}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499522,"byte_end":499524,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":6633},"to":{"krate":0,"index":6636}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499579,"byte_end":499581,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":6635},"to":{"krate":0,"index":6639}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":499660,"byte_end":499665,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":15},"to":{"krate":0,"index":6636}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/task/spawn.rs","byte_start":502599,"byte_end":502609,"line_start":99,"line_end":99,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":18},"to":{"krate":0,"index":6639}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":533975,"byte_end":533985,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":15238},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534423,"byte_end":534433,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":15238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":534944,"byte_end":534954,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":15238},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":535499,"byte_end":535509,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":15238},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":536301,"byte_end":536311,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":15238},"to":{"krate":1,"index":4402}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":536910,"byte_end":536920,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":15238},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":537424,"byte_end":537434,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":15238},"to":{"krate":1,"index":4477}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":537578,"byte_end":537588,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":15238},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":537850,"byte_end":537860,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":15238},"to":{"krate":1,"index":4484}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/allow_std.rs","byte_start":538076,"byte_end":538086,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":15238},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":539893,"byte_end":539902,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":15271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":541045,"byte_end":541054,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":15271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":542615,"byte_end":542624,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":15271},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":544026,"byte_end":544035,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":15271},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":544865,"byte_end":544874,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":15271},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":544952,"byte_end":544961,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":15271},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":545277,"byte_end":545286,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":15271},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_reader.rs","byte_start":548206,"byte_end":548218,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":15324},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":550300,"byte_end":550309,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":15334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":553908,"byte_end":553917,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":15334},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555340,"byte_end":555349,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":15334},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555430,"byte_end":555439,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":15334},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555520,"byte_end":555529,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":15334},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/buf_writer.rs","byte_start":555888,"byte_end":555897,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15334},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":556951,"byte_end":556961,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":15383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/line_writer.rs","byte_start":558163,"byte_end":558173,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15383},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":562033,"byte_end":562038,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":15419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":563294,"byte_end":563299,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15419},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":563629,"byte_end":563634,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15419},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/chain.rs","byte_start":564703,"byte_end":564708,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":15419},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565819,"byte_end":565824,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15468},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":565877,"byte_end":565882,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/close.rs","byte_start":566024,"byte_end":566029,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15468},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy.rs","byte_start":567799,"byte_end":567803,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15476},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/copy_buf.rs","byte_start":569526,"byte_end":569533,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15530},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":571366,"byte_end":571372,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574572,"byte_end":574578,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":47}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":574865,"byte_end":574871,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":575503,"byte_end":575509,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576713,"byte_end":576719,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576794,"byte_end":576800,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576878,"byte_end":576884,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/cursor.rs","byte_start":576957,"byte_end":576963,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":15592},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":577880,"byte_end":577885,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7299},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":578094,"byte_end":578099,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":7299},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/empty.rs","byte_start":578331,"byte_end":578336,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":7299},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578834,"byte_end":578841,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":15620},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":578896,"byte_end":578903,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":15620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/fill_buf.rs","byte_start":579034,"byte_end":579041,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":15620},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580611,"byte_end":580616,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":15628},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580669,"byte_end":580674,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":15628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/flush.rs","byte_start":580787,"byte_end":580792,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":15628},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/lines.rs","byte_start":581595,"byte_end":581600,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":15636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/lines.rs","byte_start":581763,"byte_end":581768,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":15636},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582763,"byte_end":582767,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":15684},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582819,"byte_end":582823,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":15684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read.rs","byte_start":582988,"byte_end":582992,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":15684},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583680,"byte_end":583692,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":15693},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583744,"byte_end":583756,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":15693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_vectored.rs","byte_start":583935,"byte_end":583947,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":15693},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584642,"byte_end":584651,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":15702},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584703,"byte_end":584712,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":15702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_exact.rs","byte_start":584877,"byte_end":584886,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":15702},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":586029,"byte_end":586037,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":15711},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":586092,"byte_end":586100,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":15711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_line.rs","byte_start":587069,"byte_end":587077,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":15711},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587832,"byte_end":587841,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":15722},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":587893,"byte_end":587902,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":15722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":588147,"byte_end":588152,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7614},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_end.rs","byte_start":589987,"byte_end":589996,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":15722},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590869,"byte_end":590881,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":15732},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":590933,"byte_end":590945,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":15732},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_to_string.rs","byte_start":591874,"byte_end":591886,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":15732},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592706,"byte_end":592715,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":15743},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":592770,"byte_end":592779,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":15743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/read_until.rs","byte_start":593751,"byte_end":593760,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":15743},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":594918,"byte_end":594924,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7749},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/repeat.rs","byte_start":595565,"byte_end":595571,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":7749},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":596085,"byte_end":596089,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":15754},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":596141,"byte_end":596145,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":15754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/seek.rs","byte_start":596302,"byte_end":596306,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":15754},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":597435,"byte_end":597439,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":7825},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/sink.rs","byte_start":598157,"byte_end":598161,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":7825},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599178,"byte_end":599186,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":15763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":599686,"byte_end":599695,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":15769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":600087,"byte_end":600095,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":15763},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":600598,"byte_end":600607,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":15769},"to":{"krate":25,"index":42}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601622,"byte_end":601634,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":601798,"byte_end":601810,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7909},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/split.rs","byte_start":602044,"byte_end":602056,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7909},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":602529,"byte_end":602533,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":15775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604450,"byte_end":604454,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":15775},"to":{"krate":25,"index":39}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/take.rs","byte_start":604964,"byte_end":604968,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":15775},"to":{"krate":25,"index":49}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":606811,"byte_end":606817,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":15819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":608887,"byte_end":608893,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":15819},"to":{"krate":2,"index":2916}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/window.rs","byte_start":609040,"byte_end":609046,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":15819},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609567,"byte_end":609572,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":15826},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609625,"byte_end":609630,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":15826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write.rs","byte_start":609792,"byte_end":609797,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":15826},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610481,"byte_end":610494,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":15835},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610547,"byte_end":610560,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":15835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_vectored.rs","byte_start":610733,"byte_end":610746,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":15835},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611438,"byte_end":611446,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":15844},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611499,"byte_end":611507,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":15844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/write_all.rs","byte_start":611669,"byte_end":611677,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":15844},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":509649,"byte_end":509658,"line_start":145,"line_end":145,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":39},"to":{"krate":0,"index":8117}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":517906,"byte_end":517907,"line_start":395,"line_end":395,"column_start":46,"column_end":47},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":8133},"to":{"krate":0,"index":8117}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":518010,"byte_end":518020,"line_start":398,"line_end":398,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":25,"index":42},"to":{"krate":0,"index":8134}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524362,"byte_end":524363,"line_start":589,"line_end":589,"column_start":48,"column_end":49},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":8144},"to":{"krate":0,"index":8134}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":524464,"byte_end":524473,"line_start":592,"line_end":592,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":47},"to":{"krate":0,"index":8145}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525250,"byte_end":525251,"line_start":617,"line_end":617,"column_start":46,"column_end":47},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":8149},"to":{"krate":0,"index":8145}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":525358,"byte_end":525370,"line_start":620,"line_end":620,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":25,"index":49},"to":{"krate":0,"index":8150}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/io/mod.rs","byte_start":532730,"byte_end":532731,"line_start":821,"line_end":821,"column_start":52,"column_end":53},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8159},"to":{"krate":0,"index":8150}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614005,"byte_end":614010,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8244},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614343,"byte_end":614348,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8244},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614441,"byte_end":614446,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8244},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":614579,"byte_end":614585,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":8258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615031,"byte_end":615036,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":8244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":615607,"byte_end":615612,"line_start":97,"line_end":97,"column_start":17,"column_end":22},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":8244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":618727,"byte_end":618742,"line_start":185,"line_end":185,"column_start":32,"column_end":47},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":8281},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":619173,"byte_end":619188,"line_start":198,"line_end":198,"column_start":33,"column_end":48},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":8281},"to":{"krate":20,"index":27}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":619305,"byte_end":619320,"line_start":204,"line_end":204,"column_start":32,"column_end":47},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8281},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":620549,"byte_end":620564,"line_start":240,"line_end":240,"column_start":26,"column_end":41},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8281},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":621166,"byte_end":621176,"line_start":259,"line_end":259,"column_start":21,"column_end":31},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622188,"byte_end":622198,"line_start":289,"line_end":289,"column_start":45,"column_end":55},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622404,"byte_end":622414,"line_start":295,"line_end":295,"column_start":26,"column_end":36},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622512,"byte_end":622522,"line_start":301,"line_end":301,"column_start":27,"column_end":37},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":622663,"byte_end":622673,"line_start":308,"line_end":308,"column_start":30,"column_end":40},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":623124,"byte_end":623140,"line_start":322,"line_end":322,"column_start":32,"column_end":48},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":8323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624270,"byte_end":624286,"line_start":353,"line_end":353,"column_start":56,"column_end":72},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624551,"byte_end":624567,"line_start":362,"line_end":362,"column_start":37,"column_end":53},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624679,"byte_end":624695,"line_start":368,"line_end":368,"column_start":38,"column_end":54},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":624838,"byte_end":624854,"line_start":375,"line_end":375,"column_start":41,"column_end":57},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625131,"byte_end":625136,"line_start":383,"line_end":383,"column_start":40,"column_end":45},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8244},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625182,"byte_end":625187,"line_start":384,"line_end":384,"column_start":40,"column_end":45},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":8244},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625354,"byte_end":625369,"line_start":388,"line_end":388,"column_start":40,"column_end":55},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":8281},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625473,"byte_end":625488,"line_start":390,"line_end":390,"column_start":33,"column_end":48},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":8281},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625692,"byte_end":625702,"line_start":394,"line_end":394,"column_start":40,"column_end":50},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625752,"byte_end":625762,"line_start":395,"line_end":395,"column_start":40,"column_end":50},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8300},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625830,"byte_end":625846,"line_start":396,"line_end":396,"column_start":58,"column_end":74},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/mutex.rs","byte_start":625917,"byte_end":625933,"line_start":397,"line_end":397,"column_start":58,"column_end":74},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8323},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":627937,"byte_end":627942,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":15859},"to":{"krate":2,"index":3019}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":627979,"byte_end":627984,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":15859},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":628000,"byte_end":628006,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":15853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":633626,"byte_end":633631,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":15859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":633753,"byte_end":633758,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":15859},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634086,"byte_end":634098,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634262,"byte_end":634274,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8441},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634495,"byte_end":634507,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8441},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":634889,"byte_end":634900,"line_start":227,"line_end":227,"column_start":19,"column_end":30},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":15866},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":635063,"byte_end":635074,"line_start":234,"line_end":234,"column_start":29,"column_end":40},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":15866},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":635212,"byte_end":635223,"line_start":240,"line_end":240,"column_start":9,"column_end":20},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":15866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/lock/bilock.rs","byte_start":635575,"byte_end":635586,"line_start":249,"line_end":249,"column_start":18,"column_end":29},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":15866},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":636899,"byte_end":636908,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":15874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639181,"byte_end":639192,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":15921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":639975,"byte_end":639982,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":15932},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":640165,"byte_end":640172,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":15932},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":640185,"byte_end":640194,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":15874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641183,"byte_end":641192,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":15874},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641431,"byte_end":641440,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":15874},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/abortable.rs","byte_start":641699,"byte_end":641710,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":15921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642382,"byte_end":642383,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":8548},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642522,"byte_end":642529,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8543},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642618,"byte_end":642619,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":8557},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642805,"byte_end":642811,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8553},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":642889,"byte_end":642890,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":8565},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":643906,"byte_end":643910,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":8570},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644004,"byte_end":644008,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":8570},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644267,"byte_end":644274,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":15963},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644497,"byte_end":644504,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":15963},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":644695,"byte_end":644702,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":15963},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645007,"byte_end":645020,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":15984},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645437,"byte_end":645446,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":16000},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":645730,"byte_end":645739,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":16000},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646001,"byte_end":646010,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":16000},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646332,"byte_end":646339,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":16015},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646558,"byte_end":646565,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":16015},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":646743,"byte_end":646750,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":16015},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647051,"byte_end":647059,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":16030},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647282,"byte_end":647290,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":16030},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647472,"byte_end":647480,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":16030},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":647790,"byte_end":647801,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":16045},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648061,"byte_end":648072,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":16045},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648309,"byte_end":648320,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":16045},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648687,"byte_end":648699,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":16057},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":648960,"byte_end":648972,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":16057},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":649210,"byte_end":649222,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":16057},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":649841,"byte_end":649855,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":16069},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650078,"byte_end":650092,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":16069},"to":{"krate":0,"index":8553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650293,"byte_end":650307,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":16069},"to":{"krate":0,"index":8561}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650613,"byte_end":650619,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8734},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/fns.rs","byte_start":650712,"byte_end":650718,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8734},"to":{"krate":0,"index":8543}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/unfold_state.rs","byte_start":651323,"byte_end":651334,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":16102},"to":{"krate":4294967295,"index":4294967295}}]}