{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0","program":"/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","textwrap","--edition=2018","/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=b7679b522c5a0355","-C","extra-filename=-b7679b522c5a0355","--out-dir","/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","-L","dependency=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libtextwrap-b7679b522c5a0355.rmeta"},"prelude":{"crate_id":{"name":"textwrap","disambiguator":[9159019299299329608,0]},"crate_root":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src","external_crates":[{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}}],"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":0,"byte_end":60729,"line_start":1,"line_end":1847,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7364,"byte_end":7370,"line_start":206,"line_end":206,"column_start":30,"column_end":36},"alias_span":null,"name":"dedent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7372,"byte_end":7378,"line_start":206,"line_end":206,"column_start":38,"column_end":44},"alias_span":null,"name":"indent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":146},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7428,"byte_end":7441,"line_start":209,"line_end":209,"column_start":26,"column_end":39},"alias_span":null,"name":"WordSeparator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7492,"byte_end":7504,"line_start":212,"line_end":212,"column_start":25,"column_end":37},"alias_span":null,"name":"WordSplitter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7557,"byte_end":7570,"line_start":215,"line_end":215,"column_start":26,"column_end":39},"alias_span":null,"name":"WrapAlgorithm","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":0,"byte_end":60729,"line_start":1,"line_end":1847,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":112},{"krate":0,"index":203},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":144}],"decl_id":null,"docs":" The textwrap library provides functions for word wrapping and\n indenting text.","sig":null,"attributes":[{"value":"/ The textwrap library provides functions for word wrapping and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ indenting text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":66,"byte_end":85,"line_start":2,"line_end":2,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":86,"byte_end":89,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ # Wrapping Text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":90,"byte_end":109,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":110,"byte_end":113,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Wrapping text can be very useful in command-line programs where","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":114,"byte_end":181,"line_start":6,"line_end":6,"column_start":1,"column_end":68}},{"value":"/ you want to format dynamic output nicely so it looks good in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":182,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ terminal. A quick example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":249,"byte_end":279,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":280,"byte_end":283,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":284,"byte_end":291,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"smawk\")] {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":292,"byte_end":325,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/ let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":326,"byte_end":388,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(textwrap::wrap(text, 18),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":389,"byte_end":429,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/            vec![\"textwrap: a\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":430,"byte_end":464,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/                 \"small library for\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":465,"byte_end":505,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/                 \"wrapping text.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":506,"byte_end":545,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":546,"byte_end":553,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":554,"byte_end":561,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":562,"byte_end":565,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The [`wrap`] function returns the individual lines, use [`fill`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":566,"byte_end":634,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/ is you want the lines joined with `'\\n'` to form a `String`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":635,"byte_end":699,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":700,"byte_end":703,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ If you enable the `hyphenation` Cargo feature, you can get","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":704,"byte_end":766,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ automatic hyphenation for a number of languages:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":767,"byte_end":819,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":820,"byte_end":823,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":824,"byte_end":831,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ #[cfg(feature = \"hyphenation\")] {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":832,"byte_end":869,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/ use hyphenation::{Language, Load, Standard};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":870,"byte_end":918,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ use textwrap::{wrap, Options, WordSplitter};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":919,"byte_end":967,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":968,"byte_end":971,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let text = \"textwrap: a small library for wrapping text.\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":972,"byte_end":1034,"line_start":31,"line_end":31,"column_start":1,"column_end":63}},{"value":"/ let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1035,"byte_end":1110,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ let options = Options::new(18).word_splitter(WordSplitter::Hyphenation(dictionary));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1111,"byte_end":1199,"line_start":33,"line_end":33,"column_start":1,"column_end":89}},{"value":"/ assert_eq!(wrap(text, &options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1200,"byte_end":1236,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/            vec![\"textwrap: a small\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1237,"byte_end":1277,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/                 \"library for wrap-\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1278,"byte_end":1318,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/                 \"ping text.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1319,"byte_end":1354,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1355,"byte_end":1360,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1361,"byte_end":1368,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1369,"byte_end":1372,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See also the [`unfill`] and [`refill`] functions which allow you to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1373,"byte_end":1444,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ manipulate already wrapped text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1445,"byte_end":1481,"line_start":42,"line_end":42,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1482,"byte_end":1485,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Wrapping Strings at Compile Time","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1486,"byte_end":1525,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1526,"byte_end":1529,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ If your strings are known at compile time, please take a look at","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1530,"byte_end":1598,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ the procedural macros from the [textwrap-macros] crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1599,"byte_end":1658,"line_start":47,"line_end":47,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1659,"byte_end":1662,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Displayed Width vs Byte Size","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1663,"byte_end":1698,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1699,"byte_end":1702,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ To word wrap text, one must know the width of each word so one can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1703,"byte_end":1773,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/ know when to break lines. This library will by default measure the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1774,"byte_end":1844,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ width of text using the _displayed width_, not the size in bytes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1845,"byte_end":1914,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/ The `unicode-width` Cargo feature controls this.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1915,"byte_end":1967,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1968,"byte_end":1971,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This is important for non-ASCII text. ASCII characters such as `a`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":1972,"byte_end":2042,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/ and `!` are simple and take up one column each. This means that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2043,"byte_end":2110,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ the displayed width is equal to the string length in bytes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2111,"byte_end":2174,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/ However, non-ASCII characters and symbols take up more than one","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2175,"byte_end":2242,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/ byte when UTF-8 encoded: `é` is `0xc3 0xa9` (two bytes) and `⚙` is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2243,"byte_end":2316,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/ `0xe2 0x9a 0x99` (three bytes) in UTF-8, respectively.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2317,"byte_end":2375,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2376,"byte_end":2379,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is why we take care to use the displayed width instead of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2380,"byte_end":2450,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ byte count when computing line lengths. All functions in this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2451,"byte_end":2516,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"/ library handle Unicode characters like this when the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2517,"byte_end":2573,"line_start":65,"line_end":65,"column_start":1,"column_end":57}},{"value":"/ `unicode-width` Cargo feature is enabled (it is enabled by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2574,"byte_end":2636,"line_start":66,"line_end":66,"column_start":1,"column_end":63}},{"value":"/ default).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2637,"byte_end":2650,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2651,"byte_end":2654,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Indentation and Dedentation","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2655,"byte_end":2688,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2689,"byte_end":2692,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The textwrap library also offers functions for adding a prefix to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2693,"byte_end":2762,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/ every line of a string and to remove leading whitespace. As an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2763,"byte_end":2829,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ example, the [`indent`] function allows you to turn lines of text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2830,"byte_end":2899,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ into a bullet list:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2900,"byte_end":2923,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2924,"byte_end":2927,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2928,"byte_end":2935,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ let before = \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2936,"byte_end":2955,"line_start":77,"line_end":77,"column_start":1,"column_end":20}},{"value":"/ foo","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2956,"byte_end":2963,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ bar","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2964,"byte_end":2971,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ baz","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2972,"byte_end":2979,"line_start":80,"line_end":80,"column_start":1,"column_end":8}},{"value":"/ \";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2980,"byte_end":2986,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/ let after = \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":2987,"byte_end":3005,"line_start":82,"line_end":82,"column_start":1,"column_end":19}},{"value":"/ * foo","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3006,"byte_end":3015,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/ * bar","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3016,"byte_end":3025,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ * baz","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3026,"byte_end":3035,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ \";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3036,"byte_end":3042,"line_start":86,"line_end":86,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(textwrap::indent(before, \"* \"), after);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3043,"byte_end":3097,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3098,"byte_end":3105,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3106,"byte_end":3109,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Removing leading whitespace is done with [`dedent`]:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3110,"byte_end":3166,"line_start":90,"line_end":90,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3167,"byte_end":3170,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3171,"byte_end":3178,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ let before = \"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3179,"byte_end":3197,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/     Some","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3198,"byte_end":3210,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/       indented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3211,"byte_end":3229,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/         text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3230,"byte_end":3246,"line_start":96,"line_end":96,"column_start":1,"column_end":17}},{"value":"/ \";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3247,"byte_end":3253,"line_start":97,"line_end":97,"column_start":1,"column_end":7}},{"value":"/ let after = \"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3254,"byte_end":3271,"line_start":98,"line_end":98,"column_start":1,"column_end":18}},{"value":"/ Some","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3272,"byte_end":3280,"line_start":99,"line_end":99,"column_start":1,"column_end":9}},{"value":"/   indented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3281,"byte_end":3295,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/     text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3296,"byte_end":3308,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/ \";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3309,"byte_end":3315,"line_start":102,"line_end":102,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(textwrap::dedent(before), after);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3316,"byte_end":3364,"line_start":103,"line_end":103,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3365,"byte_end":3372,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3373,"byte_end":3376,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Cargo Features","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3377,"byte_end":3397,"line_start":106,"line_end":106,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3398,"byte_end":3401,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The textwrap library can be slimmed down as needed via a number of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3402,"byte_end":3472,"line_start":108,"line_end":108,"column_start":1,"column_end":71}},{"value":"/ Cargo features. This means you only pay for the features you","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3473,"byte_end":3537,"line_start":109,"line_end":109,"column_start":1,"column_end":65}},{"value":"/ actually use.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3538,"byte_end":3555,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3556,"byte_end":3559,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The full dependency graph, where dashed lines indicate optional","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3560,"byte_end":3627,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"/ dependencies, is shown below:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3628,"byte_end":3661,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3662,"byte_end":3665,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ <img src=\"https://raw.githubusercontent.com/mgeisler/textwrap/master/images/textwrap-0.15.0.svg\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3666,"byte_end":3767,"line_start":115,"line_end":115,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3768,"byte_end":3771,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ## Default Features","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3772,"byte_end":3795,"line_start":117,"line_end":117,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3796,"byte_end":3799,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ These features are enabled by default:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3800,"byte_end":3842,"line_start":119,"line_end":119,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3843,"byte_end":3846,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ * `unicode-linebreak`: enables finding words using the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3847,"byte_end":3905,"line_start":121,"line_end":121,"column_start":1,"column_end":59}},{"value":"/   [unicode-linebreak] crate, which implements the line breaking","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3906,"byte_end":3973,"line_start":122,"line_end":122,"column_start":1,"column_end":68}},{"value":"/   algorithm described in [Unicode Standard Annex","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":3974,"byte_end":4026,"line_start":123,"line_end":123,"column_start":1,"column_end":53}},{"value":"/   #14](https://www.unicode.org/reports/tr14/).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4027,"byte_end":4077,"line_start":124,"line_end":124,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4078,"byte_end":4081,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you are happy to find words","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4082,"byte_end":4147,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"/   separated by ASCII space characters only. People wrapping text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4148,"byte_end":4216,"line_start":127,"line_end":127,"column_start":1,"column_end":69}},{"value":"/   with emojis or East-Asian characters will want most likely want","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4217,"byte_end":4286,"line_start":128,"line_end":128,"column_start":1,"column_end":70}},{"value":"/   to enable this feature. See [`WordSeparator`] for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4287,"byte_end":4351,"line_start":129,"line_end":129,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4352,"byte_end":4355,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ * `unicode-width`: enables correct width computation of non-ASCII","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4356,"byte_end":4425,"line_start":131,"line_end":131,"column_start":1,"column_end":70}},{"value":"/   characters via the [unicode-width] crate. Without this feature,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4426,"byte_end":4495,"line_start":132,"line_end":132,"column_start":1,"column_end":70}},{"value":"/   every [`char`] is 1 column wide, except for emojis which are 2","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4496,"byte_end":4564,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/   columns wide. See the [`core::display_width`] function for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4565,"byte_end":4629,"line_start":134,"line_end":134,"column_start":1,"column_end":65}},{"value":"/   details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4630,"byte_end":4644,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4645,"byte_end":4648,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you only need to wrap ASCII","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4649,"byte_end":4714,"line_start":137,"line_end":137,"column_start":1,"column_end":66}},{"value":"/   text, or if the functions in [`core`] are used directly with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4715,"byte_end":4781,"line_start":138,"line_end":138,"column_start":1,"column_end":67}},{"value":"/   [`core::Fragment`]s for which the widths have been computed in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4782,"byte_end":4850,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/   other ways.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4851,"byte_end":4868,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4869,"byte_end":4872,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ * `smawk`: enables linear-time wrapping of the whole paragraph via","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4873,"byte_end":4943,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/   the [smawk] crate. See the [`wrap_algorithms::wrap_optimal_fit`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":4944,"byte_end":5014,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/   function for details on the optimal-fit algorithm.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5015,"byte_end":5071,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5072,"byte_end":5075,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/   This feature can be disabled if you only ever intend to use","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5076,"byte_end":5141,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/   [`wrap_algorithms::wrap_first_fit`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5142,"byte_end":5184,"line_start":147,"line_end":147,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5185,"byte_end":5188,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ With Rust 1.59.0, the size impact of the above features on your","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5189,"byte_end":5256,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/ binary is as follows:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5257,"byte_end":5282,"line_start":150,"line_end":150,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5283,"byte_end":5286,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ | Configuration                            |  Binary Size |    Delta |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5287,"byte_end":5361,"line_start":152,"line_end":152,"column_start":1,"column_end":75}},{"value":"/ | :---                                     |         ---: |     ---: |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5362,"byte_end":5436,"line_start":153,"line_end":153,"column_start":1,"column_end":75}},{"value":"/ | quick-and-dirty implementation           |       289 KB |     — KB |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5437,"byte_end":5513,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ | textwrap without default features        |       301 KB |    12 KB |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5514,"byte_end":5588,"line_start":155,"line_end":155,"column_start":1,"column_end":75}},{"value":"/ | textwrap with smawk                      |       317 KB |    28 KB |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5589,"byte_end":5663,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/ | textwrap with unicode-width              |       313 KB |    24 KB |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5664,"byte_end":5738,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/ | textwrap with unicode-linebreak          |       395 KB |   106 KB |","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5739,"byte_end":5813,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5814,"byte_end":5817,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ The above sizes are the stripped sizes and the binary is compiled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5818,"byte_end":5887,"line_start":160,"line_end":160,"column_start":1,"column_end":70}},{"value":"/ in release mode with this profile:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5888,"byte_end":5926,"line_start":161,"line_end":161,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5927,"byte_end":5930,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5931,"byte_end":5942,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/ [profile.release]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5943,"byte_end":5964,"line_start":164,"line_end":164,"column_start":1,"column_end":22}},{"value":"/ lto = true","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5965,"byte_end":5979,"line_start":165,"line_end":165,"column_start":1,"column_end":15}},{"value":"/ codegen-units = 1","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":5980,"byte_end":6001,"line_start":166,"line_end":166,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6002,"byte_end":6009,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6010,"byte_end":6013,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ See the [binary-sizes demo] if you want to reproduce these","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6014,"byte_end":6076,"line_start":169,"line_end":169,"column_start":1,"column_end":63}},{"value":"/ results.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6077,"byte_end":6089,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6090,"byte_end":6093,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ## Optional Features","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6094,"byte_end":6118,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6119,"byte_end":6122,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ These Cargo features enable new functionality:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6123,"byte_end":6173,"line_start":174,"line_end":174,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6174,"byte_end":6177,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ * `terminal_size`: enables automatic detection of the terminal","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6178,"byte_end":6244,"line_start":176,"line_end":176,"column_start":1,"column_end":67}},{"value":"/   width via the [terminal_size] crate. See the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6245,"byte_end":6295,"line_start":177,"line_end":177,"column_start":1,"column_end":51}},{"value":"/   [`Options::with_termwidth`] constructor for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6296,"byte_end":6354,"line_start":178,"line_end":178,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6355,"byte_end":6358,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ * `hyphenation`: enables language-sensitive hyphenation via the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6359,"byte_end":6426,"line_start":180,"line_end":180,"column_start":1,"column_end":68}},{"value":"/   [hyphenation] crate. See the [`word_splitters::WordSplitter`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6427,"byte_end":6494,"line_start":181,"line_end":181,"column_start":1,"column_end":68}},{"value":"/   trait for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6495,"byte_end":6519,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6520,"byte_end":6523,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [unicode-linebreak]: https://docs.rs/unicode-linebreak/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6524,"byte_end":6583,"line_start":184,"line_end":184,"column_start":1,"column_end":60}},{"value":"/ [unicode-width]: https://docs.rs/unicode-width/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6584,"byte_end":6635,"line_start":185,"line_end":185,"column_start":1,"column_end":52}},{"value":"/ [smawk]: https://docs.rs/smawk/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6636,"byte_end":6671,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ [binary-sizes demo]: https://github.com/mgeisler/textwrap/tree/master/examples/binary-sizes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6672,"byte_end":6767,"line_start":187,"line_end":187,"column_start":1,"column_end":96}},{"value":"/ [textwrap-macros]: https://docs.rs/textwrap-macros/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6768,"byte_end":6823,"line_start":188,"line_end":188,"column_start":1,"column_end":56}},{"value":"/ [terminal_size]: https://docs.rs/terminal_size/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6824,"byte_end":6875,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/ [hyphenation]: https://docs.rs/hyphenation/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6876,"byte_end":6923,"line_start":190,"line_end":190,"column_start":1,"column_end":48}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":6984,"byte_end":7007,"line_start":193,"line_end":193,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7063,"byte_end":7085,"line_start":194,"line_end":194,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7086,"byte_end":7125,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"allow(clippy :: redundant_field_names)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7126,"byte_end":7166,"line_start":196,"line_end":196,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62160,"byte_end":62166,"line_start":52,"line_end":52,"column_start":8,"column_end":14},"name":"indent","qualname":"::indentation::indent","value":"pub fn indent(&str, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Indent each line by the given prefix.","sig":null,"attributes":[{"value":"/ Indent each line by the given prefix.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":60925,"byte_end":60966,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":60967,"byte_end":60970,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":60971,"byte_end":60985,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":60986,"byte_end":60989,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":60990,"byte_end":60997,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":60998,"byte_end":61023,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61024,"byte_end":61027,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"First line.\\nSecond line.\\n\", \"  \"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61028,"byte_end":61087,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/            \"  First line.\\n  Second line.\\n\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61088,"byte_end":61138,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61139,"byte_end":61146,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61147,"byte_end":61150,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When indenting, trailing whitespace is stripped from the prefix.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61151,"byte_end":61219,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ This means that empty lines remain empty afterwards:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61220,"byte_end":61276,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61277,"byte_end":61280,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61281,"byte_end":61288,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61289,"byte_end":61314,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61315,"byte_end":61318,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"First line.\\n\\n\\nSecond line.\\n\", \"  \"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61319,"byte_end":61382,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/            \"  First line.\\n\\n\\n  Second line.\\n\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61383,"byte_end":61437,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61438,"byte_end":61445,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61446,"byte_end":61449,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Notice how `\"\\n\\n\\n\"` remained as `\"\\n\\n\\n\"`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61450,"byte_end":61499,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61500,"byte_end":61503,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This feature is useful when you want to indent text and have a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61504,"byte_end":61570,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/ space between your prefix and the text. In this case, you _don't_","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61571,"byte_end":61640,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ want a trailing space on empty lines:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61641,"byte_end":61682,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61683,"byte_end":61686,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61687,"byte_end":61694,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61695,"byte_end":61720,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61721,"byte_end":61724,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\"foo = 123\\n\\nprint(foo)\\n\", \"# \"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61725,"byte_end":61782,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            \"# foo = 123\\n#\\n# print(foo)\\n\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61783,"byte_end":61832,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61833,"byte_end":61840,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61841,"byte_end":61844,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Notice how `\"\\n\\n\"` became `\"\\n#\\n\"` instead of `\"\\n# \\n\"` which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61845,"byte_end":61913,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/ would have trailing whitespace.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61914,"byte_end":61949,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61950,"byte_end":61953,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Leading and trailing whitespace coming from the text itself is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":61954,"byte_end":62020,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ kept unchanged:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62021,"byte_end":62040,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62041,"byte_end":62044,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62045,"byte_end":62052,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use textwrap::indent;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62053,"byte_end":62078,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62079,"byte_end":62082,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(indent(\" \\t  Foo   \", \"->\"), \"-> \\t  Foo   \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62083,"byte_end":62144,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62145,"byte_end":62152,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63385,"byte_end":63391,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"dedent","qualname":"::indentation::dedent","value":"pub fn dedent(&str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Removes common leading whitespace from each line.","sig":null,"attributes":[{"value":"/ Removes common leading whitespace from each line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":62996,"byte_end":63049,"line_start":77,"line_end":77,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63050,"byte_end":63053,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This function will look at each non-empty line and determine the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63054,"byte_end":63122,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ maximum amount of whitespace that can be removed from all lines:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63123,"byte_end":63191,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63192,"byte_end":63195,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63196,"byte_end":63203,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use textwrap::dedent;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63204,"byte_end":63229,"line_start":83,"line_end":83,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63230,"byte_end":63233,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dedent(\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63234,"byte_end":63257,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/     1st line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63258,"byte_end":63274,"line_start":86,"line_end":86,"column_start":1,"column_end":17}},{"value":"/       2nd line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63275,"byte_end":63293,"line_start":87,"line_end":87,"column_start":1,"column_end":19}},{"value":"/     3rd line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63294,"byte_end":63310,"line_start":88,"line_end":88,"column_start":1,"column_end":17}},{"value":"/ \"), \"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63311,"byte_end":63320,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ 1st line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63321,"byte_end":63333,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/   2nd line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63334,"byte_end":63348,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ 3rd line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63349,"byte_end":63361,"line_start":92,"line_end":92,"column_start":1,"column_end":13}},{"value":"/ \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63362,"byte_end":63369,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/indentation.rs","byte_start":63370,"byte_end":63377,"line_start":94,"line_end":94,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":147},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":71073,"byte_end":71083,"line_start":55,"line_end":55,"column_start":5,"column_end":15},"name":"AsciiSpace","qualname":"::word_separators::WordSeparator::AsciiSpace","value":"WordSeparator::AsciiSpace","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Find words by splitting on runs of `' '` characters.","sig":null,"attributes":[{"value":"/ Find words by splitting on runs of `' '` characters.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70671,"byte_end":70727,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70732,"byte_end":70735,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70740,"byte_end":70754,"line_start":45,"line_end":45,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70759,"byte_end":70762,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70767,"byte_end":70774,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70779,"byte_end":70808,"line_start":48,"line_end":48,"column_start":5,"column_end":34}},{"value":"/ use textwrap::WordSeparator::AsciiSpace;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70813,"byte_end":70857,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70862,"byte_end":70865,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let words = AsciiSpace.find_words(\"Hello   World!\").collect::<Vec<_>>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70870,"byte_end":70946,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(words, vec![Word::from(\"Hello   \"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70951,"byte_end":71001,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/                        Word::from(\"World!\")]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":71006,"byte_end":71056,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":71061,"byte_end":71068,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":149},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":73751,"byte_end":73757,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Custom","qualname":"::word_separators::WordSeparator::Custom","value":"WordSeparator::Custom(fn(line: &str) -> Box<dyn Iterator<Item = Word>>)","parent":{"krate":0,"index":146},"children":[],"decl_id":null,"docs":" Find words using a custom word separator\n","sig":null,"attributes":[{"value":"/ Find words using a custom word separator","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":73702,"byte_end":73746,"line_start":121,"line_end":121,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":146},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70651,"byte_end":70664,"line_start":42,"line_end":42,"column_start":10,"column_end":23},"name":"WordSeparator","qualname":"::word_separators::WordSeparator","value":"pub enum WordSeparator {\n    AsciiSpace,\n    Custom(fn(line: &str) -> Box<dyn Iterator<Item = Word>>),\n}","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":149}],"decl_id":null,"docs":" Describes where words occur in a line of text.","sig":null,"attributes":[{"value":"/ Describes where words occur in a line of text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":69863,"byte_end":69913,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":69914,"byte_end":69917,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The simplest approach is say that words are separated by one or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":69918,"byte_end":69985,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ more ASCII spaces (`' '`). This works for Western languages","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":69986,"byte_end":70049,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ without emojis. A more complex approach is to use the Unicode line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70050,"byte_end":70120,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ breaking algorithm, which finds break points in non-ASCII text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70121,"byte_end":70188,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70189,"byte_end":70192,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The line breaks occur between words, please see","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70193,"byte_end":70244,"line_start":28,"line_end":28,"column_start":1,"column_end":52}},{"value":"/ [`WordSplitter`](crate::WordSplitter) for options of how to handle","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70245,"byte_end":70315,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ hyphenation of individual words.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70316,"byte_end":70352,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70353,"byte_end":70356,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70357,"byte_end":70371,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70372,"byte_end":70375,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70376,"byte_end":70383,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70384,"byte_end":70413,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ use textwrap::WordSeparator::AsciiSpace;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70414,"byte_end":70458,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70459,"byte_end":70462,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let words = AsciiSpace.find_words(\"Hello World!\").collect::<Vec<_>>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70463,"byte_end":70537,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(words, vec![Word::from(\"Hello \"), Word::from(\"World!\")]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70538,"byte_end":70610,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":70611,"byte_end":70618,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":74551,"byte_end":74561,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"find_words","qualname":"<WordSeparator>::find_words","value":"pub fn find_words<'a>(&Self, &'a str) -> Box<dyn Iterator<Item = Word> + 'a>","parent":null,"children":[],"decl_id":null,"docs":" Find all words in `line`.\n","sig":null,"attributes":[{"value":"/ Find all words in `line`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":74510,"byte_end":74539,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"word_splitters","qualname":"::word_splitters","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":155},{"krate":0,"index":163},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":48}],"decl_id":null,"docs":" Word splitting functionality.","sig":null,"attributes":[{"value":"/ Word splitting functionality.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":83785,"byte_end":83818,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":83819,"byte_end":83822,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To wrap text into lines, long words sometimes need to be split","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":83823,"byte_end":83889,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ across lines. The [`WordSplitter`] enum defines this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":83890,"byte_end":83946,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ functionality.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":83947,"byte_end":83965,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":156},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85588,"byte_end":85601,"line_start":50,"line_end":50,"column_start":5,"column_end":18},"name":"NoHyphenation","qualname":"::word_splitters::WordSplitter::NoHyphenation","value":"WordSplitter::NoHyphenation","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Use this as a [`Options.word_splitter`] to avoid any kind of\n hyphenation:","sig":null,"attributes":[{"value":"/ Use this as a [`Options.word_splitter`] to avoid any kind of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85156,"byte_end":85220,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ hyphenation:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85225,"byte_end":85241,"line_start":39,"line_end":39,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85246,"byte_end":85249,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85254,"byte_end":85261,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{wrap, Options, WordSplitter};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85266,"byte_end":85314,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85319,"byte_end":85322,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(8).word_splitter(WordSplitter::NoHyphenation);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85327,"byte_end":85404,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(wrap(\"foo bar-baz\", &options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85409,"byte_end":85454,"line_start":45,"line_end":45,"column_start":5,"column_end":50}},{"value":"/            vec![\"foo\", \"bar-baz\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85459,"byte_end":85498,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85503,"byte_end":85510,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85515,"byte_end":85518,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ [`Options.word_splitter`]: super::Options::word_splitter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85523,"byte_end":85583,"line_start":49,"line_end":49,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":158},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86178,"byte_end":86192,"line_start":68,"line_end":68,"column_start":5,"column_end":19},"name":"HyphenSplitter","qualname":"::word_splitters::WordSplitter::HyphenSplitter","value":"WordSplitter::HyphenSplitter","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" `HyphenSplitter` is the default `WordSplitter` used by\n [`Options::new`](super::Options::new). It will split words on\n existing hyphens in the word.","sig":null,"attributes":[{"value":"/ `HyphenSplitter` is the default `WordSplitter` used by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85608,"byte_end":85666,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ [`Options::new`](super::Options::new). It will split words on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85671,"byte_end":85736,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ existing hyphens in the word.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85741,"byte_end":85774,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85779,"byte_end":85782,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It will only use hyphens that are surrounded by alphanumeric","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85787,"byte_end":85851,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/ characters, which prevents a word like `\"--foo-bar\"` from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85856,"byte_end":85917,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/ being split into `\"--\"` and `\"foo-bar\"`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85922,"byte_end":85966,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85971,"byte_end":85974,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85979,"byte_end":85993,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85998,"byte_end":86001,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86006,"byte_end":86013,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use textwrap::WordSplitter;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86018,"byte_end":86049,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86054,"byte_end":86057,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WordSplitter::HyphenSplitter.split_points(\"--foo-bar\"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86062,"byte_end":86132,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/            vec![6]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86137,"byte_end":86161,"line_start":66,"line_end":66,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86166,"byte_end":86173,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86775,"byte_end":86781,"line_start":88,"line_end":88,"column_start":5,"column_end":11},"name":"Custom","qualname":"::word_splitters::WordSplitter::Custom","value":"WordSplitter::Custom(fn(word: &str) -> Vec<usize>)","parent":{"krate":0,"index":155},"children":[],"decl_id":null,"docs":" Use a custom function as the word splitter.","sig":null,"attributes":[{"value":"/ Use a custom function as the word splitter.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86199,"byte_end":86246,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86251,"byte_end":86254,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This varian lets you implement a custom word splitter using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86259,"byte_end":86322,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ your own function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86327,"byte_end":86349,"line_start":73,"line_end":73,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86354,"byte_end":86357,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86362,"byte_end":86376,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86381,"byte_end":86384,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86389,"byte_end":86396,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use textwrap::WordSplitter;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86401,"byte_end":86432,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86437,"byte_end":86440,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ fn split_at_underscore(word: &str) -> Vec<usize> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86445,"byte_end":86499,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"/     word.match_indices('_').map(|(idx, _)| idx + 1).collect()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86504,"byte_end":86569,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86574,"byte_end":86579,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86584,"byte_end":86587,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let word_splitter = WordSplitter::Custom(split_at_underscore);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86592,"byte_end":86658,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(word_splitter.split_points(\"a_long_identifier\"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86663,"byte_end":86726,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/            vec![2, 7]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86731,"byte_end":86758,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":86763,"byte_end":86770,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":155},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85137,"byte_end":85149,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"WordSplitter","qualname":"::word_splitters::WordSplitter","value":"pub enum WordSplitter {\n    NoHyphenation,\n    HyphenSplitter,\n    Custom(fn(word: &str) -> Vec<usize>),\n}","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160}],"decl_id":null,"docs":" The `WordSplitter` enum describes where words can be split.","sig":null,"attributes":[{"value":"/ The `WordSplitter` enum describes where words can be split.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84008,"byte_end":84071,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84072,"byte_end":84075,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If the textwrap crate has been compiled with the `hyphenation`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84076,"byte_end":84142,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ Cargo feature enabled, you will find a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84143,"byte_end":84185,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/ [`WordSplitter::Hyphenation`] variant. Use this struct for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84186,"byte_end":84248,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/ language-aware hyphenation:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84249,"byte_end":84280,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84281,"byte_end":84284,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84285,"byte_end":84292,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ #[cfg(feature = \"hyphenation\")] {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84293,"byte_end":84330,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/     use hyphenation::{Language, Load, Standard};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84331,"byte_end":84383,"line_start":18,"line_end":18,"column_start":1,"column_end":53}},{"value":"/     use textwrap::{wrap, Options, WordSplitter};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84384,"byte_end":84436,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84437,"byte_end":84440,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     let text = \"Oxidation is the loss of electrons.\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84441,"byte_end":84498,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/     let dictionary = Standard::from_embedded(Language::EnglishUS).unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84499,"byte_end":84578,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/     let options = Options::new(8).word_splitter(WordSplitter::Hyphenation(dictionary));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84579,"byte_end":84670,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/     assert_eq!(wrap(text, &options), vec![\"Oxida-\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84671,"byte_end":84726,"line_start":24,"line_end":24,"column_start":1,"column_end":56}},{"value":"/                                           \"tion is\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84727,"byte_end":84783,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/                                           \"the loss\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84784,"byte_end":84841,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/                                           \"of elec-\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84842,"byte_end":84899,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/                                           \"trons.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84900,"byte_end":84957,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84958,"byte_end":84963,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84964,"byte_end":84971,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84972,"byte_end":84975,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Please see the documentation for the [hyphenation] crate for more","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":84976,"byte_end":85045,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85046,"byte_end":85058,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85059,"byte_end":85062,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [hyphenation]: https://docs.rs/hyphenation/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":85063,"byte_end":85110,"line_start":35,"line_end":35,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88969,"byte_end":88981,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"split_points","qualname":"<WordSplitter>::split_points","value":"pub fn split_points(&Self, &str) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return all possible indices where `word` can be split.","sig":null,"attributes":[{"value":"/ Return all possible indices where `word` can be split.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88267,"byte_end":88325,"line_start":128,"line_end":128,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88330,"byte_end":88333,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The indices are in the range `0..word.len()`. They point to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88338,"byte_end":88401,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"/ the index _after_ the split point, i.e., after `-` if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88406,"byte_end":88463,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"/ splitting on hyphens. This way, `word.split_at(idx)` will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88468,"byte_end":88529,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ break the word into two well-formed pieces.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88534,"byte_end":88581,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88586,"byte_end":88589,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88594,"byte_end":88608,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88613,"byte_end":88616,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88621,"byte_end":88628,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ use textwrap::WordSplitter;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88633,"byte_end":88664,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(WordSplitter::NoHyphenation.split_points(\"cannot-be-split\"), vec![]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88669,"byte_end":88753,"line_start":139,"line_end":139,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(WordSplitter::HyphenSplitter.split_points(\"can-be-split\"), vec![4, 7]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88758,"byte_end":88844,"line_start":140,"line_end":140,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(WordSplitter::Custom(|word| vec![word.len()/2]).split_points(\"middle\"), vec![3]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88849,"byte_end":88945,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88950,"byte_end":88957,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90515,"byte_end":90526,"line_start":181,"line_end":181,"column_start":8,"column_end":19},"name":"split_words","qualname":"::word_splitters::split_words","value":"pub fn split_words<'a, I>(I, &'a WordSplitter) -> /*impl Trait*/ where\nI: IntoIterator<Item = Word>","parent":null,"children":[],"decl_id":null,"docs":" Split words into smaller words according to the split points given\n by `word_splitter`.","sig":null,"attributes":[{"value":"/ Split words into smaller words according to the split points given","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90210,"byte_end":90280,"line_start":175,"line_end":175,"column_start":1,"column_end":71}},{"value":"/ by `word_splitter`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90281,"byte_end":90304,"line_start":176,"line_end":176,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90305,"byte_end":90308,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Note that we split all words, regardless of their length. This is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90309,"byte_end":90378,"line_start":178,"line_end":178,"column_start":1,"column_end":70}},{"value":"/ to more cleanly separate the business of splitting (including","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90379,"byte_end":90444,"line_start":179,"line_end":179,"column_start":1,"column_end":66}},{"value":"/ automatic hyphenation) from the business of word wrapping.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":90445,"byte_end":90507,"line_start":180,"line_end":180,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrap_algorithms","qualname":"::wrap_algorithms","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":165},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":73},{"krate":0,"index":75}],"decl_id":null,"docs":" Word wrapping algorithms.","sig":null,"attributes":[{"value":"/ Word wrapping algorithms.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94240,"byte_end":94269,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94270,"byte_end":94273,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ After a text has been broken into words (or [`Fragment`]s), one","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94274,"byte_end":94341,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ now has to decide how to break the fragments into lines. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94342,"byte_end":94406,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/ simplest algorithm for this is implemented by [`wrap_first_fit`]:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94407,"byte_end":94476,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ it uses no look-ahead and simply adds fragments to the line as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94477,"byte_end":94543,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ long as they fit. However, this can lead to poor line breaks if a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94544,"byte_end":94613,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ large fragment almost-but-not-quite fits on a line. When that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94614,"byte_end":94679,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ happens, the fragment is moved to the next line and it will leave","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94680,"byte_end":94749,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/ behind a large gap. A more advanced algorithm, implemented by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94750,"byte_end":94815,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/ [`wrap_optimal_fit`], will take this into account. The optimal-fit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94816,"byte_end":94886,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ algorithm considers all possible line breaks and will attempt to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94887,"byte_end":94955,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ minimize the gaps left behind by overly short lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":94956,"byte_end":95012,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95013,"byte_end":95016,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ While both algorithms run in linear time, the first-fit algorithm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95017,"byte_end":95086,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ is about 4 times faster than the optimal-fit algorithm.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95087,"byte_end":95146,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":166},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96011,"byte_end":96019,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"FirstFit","qualname":"::wrap_algorithms::WrapAlgorithm::FirstFit","value":"WrapAlgorithm::FirstFit","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Wrap words using a fast and simple algorithm.","sig":null,"attributes":[{"value":"/ Wrap words using a fast and simple algorithm.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95779,"byte_end":95828,"line_start":35,"line_end":35,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95833,"byte_end":95836,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This algorithm uses no look-ahead when finding line breaks.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95841,"byte_end":95904,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/ Implemented by [`wrap_first_fit`], please see that function for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95909,"byte_end":95976,"line_start":38,"line_end":38,"column_start":5,"column_end":72}},{"value":"/ details and examples.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95981,"byte_end":96006,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":168},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97703,"byte_end":97709,"line_start":87,"line_end":87,"column_start":5,"column_end":11},"name":"Custom","qualname":"::wrap_algorithms::WrapAlgorithm::Custom","value":"WrapAlgorithm::Custom(for<'a, 'b> fn(words: &'b [Word], line_widths: &'b [usize]) -> Vec<&'b [Word]>)","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Custom wrapping function.","sig":null,"attributes":[{"value":"/ Custom wrapping function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96636,"byte_end":96665,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96670,"byte_end":96673,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Use this if you want to implement your own wrapping algorithm.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96678,"byte_end":96744,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/ The function can freely decide how to turn a slice of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96749,"byte_end":96806,"line_start":60,"line_end":60,"column_start":5,"column_end":62}},{"value":"/ [`Word`]s into lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96811,"byte_end":96836,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96841,"byte_end":96844,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96849,"byte_end":96862,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96867,"byte_end":96870,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96875,"byte_end":96882,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96887,"byte_end":96916,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ use textwrap::{wrap, Options, WrapAlgorithm};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96921,"byte_end":96970,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96975,"byte_end":96978,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ fn stair<'a, 'b>(words: &'b [Word<'a>], _: &'b [usize]) -> Vec<&'b [Word<'a>]> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":96983,"byte_end":97067,"line_start":69,"line_end":69,"column_start":5,"column_end":89}},{"value":"/     let mut lines = Vec::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97072,"byte_end":97107,"line_start":70,"line_end":70,"column_start":5,"column_end":40}},{"value":"/     let mut step = 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97112,"byte_end":97137,"line_start":71,"line_end":71,"column_start":5,"column_end":30}},{"value":"/     let mut start_idx = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97142,"byte_end":97172,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/     while start_idx + step <= words.len() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97177,"byte_end":97224,"line_start":73,"line_end":73,"column_start":5,"column_end":52}},{"value":"/       lines.push(&words[start_idx .. start_idx+step]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97229,"byte_end":97287,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/       start_idx += step;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97292,"byte_end":97320,"line_start":75,"line_end":75,"column_start":5,"column_end":33}},{"value":"/       step += 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97325,"byte_end":97345,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97350,"byte_end":97359,"line_start":77,"line_end":77,"column_start":5,"column_end":14}},{"value":"/     lines","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97364,"byte_end":97377,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97382,"byte_end":97387,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97392,"byte_end":97395,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(10).wrap_algorithm(WrapAlgorithm::Custom(stair));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97400,"byte_end":97480,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(wrap(\"First, second, third, fourth, fifth, sixth\", options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97485,"byte_end":97560,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/            vec![\"First,\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97565,"byte_end":97594,"line_start":83,"line_end":83,"column_start":5,"column_end":34}},{"value":"/                 \"second, third,\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97599,"byte_end":97636,"line_start":84,"line_end":84,"column_start":5,"column_end":42}},{"value":"/                 \"fourth, fifth, sixth\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97641,"byte_end":97686,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97691,"byte_end":97698,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":165},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95759,"byte_end":95772,"line_start":34,"line_end":34,"column_start":10,"column_end":23},"name":"WrapAlgorithm","qualname":"::wrap_algorithms::WrapAlgorithm","value":"pub enum WrapAlgorithm {\n    FirstFit,\n    Custom(for<'a, 'b> fn(words: &'b [Word], line_widths: &'b [usize])\n               -> Vec<&'b [Word]>),\n}","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168}],"decl_id":null,"docs":" Describes how to wrap words into lines.","sig":null,"attributes":[{"value":"/ Describes how to wrap words into lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95321,"byte_end":95364,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95365,"byte_end":95368,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The simplest approach is to wrap words one word at a time and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95369,"byte_end":95434,"line_start":27,"line_end":27,"column_start":1,"column_end":66}},{"value":"/ accept the first way of wrapping which fit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95435,"byte_end":95481,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ ([`WrapAlgorithm::FirstFit`]). If the `smawk` Cargo feature is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95482,"byte_end":95548,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ enabled, a more complex algorithm is available which will look at","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95549,"byte_end":95618,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ an entire paragraph at a time in order to find optimal line breaks","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95619,"byte_end":95689,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ ([`WrapAlgorithm::OptimalFit`]).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":95690,"byte_end":95726,"line_start":32,"line_end":32,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98462,"byte_end":98465,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"name":"new","qualname":"<WrapAlgorithm>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new wrap algorithm.","sig":null,"attributes":[{"value":"/ Create new wrap algorithm.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98245,"byte_end":98275,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98280,"byte_end":98283,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ The best wrapping algorithm is used by default, i.e.,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98288,"byte_end":98345,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/ [`WrapAlgorithm::OptimalFit`] if available, otherwise","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98350,"byte_end":98407,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/ [`WrapAlgorithm::FirstFit`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98412,"byte_end":98444,"line_start":106,"line_end":106,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99286,"byte_end":99290,"line_start":135,"line_end":135,"column_start":12,"column_end":16},"name":"wrap","qualname":"<WrapAlgorithm>::wrap","value":"pub fn wrap<'a, 'b>(&Self, &'b [Word], &'b [usize]) -> Vec<&'b [Word]>","parent":null,"children":[],"decl_id":null,"docs":" Wrap words according to line widths.","sig":null,"attributes":[{"value":"/ Wrap words according to line widths.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99020,"byte_end":99060,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99065,"byte_end":99068,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ The `line_widths` slice gives the target line width for each","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99073,"byte_end":99137,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ line (the last slice element is repeated as necessary). This","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99142,"byte_end":99206,"line_start":132,"line_end":132,"column_start":5,"column_end":69}},{"value":"/ can be used to implement hanging indentation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99211,"byte_end":99260,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":99265,"byte_end":99274,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106362,"byte_end":106376,"line_start":315,"line_end":315,"column_start":8,"column_end":22},"name":"wrap_first_fit","qualname":"::wrap_algorithms::wrap_first_fit","value":"pub fn wrap_first_fit<'a, 'b, T: Fragment>(&'a [T], &'b [f64]) -> Vec<&'a [T]>","parent":null,"children":[],"decl_id":null,"docs":" Wrap abstract fragments into lines with a first-fit algorithm.","sig":null,"attributes":[{"value":"/ Wrap abstract fragments into lines with a first-fit algorithm.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100332,"byte_end":100398,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100399,"byte_end":100402,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ The `line_widths` slice gives the target line width for each line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100403,"byte_end":100472,"line_start":169,"line_end":169,"column_start":1,"column_end":70}},{"value":"/ (the last slice element is repeated as necessary). This can be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100473,"byte_end":100539,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ used to implement hanging indentation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100540,"byte_end":100582,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100583,"byte_end":100586,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The fragments must already have been split into the desired","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100587,"byte_end":100650,"line_start":173,"line_end":173,"column_start":1,"column_end":64}},{"value":"/ widths, this function will not (and cannot) attempt to split them","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100651,"byte_end":100720,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/ further when arranging them into lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100721,"byte_end":100764,"line_start":175,"line_end":175,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100765,"byte_end":100768,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # First-Fit Algorithm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100769,"byte_end":100794,"line_start":177,"line_end":177,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100795,"byte_end":100798,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This implements a simple “greedy” algorithm: accumulate fragments","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100799,"byte_end":100872,"line_start":179,"line_end":179,"column_start":1,"column_end":70}},{"value":"/ one by one and when a fragment no longer fits, start a new line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100873,"byte_end":100941,"line_start":180,"line_end":180,"column_start":1,"column_end":69}},{"value":"/ There is no look-ahead, we simply take first fit of the fragments","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100942,"byte_end":101011,"line_start":181,"line_end":181,"column_start":1,"column_end":70}},{"value":"/ we find.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101012,"byte_end":101024,"line_start":182,"line_end":182,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101025,"byte_end":101028,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ While fast and predictable, this algorithm can produce poor line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101029,"byte_end":101097,"line_start":184,"line_end":184,"column_start":1,"column_end":69}},{"value":"/ breaks when a long fragment is moved to a new line, leaving behind","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101098,"byte_end":101168,"line_start":185,"line_end":185,"column_start":1,"column_end":71}},{"value":"/ a large gap:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101169,"byte_end":101185,"line_start":186,"line_end":186,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101186,"byte_end":101189,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101190,"byte_end":101197,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101198,"byte_end":101227,"line_start":189,"line_end":189,"column_start":1,"column_end":30}},{"value":"/ use textwrap::wrap_algorithms::wrap_first_fit;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101228,"byte_end":101278,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/ use textwrap::WordSeparator;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101279,"byte_end":101311,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101312,"byte_end":101315,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ // Helper to convert wrapped lines to a Vec<String>.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101316,"byte_end":101372,"line_start":193,"line_end":193,"column_start":1,"column_end":57}},{"value":"/ fn lines_to_strings(lines: Vec<&[Word<'_>]>) -> Vec<String> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101373,"byte_end":101438,"line_start":194,"line_end":194,"column_start":1,"column_end":66}},{"value":"/     lines.iter().map(|line| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101439,"byte_end":101472,"line_start":195,"line_end":195,"column_start":1,"column_end":34}},{"value":"/         line.iter().map(|word| &**word).collect::<Vec<_>>().join(\" \")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101473,"byte_end":101546,"line_start":196,"line_end":196,"column_start":1,"column_end":74}},{"value":"/     }).collect::<Vec<_>>()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101547,"byte_end":101577,"line_start":197,"line_end":197,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101578,"byte_end":101583,"line_start":198,"line_end":198,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101584,"byte_end":101587,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ let text = \"These few words will unfortunately not wrap nicely.\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101588,"byte_end":101657,"line_start":200,"line_end":200,"column_start":1,"column_end":70}},{"value":"/ let words = WordSeparator::AsciiSpace.find_words(text).collect::<Vec<_>>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101658,"byte_end":101737,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"/ assert_eq!(lines_to_strings(wrap_first_fit(&words, &[15.0])),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101738,"byte_end":101803,"line_start":202,"line_end":202,"column_start":1,"column_end":66}},{"value":"/            vec![\"These few words\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101804,"byte_end":101842,"line_start":203,"line_end":203,"column_start":1,"column_end":39}},{"value":"/                 \"will\",  // <-- short line","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101843,"byte_end":101889,"line_start":204,"line_end":204,"column_start":1,"column_end":47}},{"value":"/                 \"unfortunately\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101890,"byte_end":101926,"line_start":205,"line_end":205,"column_start":1,"column_end":37}},{"value":"/                 \"not wrap\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101927,"byte_end":101958,"line_start":206,"line_end":206,"column_start":1,"column_end":32}},{"value":"/                 \"nicely.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101959,"byte_end":101991,"line_start":207,"line_end":207,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101992,"byte_end":101995,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ // We can avoid the short line if we look ahead:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":101996,"byte_end":102048,"line_start":209,"line_end":209,"column_start":1,"column_end":53}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102049,"byte_end":102078,"line_start":210,"line_end":210,"column_start":1,"column_end":30}},{"value":"/ use textwrap::wrap_algorithms::{wrap_optimal_fit, Penalties};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102079,"byte_end":102144,"line_start":211,"line_end":211,"column_start":1,"column_end":66}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102145,"byte_end":102174,"line_start":212,"line_end":212,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(lines_to_strings(wrap_optimal_fit(&words, &[15.0], &Penalties::new()).unwrap()),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102175,"byte_end":102270,"line_start":213,"line_end":213,"column_start":1,"column_end":96}},{"value":"/            vec![\"These few\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102271,"byte_end":102303,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/                 \"words will\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102304,"byte_end":102337,"line_start":215,"line_end":215,"column_start":1,"column_end":34}},{"value":"/                 \"unfortunately\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102338,"byte_end":102374,"line_start":216,"line_end":216,"column_start":1,"column_end":37}},{"value":"/                 \"not wrap\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102375,"byte_end":102406,"line_start":217,"line_end":217,"column_start":1,"column_end":32}},{"value":"/                 \"nicely.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102407,"byte_end":102439,"line_start":218,"line_end":218,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102440,"byte_end":102447,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102448,"byte_end":102451,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ The [`wrap_optimal_fit`] function was used above to get better","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102452,"byte_end":102518,"line_start":221,"line_end":221,"column_start":1,"column_end":67}},{"value":"/ line breaks. It uses an advanced algorithm which tries to avoid","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102519,"byte_end":102586,"line_start":222,"line_end":222,"column_start":1,"column_end":68}},{"value":"/ short lines. This function is about 4 times faster than","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102587,"byte_end":102646,"line_start":223,"line_end":223,"column_start":1,"column_end":60}},{"value":"/ [`wrap_optimal_fit`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102647,"byte_end":102672,"line_start":224,"line_end":224,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102673,"byte_end":102676,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102677,"byte_end":102691,"line_start":226,"line_end":226,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102692,"byte_end":102695,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Imagine you're building a house site and you have a number of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102696,"byte_end":102761,"line_start":228,"line_end":228,"column_start":1,"column_end":66}},{"value":"/ tasks you need to execute. Things like pour foundation, complete","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102762,"byte_end":102830,"line_start":229,"line_end":229,"column_start":1,"column_end":69}},{"value":"/ framing, install plumbing, electric cabling, install insulation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102831,"byte_end":102899,"line_start":230,"line_end":230,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102900,"byte_end":102903,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The construction workers can only work during daytime, so they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102904,"byte_end":102970,"line_start":232,"line_end":232,"column_start":1,"column_end":67}},{"value":"/ need to pack up everything at night. Because they need to secure","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":102971,"byte_end":103039,"line_start":233,"line_end":233,"column_start":1,"column_end":69}},{"value":"/ their tools and move machines back to the garage, this process","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103040,"byte_end":103106,"line_start":234,"line_end":234,"column_start":1,"column_end":67}},{"value":"/ takes much more time than the time it would take them to simply","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103107,"byte_end":103174,"line_start":235,"line_end":235,"column_start":1,"column_end":68}},{"value":"/ switch to another task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103175,"byte_end":103202,"line_start":236,"line_end":236,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103203,"byte_end":103206,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ You would like to make a list of tasks to execute every day based","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103207,"byte_end":103276,"line_start":238,"line_end":238,"column_start":1,"column_end":70}},{"value":"/ on your estimates. You can model this with a program like this:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103277,"byte_end":103344,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103345,"byte_end":103348,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103349,"byte_end":103356,"line_start":241,"line_end":241,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::{Fragment, Word};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103357,"byte_end":103398,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"/ use textwrap::wrap_algorithms::wrap_first_fit;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103399,"byte_end":103449,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103450,"byte_end":103453,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103454,"byte_end":103474,"line_start":245,"line_end":245,"column_start":1,"column_end":21}},{"value":"/ struct Task<'a> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103475,"byte_end":103496,"line_start":246,"line_end":246,"column_start":1,"column_end":22}},{"value":"/     name: &'a str,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103497,"byte_end":103519,"line_start":247,"line_end":247,"column_start":1,"column_end":23}},{"value":"/     hours: f64,   // Time needed to complete task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103520,"byte_end":103574,"line_start":248,"line_end":248,"column_start":1,"column_end":55}},{"value":"/     sweep: f64,   // Time needed for a quick sweep after task during the day.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103575,"byte_end":103656,"line_start":249,"line_end":249,"column_start":1,"column_end":82}},{"value":"/     cleanup: f64, // Time needed for full cleanup if day ends with this task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103657,"byte_end":103738,"line_start":250,"line_end":250,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103739,"byte_end":103744,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103745,"byte_end":103748,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ impl Fragment for Task<'_> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103749,"byte_end":103781,"line_start":253,"line_end":253,"column_start":1,"column_end":33}},{"value":"/     fn width(&self) -> f64 { self.hours }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103782,"byte_end":103827,"line_start":254,"line_end":254,"column_start":1,"column_end":46}},{"value":"/     fn whitespace_width(&self) -> f64 { self.sweep }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103828,"byte_end":103884,"line_start":255,"line_end":255,"column_start":1,"column_end":57}},{"value":"/     fn penalty_width(&self) -> f64 { self.cleanup }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103885,"byte_end":103940,"line_start":256,"line_end":256,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103941,"byte_end":103946,"line_start":257,"line_end":257,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103947,"byte_end":103950,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ // The morning tasks","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103951,"byte_end":103975,"line_start":259,"line_end":259,"column_start":1,"column_end":25}},{"value":"/ let tasks = vec![","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103976,"byte_end":103997,"line_start":260,"line_end":260,"column_start":1,"column_end":22}},{"value":"/     Task { name: \"Foundation\",  hours: 4.0, sweep: 2.0, cleanup: 3.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":103998,"byte_end":104073,"line_start":261,"line_end":261,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Framing\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104074,"byte_end":104149,"line_start":262,"line_end":262,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Plumbing\",    hours: 2.0, sweep: 2.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104150,"byte_end":104225,"line_start":263,"line_end":263,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Electrical\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104226,"byte_end":104301,"line_start":264,"line_end":264,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Insulation\",  hours: 2.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104302,"byte_end":104377,"line_start":265,"line_end":265,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Drywall\",     hours: 3.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104378,"byte_end":104453,"line_start":266,"line_end":266,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Floors\",      hours: 3.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104454,"byte_end":104529,"line_start":267,"line_end":267,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Countertops\", hours: 1.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104530,"byte_end":104605,"line_start":268,"line_end":268,"column_start":1,"column_end":76}},{"value":"/     Task { name: \"Bathrooms\",   hours: 2.0, sweep: 1.0, cleanup: 2.0 },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104606,"byte_end":104681,"line_start":269,"line_end":269,"column_start":1,"column_end":76}},{"value":"/ ];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104682,"byte_end":104688,"line_start":270,"line_end":270,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104689,"byte_end":104692,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ // Fill tasks into days, taking `day_length` into account. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104693,"byte_end":104759,"line_start":272,"line_end":272,"column_start":1,"column_end":67}},{"value":"/ // output shows the hours worked per day along with the names of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104760,"byte_end":104828,"line_start":273,"line_end":273,"column_start":1,"column_end":69}},{"value":"/ // the tasks for that day.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104829,"byte_end":104859,"line_start":274,"line_end":274,"column_start":1,"column_end":31}},{"value":"/ fn assign_days<'a>(tasks: &[Task<'a>], day_length: f64) -> Vec<(f64, Vec<&'a str>)> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104860,"byte_end":104949,"line_start":275,"line_end":275,"column_start":1,"column_end":90}},{"value":"/     let mut days = Vec::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104950,"byte_end":104984,"line_start":276,"line_end":276,"column_start":1,"column_end":35}},{"value":"/     // Assign tasks to days. The assignment is a vector of slices,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":104985,"byte_end":105055,"line_start":277,"line_end":277,"column_start":1,"column_end":71}},{"value":"/     // with a slice per day.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105056,"byte_end":105088,"line_start":278,"line_end":278,"column_start":1,"column_end":33}},{"value":"/     let assigned_days: Vec<&[Task<'a>]> = wrap_first_fit(&tasks, &[day_length]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105089,"byte_end":105173,"line_start":279,"line_end":279,"column_start":1,"column_end":85}},{"value":"/     for day in assigned_days.iter() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105174,"byte_end":105215,"line_start":280,"line_end":280,"column_start":1,"column_end":42}},{"value":"/         let last = day.last().unwrap();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105216,"byte_end":105259,"line_start":281,"line_end":281,"column_start":1,"column_end":44}},{"value":"/         let work_hours: f64 = day.iter().map(|t| t.hours + t.sweep).sum();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105260,"byte_end":105338,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/         let names = day.iter().map(|t| t.name).collect::<Vec<_>>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105339,"byte_end":105410,"line_start":283,"line_end":283,"column_start":1,"column_end":72}},{"value":"/         days.push((work_hours - last.sweep + last.cleanup, names));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105411,"byte_end":105482,"line_start":284,"line_end":284,"column_start":1,"column_end":72}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105483,"byte_end":105492,"line_start":285,"line_end":285,"column_start":1,"column_end":10}},{"value":"/     days","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105493,"byte_end":105505,"line_start":286,"line_end":286,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105506,"byte_end":105511,"line_start":287,"line_end":287,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105512,"byte_end":105515,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ // With a single crew working 8 hours a day:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105516,"byte_end":105564,"line_start":289,"line_end":289,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105565,"byte_end":105580,"line_start":290,"line_end":290,"column_start":1,"column_end":16}},{"value":"/     assign_days(&tasks, 8.0),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105581,"byte_end":105614,"line_start":291,"line_end":291,"column_start":1,"column_end":34}},{"value":"/     [","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105615,"byte_end":105624,"line_start":292,"line_end":292,"column_start":1,"column_end":10}},{"value":"/         (7.0, vec![\"Foundation\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105625,"byte_end":105663,"line_start":293,"line_end":293,"column_start":1,"column_end":39}},{"value":"/         (8.0, vec![\"Framing\", \"Plumbing\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105664,"byte_end":105711,"line_start":294,"line_end":294,"column_start":1,"column_end":48}},{"value":"/         (7.0, vec![\"Electrical\", \"Insulation\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105712,"byte_end":105764,"line_start":295,"line_end":295,"column_start":1,"column_end":53}},{"value":"/         (5.0, vec![\"Drywall\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105765,"byte_end":105800,"line_start":296,"line_end":296,"column_start":1,"column_end":36}},{"value":"/         (7.0, vec![\"Floors\", \"Countertops\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105801,"byte_end":105850,"line_start":297,"line_end":297,"column_start":1,"column_end":50}},{"value":"/         (4.0, vec![\"Bathrooms\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105851,"byte_end":105888,"line_start":298,"line_end":298,"column_start":1,"column_end":38}},{"value":"/     ]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105889,"byte_end":105898,"line_start":299,"line_end":299,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105899,"byte_end":105905,"line_start":300,"line_end":300,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105906,"byte_end":105909,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ // With two crews working in shifts, 16 hours a day:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105910,"byte_end":105966,"line_start":302,"line_end":302,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105967,"byte_end":105982,"line_start":303,"line_end":303,"column_start":1,"column_end":16}},{"value":"/     assign_days(&tasks, 16.0),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":105983,"byte_end":106017,"line_start":304,"line_end":304,"column_start":1,"column_end":35}},{"value":"/     [","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106018,"byte_end":106027,"line_start":305,"line_end":305,"column_start":1,"column_end":10}},{"value":"/         (14.0, vec![\"Foundation\", \"Framing\", \"Plumbing\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106028,"byte_end":106090,"line_start":306,"line_end":306,"column_start":1,"column_end":63}},{"value":"/         (15.0, vec![\"Electrical\", \"Insulation\", \"Drywall\", \"Floors\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106091,"byte_end":106165,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/         (6.0, vec![\"Countertops\", \"Bathrooms\"]),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106166,"byte_end":106218,"line_start":308,"line_end":308,"column_start":1,"column_end":53}},{"value":"/     ]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106219,"byte_end":106228,"line_start":309,"line_end":309,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106229,"byte_end":106235,"line_start":310,"line_end":310,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106236,"byte_end":106243,"line_start":311,"line_end":311,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106244,"byte_end":106247,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ Apologies to anyone who actually knows how to build a house and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106248,"byte_end":106315,"line_start":313,"line_end":313,"column_start":1,"column_end":68}},{"value":"/ knows how long each step takes :-)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":106316,"byte_end":106354,"line_start":314,"line_end":314,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"core","qualname":"::core","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":178},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":105},{"krate":0,"index":109}],"decl_id":null,"docs":" Building blocks for advanced wrapping functionality.","sig":null,"attributes":[{"value":"/ Building blocks for advanced wrapping functionality.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108215,"byte_end":108271,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108272,"byte_end":108275,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The functions and structs in this module can be used to implement","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108276,"byte_end":108345,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/ advanced wrapping functionality when the [`wrap`](super::wrap) and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108346,"byte_end":108416,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`fill`](super::fill) function don't do what you want.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108417,"byte_end":108475,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108476,"byte_end":108479,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ In general, you want to follow these steps when wrapping","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108480,"byte_end":108540,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ something:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108541,"byte_end":108555,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108556,"byte_end":108559,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ 1. Split your input into [`Fragment`]s. These are abstract blocks","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108560,"byte_end":108629,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/    of text or content which can be wrapped into lines. See","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108630,"byte_end":108692,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/    [`WordSeparator`](crate::word_separators::WordSeparator) for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108693,"byte_end":108760,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/    how to do this for text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108761,"byte_end":108792,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108793,"byte_end":108796,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ 2. Potentially split your fragments into smaller pieces. This","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108797,"byte_end":108862,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/    allows you to implement things like hyphenation. If you use the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108863,"byte_end":108933,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/    `Word` type, you can use [`WordSplitter`](crate::WordSplitter)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":108934,"byte_end":109003,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/    enum for this.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109004,"byte_end":109025,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109026,"byte_end":109029,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ 3. Potentially break apart fragments that are still too large to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109030,"byte_end":109098,"line_start":20,"line_end":20,"column_start":1,"column_end":69}},{"value":"/    fit on a single line. This is implemented in [`break_words`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109099,"byte_end":109167,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109168,"byte_end":109171,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ 4. Finally take your fragments and put them into lines. There are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109172,"byte_end":109241,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/    two algorithms for this in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109242,"byte_end":109279,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/    [`wrap_algorithms`](crate::wrap_algorithms) module:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109280,"byte_end":109338,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/    [`wrap_optimal_fit`](crate::wrap_algorithms::wrap_optimal_fit)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109339,"byte_end":109408,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/    and [`wrap_first_fit`](crate::wrap_algorithms::wrap_first_fit).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109409,"byte_end":109479,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/    The former produces better line breaks, the latter is faster.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109480,"byte_end":109548,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109549,"byte_end":109552,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ 5. Iterate through the slices returned by the wrapping functions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109553,"byte_end":109621,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/    and construct your lines of output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109622,"byte_end":109664,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109665,"byte_end":109668,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Please [open an issue](https://github.com/mgeisler/textwrap/) if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109669,"byte_end":109737,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ the functionality here is not sufficient or if you have ideas for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109738,"byte_end":109807,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/ improving it. We would love to hear from you!","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":109808,"byte_end":109857,"line_start":35,"line_end":35,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115343,"byte_end":115356,"line_start":175,"line_end":175,"column_start":8,"column_end":21},"name":"display_width","qualname":"::core::display_width","value":"pub fn display_width(&str) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute the display width of `text` while skipping over ANSI\n escape sequences.","sig":null,"attributes":[{"value":"/ Compute the display width of `text` while skipping over ANSI","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111406,"byte_end":111470,"line_start":83,"line_end":83,"column_start":1,"column_end":65}},{"value":"/ escape sequences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111471,"byte_end":111492,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111493,"byte_end":111496,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111497,"byte_end":111511,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111512,"byte_end":111515,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111516,"byte_end":111523,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111524,"byte_end":111562,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111563,"byte_end":111566,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"Café Plain\"), 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111567,"byte_end":111616,"line_start":91,"line_end":91,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(display_width(\"\\u{1b}[31mCafé Rouge\\u{1b}[0m\"), 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111617,"byte_end":111685,"line_start":92,"line_end":92,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111686,"byte_end":111693,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111694,"byte_end":111697,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ **Note:** When the `unicode-width` Cargo feature is disabled, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111698,"byte_end":111767,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ width of a `char` is determined by a crude approximation which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111768,"byte_end":111834,"line_start":96,"line_end":96,"column_start":1,"column_end":67}},{"value":"/ simply counts chars below U+1100 as 1 column wide, and all other","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111835,"byte_end":111903,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/ characters as 2 columns wide. With the feature enabled, function","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111904,"byte_end":111972,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/ will correctly deal with [combining characters] in their","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":111973,"byte_end":112033,"line_start":99,"line_end":99,"column_start":1,"column_end":61}},{"value":"/ decomposed form (see [Unicode equivalence]).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112034,"byte_end":112082,"line_start":100,"line_end":100,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112083,"byte_end":112086,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ An example of a decomposed character is “é”, which can be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112087,"byte_end":112153,"line_start":102,"line_end":102,"column_start":1,"column_end":62}},{"value":"/ decomposed into: “e” followed by a combining acute accent: “◌́”.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112154,"byte_end":112233,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ Without the `unicode-width` Cargo feature, every `char` below","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112234,"byte_end":112299,"line_start":104,"line_end":104,"column_start":1,"column_end":66}},{"value":"/ U+1100 has a width of 1. This includes the combining accent:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112300,"byte_end":112364,"line_start":105,"line_end":105,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112365,"byte_end":112368,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112369,"byte_end":112376,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112377,"byte_end":112415,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112416,"byte_end":112419,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"Cafe Plain\"), 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112420,"byte_end":112468,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"/ #[cfg(feature = \"unicode-width\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112469,"byte_end":112506,"line_start":111,"line_end":111,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(display_width(\"Cafe\\u{301} Plain\"), 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112507,"byte_end":112562,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/ #[cfg(not(feature = \"unicode-width\"))]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112563,"byte_end":112605,"line_start":113,"line_end":113,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(display_width(\"Cafe\\u{301} Plain\"), 11);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112606,"byte_end":112661,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112662,"byte_end":112669,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112670,"byte_end":112673,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ## Emojis and CJK Characters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112674,"byte_end":112706,"line_start":117,"line_end":117,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112707,"byte_end":112710,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ Characters such as emojis and [CJK characters] used in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112711,"byte_end":112773,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"/ Chinese, Japanese, and Korean langauges are seen as double-width,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112774,"byte_end":112843,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/ even if the `unicode-width` feature is disabled:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112844,"byte_end":112896,"line_start":121,"line_end":121,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112897,"byte_end":112900,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112901,"byte_end":112908,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112909,"byte_end":112947,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112948,"byte_end":112951,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(display_width(\"😂😭🥺🤣✨😍🙏🥰😊🔥\"), 20);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":112952,"byte_end":113029,"line_start":126,"line_end":126,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(display_width(\"你好\"), 4);  // “Nǐ hǎo” or “Hello” in Chinese","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113030,"byte_end":113118,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113119,"byte_end":113126,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113127,"byte_end":113130,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113131,"byte_end":113148,"line_start":130,"line_end":130,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113149,"byte_end":113152,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The displayed width of a string cannot always be computed from the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113153,"byte_end":113223,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/ string alone. This is because the width depends on the rendering","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113224,"byte_end":113292,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/ engine used. This is particularly visible with [emoji modifier","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113293,"byte_end":113359,"line_start":134,"line_end":134,"column_start":1,"column_end":67}},{"value":"/ sequences] where a base emoji is modified with, e.g., skin tone or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113360,"byte_end":113430,"line_start":135,"line_end":135,"column_start":1,"column_end":71}},{"value":"/ hair color modifiers. It is up to the rendering engine to detect","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113431,"byte_end":113499,"line_start":136,"line_end":136,"column_start":1,"column_end":69}},{"value":"/ this and to produce a suitable emoji.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113500,"byte_end":113541,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113542,"byte_end":113545,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ A simple example is “❤️”, which consists of “❤” (U+2764: Black","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113546,"byte_end":113626,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ Heart Symbol) followed by U+FE0F (Variation Selector-16). By","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113627,"byte_end":113691,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ itself, “❤” is a black heart, but if you follow it with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113692,"byte_end":113761,"line_start":141,"line_end":141,"column_start":1,"column_end":64}},{"value":"/ variant selector, you may get a wider red heart.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113762,"byte_end":113814,"line_start":142,"line_end":142,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113815,"byte_end":113818,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ A more complex example would be “👨‍🦰” which should depict a man","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113819,"byte_end":113898,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/ with red hair. Here the computed width is too large — and the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113899,"byte_end":113966,"line_start":145,"line_end":145,"column_start":1,"column_end":66}},{"value":"/ width differs depending on the use of the `unicode-width` feature:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":113967,"byte_end":114037,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114038,"byte_end":114041,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114042,"byte_end":114049,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ use textwrap::core::display_width;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114050,"byte_end":114088,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114089,"byte_end":114092,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"👨‍🦰\".chars().collect::<Vec<char>>(), ['\\u{1f468}', '\\u{200d}', '\\u{1f9b0}']);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114093,"byte_end":114194,"line_start":151,"line_end":151,"column_start":1,"column_end":94}},{"value":"/ #[cfg(feature = \"unicode-width\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114195,"byte_end":114232,"line_start":152,"line_end":152,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(display_width(\"👨‍🦰\"), 4);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114233,"byte_end":114281,"line_start":153,"line_end":153,"column_start":1,"column_end":41}},{"value":"/ #[cfg(not(feature = \"unicode-width\"))]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114282,"byte_end":114324,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(display_width(\"👨‍🦰\"), 6);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114325,"byte_end":114373,"line_start":155,"line_end":155,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114374,"byte_end":114381,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114382,"byte_end":114385,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ This happens because the grapheme consists of three code points:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114386,"byte_end":114454,"line_start":158,"line_end":158,"column_start":1,"column_end":69}},{"value":"/ “👨” (U+1F468: Man), Zero Width Joiner (U+200D), and “🦰”","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114455,"byte_end":114528,"line_start":159,"line_end":159,"column_start":1,"column_end":60}},{"value":"/ (U+1F9B0: Red Hair). You can see them above in the test. With","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114529,"byte_end":114594,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/ `unicode-width` enabled, the ZWJ is correctly seen as having zero","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114595,"byte_end":114664,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/ width, without it is counted as a double-width character.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114665,"byte_end":114726,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114727,"byte_end":114730,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Terminal Support","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114731,"byte_end":114754,"line_start":164,"line_end":164,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114755,"byte_end":114758,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Modern browsers typically do a great job at combining characters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114759,"byte_end":114827,"line_start":166,"line_end":166,"column_start":1,"column_end":69}},{"value":"/ as shown above, but terminals often struggle more. As an example,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114828,"byte_end":114897,"line_start":167,"line_end":167,"column_start":1,"column_end":70}},{"value":"/ Gnome Terminal version 3.38.1, shows “❤️” as a big red heart, but","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114898,"byte_end":114975,"line_start":168,"line_end":168,"column_start":1,"column_end":70}},{"value":"/ shows \"👨‍🦰\" as “👨🦰”.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":114976,"byte_end":115018,"line_start":169,"line_end":169,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115019,"byte_end":115022,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ [combining characters]: https://en.wikipedia.org/wiki/Combining_character","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115023,"byte_end":115100,"line_start":171,"line_end":171,"column_start":1,"column_end":78}},{"value":"/ [Unicode equivalence]: https://en.wikipedia.org/wiki/Unicode_equivalence","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115101,"byte_end":115177,"line_start":172,"line_end":172,"column_start":1,"column_end":77}},{"value":"/ [CJK characters]: https://en.wikipedia.org/wiki/CJK_characters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115178,"byte_end":115244,"line_start":173,"line_end":173,"column_start":1,"column_end":67}},{"value":"/ [emoji modifier sequences]: https://unicode.org/emoji/charts/full-emoji-modifiers.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115245,"byte_end":115335,"line_start":174,"line_end":174,"column_start":1,"column_end":91}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116158,"byte_end":116166,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Fragment","qualname":"::core::Fragment","value":"Fragment: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"decl_id":null,"docs":" A (text) fragment denotes the unit which we wrap into lines.","sig":null,"attributes":[{"value":"/ A (text) fragment denotes the unit which we wrap into lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115614,"byte_end":115678,"line_start":187,"line_end":187,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115679,"byte_end":115682,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ Fragments represent an abstract _word_ plus the _whitespace_","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115683,"byte_end":115747,"line_start":189,"line_end":189,"column_start":1,"column_end":65}},{"value":"/ following the word. In case the word falls at the end of the line,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115748,"byte_end":115818,"line_start":190,"line_end":190,"column_start":1,"column_end":71}},{"value":"/ the whitespace is dropped and a so-called _penalty_ is inserted","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115819,"byte_end":115886,"line_start":191,"line_end":191,"column_start":1,"column_end":68}},{"value":"/ instead (typically `\"-\"` if the word was hyphenated).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115887,"byte_end":115944,"line_start":192,"line_end":192,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115945,"byte_end":115948,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ For wrapping purposes, the precise content of the word, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":115949,"byte_end":116012,"line_start":194,"line_end":194,"column_start":1,"column_end":64}},{"value":"/ whitespace, and the penalty is irrelevant. All we need to know is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116013,"byte_end":116082,"line_start":195,"line_end":195,"column_start":1,"column_end":70}},{"value":"/ the displayed width of each part, which this trait provides.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116083,"byte_end":116147,"line_start":196,"line_end":196,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116255,"byte_end":116260,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"width","qualname":"::core::Fragment::width","value":"pub fn width(&Self) -> f64","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Displayed width of word represented by this fragment.\n","sig":null,"attributes":[{"value":"/ Displayed width of word represented by this fragment.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116190,"byte_end":116247,"line_start":198,"line_end":198,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116403,"byte_end":116419,"line_start":203,"line_end":203,"column_start":8,"column_end":24},"name":"whitespace_width","qualname":"::core::Fragment::whitespace_width","value":"pub fn whitespace_width(&Self) -> f64","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Displayed width of the whitespace that must follow the word\n when the word is not at the end of a line.\n","sig":null,"attributes":[{"value":"/ Displayed width of the whitespace that must follow the word","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116281,"byte_end":116344,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/ when the word is not at the end of a line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116349,"byte_end":116395,"line_start":202,"line_end":202,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116552,"byte_end":116565,"line_start":207,"line_end":207,"column_start":8,"column_end":21},"name":"penalty_width","qualname":"::core::Fragment::penalty_width","value":"pub fn penalty_width(&Self) -> f64","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Displayed width of the penalty that must be inserted if the\n word falls at the end of a line.\n","sig":null,"attributes":[{"value":"/ Displayed width of the penalty that must be inserted if the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116440,"byte_end":116503,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/ word falls at the end of a line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116508,"byte_end":116544,"line_start":206,"line_end":206,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116832,"byte_end":116836,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"Word","qualname":"::core::Word","value":"Word { word, whitespace, penalty }","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" A piece of wrappable text, including any trailing whitespace.","sig":null,"attributes":[{"value":"/ A piece of wrappable text, including any trailing whitespace.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116584,"byte_end":116649,"line_start":210,"line_end":210,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116650,"byte_end":116653,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ A `Word` is an example of a [`Fragment`], so it has a width,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116654,"byte_end":116718,"line_start":212,"line_end":212,"column_start":1,"column_end":65}},{"value":"/ trailing whitespace, and potentially a penalty item.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116719,"byte_end":116775,"line_start":213,"line_end":213,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":180},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116873,"byte_end":116877,"line_start":217,"line_end":217,"column_start":9,"column_end":13},"name":"word","qualname":"::core::Word::word","value":"&'a str","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Word content.\n","sig":null,"attributes":[{"value":"/ Word content.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116847,"byte_end":116864,"line_start":216,"line_end":216,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":181},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116973,"byte_end":116983,"line_start":219,"line_end":219,"column_start":9,"column_end":19},"name":"whitespace","qualname":"::core::Word::whitespace","value":"&'a str","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Whitespace to insert if the word does not fall at the end of a line.\n","sig":null,"attributes":[{"value":"/ Whitespace to insert if the word does not fall at the end of a line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116892,"byte_end":116964,"line_start":218,"line_end":218,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":182},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117075,"byte_end":117082,"line_start":221,"line_end":221,"column_start":9,"column_end":16},"name":"penalty","qualname":"::core::Word::penalty","value":"&'a str","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Penalty string to insert if the word falls at the end of a line.\n","sig":null,"attributes":[{"value":"/ Penalty string to insert if the word falls at the end of a line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116998,"byte_end":117066,"line_start":220,"line_end":220,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117470,"byte_end":117474,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"from","qualname":"<Word>::from","value":"pub fn from(&str) -> Word","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Word` from a string.","sig":null,"attributes":[{"value":"/ Construct a `Word` from a string.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117307,"byte_end":117344,"line_start":235,"line_end":235,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117349,"byte_end":117352,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ A trailing stretch of `' '` is automatically taken to be the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117357,"byte_end":117421,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/ whitespace part of the word.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117426,"byte_end":117458,"line_start":238,"line_end":238,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":118158,"byte_end":118169,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"break_apart","qualname":"<Word>::break_apart","value":"pub fn break_apart<'b>(&'b Self, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Break this word into smaller words with a width of at most\n `line_width`. The whitespace and penalty from this `Word` is\n added to the last piece.","sig":null,"attributes":[{"value":"/ Break this word into smaller words with a width of at most","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117730,"byte_end":117792,"line_start":249,"line_end":249,"column_start":5,"column_end":67}},{"value":"/ `line_width`. The whitespace and penalty from this `Word` is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117797,"byte_end":117861,"line_start":250,"line_end":250,"column_start":5,"column_end":69}},{"value":"/ added to the last piece.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117866,"byte_end":117894,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117899,"byte_end":117902,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117907,"byte_end":117921,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117926,"byte_end":117929,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117934,"byte_end":117941,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use textwrap::core::Word;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117946,"byte_end":117975,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117980,"byte_end":117995,"line_start":257,"line_end":257,"column_start":5,"column_end":20}},{"value":"/     Word::from(\"Hello!  \").break_apart(3).collect::<Vec<_>>(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":118000,"byte_end":118066,"line_start":258,"line_end":258,"column_start":5,"column_end":71}},{"value":"/     vec![Word::from(\"Hel\"), Word::from(\"lo!  \")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":118071,"byte_end":118123,"line_start":259,"line_end":259,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":118128,"byte_end":118134,"line_start":260,"line_end":260,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":118139,"byte_end":118146,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":120273,"byte_end":120284,"line_start":330,"line_end":330,"column_start":8,"column_end":19},"name":"break_words","qualname":"::core::break_words","value":"pub fn break_words<'a, I>(I, usize) -> Vec<Word> where I: IntoIterator<Item =\nWord>","parent":null,"children":[],"decl_id":null,"docs":" Forcibly break words wider than `line_width` into smaller words.","sig":null,"attributes":[{"value":"/ Forcibly break words wider than `line_width` into smaller words.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":120022,"byte_end":120090,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":120091,"byte_end":120094,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ This simply calls [`Word::break_apart`] on words that are too","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":120095,"byte_end":120160,"line_start":327,"line_end":327,"column_start":1,"column_end":66}},{"value":"/ wide. This means that no extra `'-'` is inserted, the word is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":120161,"byte_end":120226,"line_start":328,"line_end":328,"column_start":1,"column_end":66}},{"value":"/ simply broken into smaller pieces.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":120227,"byte_end":120265,"line_start":329,"line_end":329,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":203},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7963,"byte_end":7970,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"Options","qualname":"::Options","value":"Options { width, initial_indent, subsequent_indent, break_words, wrap_algorithm, word_separator, word_splitter }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" Holds configuration options for wrapping and filling text.\n","sig":null,"attributes":[{"value":"/ Holds configuration options for wrapping and filling text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7865,"byte_end":7927,"line_start":233,"line_end":233,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":205},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8049,"byte_end":8054,"line_start":237,"line_end":237,"column_start":9,"column_end":14},"name":"width","qualname":"::Options::width","value":"usize","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" The width in columns at which the text will be wrapped.\n","sig":null,"attributes":[{"value":"/ The width in columns at which the text will be wrapped.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7981,"byte_end":8040,"line_start":236,"line_end":236,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":206},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8178,"byte_end":8192,"line_start":240,"line_end":240,"column_start":9,"column_end":23},"name":"initial_indent","qualname":"::Options::initial_indent","value":"&'a str","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" Indentation used for the first line of output. See the\n [`Options::initial_indent`] method.\n","sig":null,"attributes":[{"value":"/ Indentation used for the first line of output. See the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8067,"byte_end":8125,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/ [`Options::initial_indent`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8130,"byte_end":8169,"line_start":239,"line_end":239,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":207},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8323,"byte_end":8340,"line_start":243,"line_end":243,"column_start":9,"column_end":26},"name":"subsequent_indent","qualname":"::Options::subsequent_indent","value":"&'a str","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" Indentation used for subsequent lines of output. See the\n [`Options::subsequent_indent`] method.\n","sig":null,"attributes":[{"value":"/ Indentation used for subsequent lines of output. See the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8207,"byte_end":8267,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/ [`Options::subsequent_indent`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8272,"byte_end":8314,"line_start":242,"line_end":242,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":208},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8549,"byte_end":8560,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"name":"break_words","qualname":"::Options::break_words","value":"bool","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" Allow long words to be broken if they cannot fit on a line.\n When set to `false`, some lines may be longer than\n `self.width`. See the [`Options::break_words`] method.\n","sig":null,"attributes":[{"value":"/ Allow long words to be broken if they cannot fit on a line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8355,"byte_end":8418,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ When set to `false`, some lines may be longer than","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8423,"byte_end":8477,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/ `self.width`. See the [`Options::break_words`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8482,"byte_end":8540,"line_start":246,"line_end":246,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":209},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8704,"byte_end":8718,"line_start":250,"line_end":250,"column_start":9,"column_end":23},"name":"wrap_algorithm","qualname":"::Options::wrap_algorithm","value":"wrap_algorithms::WrapAlgorithm","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" Wrapping algorithm to use, see the implementations of the\n [`wrap_algorithms::WrapAlgorithm`] trait for details.\n","sig":null,"attributes":[{"value":"/ Wrapping algorithm to use, see the implementations of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8572,"byte_end":8633,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ [`wrap_algorithms::WrapAlgorithm`] trait for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8638,"byte_end":8695,"line_start":249,"line_end":249,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":210},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8894,"byte_end":8908,"line_start":254,"line_end":254,"column_start":9,"column_end":23},"name":"word_separator","qualname":"::Options::word_separator","value":"word_separators::WordSeparator","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" The line breaking algorithm to use, see\n [`word_separators::WordSeparator`] trait for an overview and\n possible implementations.\n","sig":null,"attributes":[{"value":"/ The line breaking algorithm to use, see","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8739,"byte_end":8782,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"/ [`word_separators::WordSeparator`] trait for an overview and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8787,"byte_end":8851,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/ possible implementations.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8856,"byte_end":8885,"line_start":253,"line_end":253,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":211},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9113,"byte_end":9126,"line_start":258,"line_end":258,"column_start":9,"column_end":22},"name":"word_splitter","qualname":"::Options::word_splitter","value":"word_splitters::WordSplitter","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" The method for splitting words. This can be used to prohibit\n splitting words on hyphens, or it can be used to implement\n language-aware machine hyphenation.\n","sig":null,"attributes":[{"value":"/ The method for splitting words. This can be used to prohibit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8929,"byte_end":8993,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/ splitting words on hyphens, or it can be used to implement","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":8998,"byte_end":9060,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ language-aware machine hyphenation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9065,"byte_end":9104,"line_start":257,"line_end":257,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":11221,"byte_end":11224,"line_start":315,"line_end":315,"column_start":18,"column_end":21},"name":"new","qualname":"<Options>::new","value":"pub const fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Options`] with the specified width. Equivalent to","sig":null,"attributes":[{"value":"/ Creates a new [`Options`] with the specified width. Equivalent to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9767,"byte_end":9836,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9841,"byte_end":9844,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9849,"byte_end":9856,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ # use textwrap::{Options, WordSplitter, WordSeparator, WrapAlgorithm};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9861,"byte_end":9935,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ # let width = 80;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9940,"byte_end":9961,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/ # let actual = Options::new(width);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9966,"byte_end":10005,"line_start":287,"line_end":287,"column_start":5,"column_end":44}},{"value":"/ # let expected =","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10010,"byte_end":10030,"line_start":288,"line_end":288,"column_start":5,"column_end":25}},{"value":"/ Options {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10035,"byte_end":10048,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/     width: width,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10053,"byte_end":10074,"line_start":290,"line_end":290,"column_start":5,"column_end":26}},{"value":"/     initial_indent: \"\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10079,"byte_end":10106,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10111,"byte_end":10141,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/     break_words: true,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10146,"byte_end":10172,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/     #[cfg(feature = \"unicode-linebreak\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10177,"byte_end":10222,"line_start":294,"line_end":294,"column_start":5,"column_end":50}},{"value":"/     word_separator: WordSeparator::UnicodeBreakProperties,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10227,"byte_end":10289,"line_start":295,"line_end":295,"column_start":5,"column_end":67}},{"value":"/     #[cfg(not(feature = \"unicode-linebreak\"))]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10294,"byte_end":10344,"line_start":296,"line_end":296,"column_start":5,"column_end":55}},{"value":"/     word_separator: WordSeparator::AsciiSpace,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10349,"byte_end":10399,"line_start":297,"line_end":297,"column_start":5,"column_end":55}},{"value":"/     #[cfg(feature = \"smawk\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10404,"byte_end":10437,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/     wrap_algorithm: WrapAlgorithm::new_optimal_fit(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10442,"byte_end":10499,"line_start":299,"line_end":299,"column_start":5,"column_end":62}},{"value":"/     #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10504,"byte_end":10542,"line_start":300,"line_end":300,"column_start":5,"column_end":43}},{"value":"/     wrap_algorithm: WrapAlgorithm::FirstFit,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10547,"byte_end":10595,"line_start":301,"line_end":301,"column_start":5,"column_end":53}},{"value":"/     word_splitter: WordSplitter::HyphenSplitter,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10600,"byte_end":10652,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10657,"byte_end":10662,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10667,"byte_end":10674,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ # assert_eq!(actual.width, expected.width);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10679,"byte_end":10726,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/ # assert_eq!(actual.initial_indent, expected.initial_indent);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10731,"byte_end":10796,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/ # assert_eq!(actual.subsequent_indent, expected.subsequent_indent);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10801,"byte_end":10872,"line_start":307,"line_end":307,"column_start":5,"column_end":76}},{"value":"/ # assert_eq!(actual.break_words, expected.break_words);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10877,"byte_end":10936,"line_start":308,"line_end":308,"column_start":5,"column_end":64}},{"value":"/ # assert_eq!(actual.word_splitter, expected.word_splitter);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":10941,"byte_end":11004,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":11009,"byte_end":11016,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":11021,"byte_end":11024,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Note that the default word separator and wrap algorithms","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":11029,"byte_end":11089,"line_start":312,"line_end":312,"column_start":5,"column_end":65}},{"value":"/ changes based on the available Cargo features. The best","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":11094,"byte_end":11153,"line_start":313,"line_end":313,"column_start":5,"column_end":64}},{"value":"/ available algorithms are used by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":11158,"byte_end":11203,"line_start":314,"line_end":314,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12966,"byte_end":12980,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"initial_indent","qualname":"<Options>::initial_indent","value":"pub fn initial_indent(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.initial_indent`]. The initial indentation is\n used on the very first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.initial_indent`]. The initial indentation is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12312,"byte_end":12374,"line_start":351,"line_end":351,"column_start":5,"column_end":67}},{"value":"/ used on the very first line of output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12379,"byte_end":12421,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12426,"byte_end":12429,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12434,"byte_end":12448,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12453,"byte_end":12456,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Classic paragraph indentation can be achieved by specifying an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12461,"byte_end":12527,"line_start":356,"line_end":356,"column_start":5,"column_end":71}},{"value":"/ initial indentation and wrapping each paragraph by itself:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12532,"byte_end":12594,"line_start":357,"line_end":357,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12599,"byte_end":12602,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12607,"byte_end":12614,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12619,"byte_end":12653,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12658,"byte_end":12661,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(16).initial_indent(\"    \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12666,"byte_end":12724,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12729,"byte_end":12787,"line_start":363,"line_end":363,"column_start":5,"column_end":63}},{"value":"/            vec![\"    This is a\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12792,"byte_end":12828,"line_start":364,"line_end":364,"column_start":5,"column_end":41}},{"value":"/                 \"little example.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12833,"byte_end":12873,"line_start":365,"line_end":365,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12878,"byte_end":12885,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12890,"byte_end":12893,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [`self.initial_indent`]: #structfield.initial_indent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12898,"byte_end":12954,"line_start":368,"line_end":368,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14173,"byte_end":14190,"line_start":405,"line_end":405,"column_start":12,"column_end":29},"name":"subsequent_indent","qualname":"<Options>::subsequent_indent","value":"pub fn subsequent_indent(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.subsequent_indent`]. The subsequent indentation\n is used on lines following the first line of output.","sig":null,"attributes":[{"value":"/ Change [`self.subsequent_indent`]. The subsequent indentation","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13108,"byte_end":13173,"line_start":376,"line_end":376,"column_start":5,"column_end":70}},{"value":"/ is used on lines following the first line of output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13178,"byte_end":13234,"line_start":377,"line_end":377,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13239,"byte_end":13242,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13247,"byte_end":13261,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13266,"byte_end":13269,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Combining initial and subsequent indentation lets you format a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13274,"byte_end":13340,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/ single paragraph as a bullet list:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13345,"byte_end":13383,"line_start":382,"line_end":382,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13388,"byte_end":13391,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13396,"byte_end":13403,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13408,"byte_end":13442,"line_start":385,"line_end":385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13447,"byte_end":13450,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(12)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13455,"byte_end":13489,"line_start":387,"line_end":387,"column_start":5,"column_end":39}},{"value":"/     .initial_indent(\"* \")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13494,"byte_end":13523,"line_start":388,"line_end":388,"column_start":5,"column_end":34}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13528,"byte_end":13561,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13566,"byte_end":13595,"line_start":390,"line_end":390,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13600,"byte_end":13658,"line_start":391,"line_end":391,"column_start":5,"column_end":63}},{"value":"/            vec![\"* This is\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13663,"byte_end":13695,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/                 \"  a little\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13700,"byte_end":13733,"line_start":393,"line_end":393,"column_start":5,"column_end":38}},{"value":"/                 \"  example.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13738,"byte_end":13773,"line_start":394,"line_end":394,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13778,"byte_end":13781,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ // Without the `smawk` feature, the wrapping is a little different:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13786,"byte_end":13857,"line_start":396,"line_end":396,"column_start":5,"column_end":76}},{"value":"/ #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13862,"byte_end":13896,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13901,"byte_end":13959,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/            vec![\"* This is a\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":13964,"byte_end":13998,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/                 \"  little\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14003,"byte_end":14034,"line_start":400,"line_end":400,"column_start":5,"column_end":36}},{"value":"/                 \"  example.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14039,"byte_end":14074,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14079,"byte_end":14086,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14091,"byte_end":14094,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [`self.subsequent_indent`]: #structfield.subsequent_indent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14099,"byte_end":14161,"line_start":404,"line_end":404,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14985,"byte_end":14996,"line_start":432,"line_end":432,"column_start":12,"column_end":23},"name":"break_words","qualname":"<Options>::break_words","value":"pub fn break_words(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.break_words`]. This controls if words longer\n than `self.width` can be broken, or if they will be left\n sticking out into the right margin.","sig":null,"attributes":[{"value":"/ Change [`self.break_words`]. This controls if words longer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14321,"byte_end":14383,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/ than `self.width` can be broken, or if they will be left","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14388,"byte_end":14448,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/ sticking out into the right margin.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14453,"byte_end":14492,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14497,"byte_end":14500,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14505,"byte_end":14519,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14524,"byte_end":14527,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14532,"byte_end":14539,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14544,"byte_end":14578,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14583,"byte_end":14586,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let options = Options::new(4).break_words(true);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14591,"byte_end":14643,"line_start":421,"line_end":421,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(wrap(\"This is a little example.\", options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14648,"byte_end":14706,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/            vec![\"This\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14711,"byte_end":14738,"line_start":423,"line_end":423,"column_start":5,"column_end":32}},{"value":"/                 \"is a\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14743,"byte_end":14770,"line_start":424,"line_end":424,"column_start":5,"column_end":32}},{"value":"/                 \"litt\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14775,"byte_end":14802,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/                 \"le\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14807,"byte_end":14832,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/                 \"exam\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14837,"byte_end":14864,"line_start":427,"line_end":427,"column_start":5,"column_end":32}},{"value":"/                 \"ple.\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14869,"byte_end":14898,"line_start":428,"line_end":428,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14903,"byte_end":14910,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14915,"byte_end":14918,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`self.break_words`]: #structfield.break_words","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":14923,"byte_end":14973,"line_start":431,"line_end":431,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15319,"byte_end":15333,"line_start":444,"line_end":444,"column_start":12,"column_end":26},"name":"word_separator","qualname":"<Options>::word_separator","value":"pub fn word_separator(Self, WordSeparator) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.word_separator`].","sig":null,"attributes":[{"value":"/ Change [`self.word_separator`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15120,"byte_end":15155,"line_start":439,"line_end":439,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15160,"byte_end":15163,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ See [`word_separators::WordSeparator`] for details on the choices.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15168,"byte_end":15238,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15243,"byte_end":15246,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`self.word_separator`]: #structfield.word_separator","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15251,"byte_end":15307,"line_start":443,"line_end":443,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15962,"byte_end":15976,"line_start":462,"line_end":462,"column_start":12,"column_end":26},"name":"wrap_algorithm","qualname":"<Options>::wrap_algorithm","value":"pub fn wrap_algorithm(Self, WrapAlgorithm) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.wrap_algorithm`].","sig":null,"attributes":[{"value":"/ Change [`self.wrap_algorithm`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15745,"byte_end":15780,"line_start":456,"line_end":456,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15785,"byte_end":15788,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ See the [`wrap_algorithms::WrapAlgorithm`] trait for details on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15793,"byte_end":15860,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/ the choices.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15865,"byte_end":15881,"line_start":459,"line_end":459,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15886,"byte_end":15889,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ [`self.wrap_algorithm`]: #structfield.wrap_algorithm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":15894,"byte_end":15950,"line_start":461,"line_end":461,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16971,"byte_end":16984,"line_start":489,"line_end":489,"column_start":12,"column_end":25},"name":"word_splitter","qualname":"<Options>::word_splitter","value":"pub fn word_splitter(Self, WordSplitter) -> Options","parent":null,"children":[],"decl_id":null,"docs":" Change [`self.word_splitter`]. The\n [`word_splitters::WordSplitter`] is used to fit part of a word\n into the current line when wrapping text.","sig":null,"attributes":[{"value":"/ Change [`self.word_splitter`]. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16388,"byte_end":16426,"line_start":474,"line_end":474,"column_start":5,"column_end":43}},{"value":"/ [`word_splitters::WordSplitter`] is used to fit part of a word","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16431,"byte_end":16497,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/ into the current line when wrapping text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16502,"byte_end":16547,"line_start":476,"line_end":476,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16552,"byte_end":16555,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16560,"byte_end":16574,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16579,"byte_end":16582,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16587,"byte_end":16594,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use textwrap::{Options, WordSplitter};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16599,"byte_end":16641,"line_start":481,"line_end":481,"column_start":5,"column_end":47}},{"value":"/ let opt = Options::new(80);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16646,"byte_end":16677,"line_start":482,"line_end":482,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(opt.word_splitter, WordSplitter::HyphenSplitter);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16682,"byte_end":16746,"line_start":483,"line_end":483,"column_start":5,"column_end":69}},{"value":"/ let opt = opt.word_splitter(WordSplitter::NoHyphenation);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16751,"byte_end":16812,"line_start":484,"line_end":484,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(opt.word_splitter, WordSplitter::NoHyphenation);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16817,"byte_end":16880,"line_start":485,"line_end":485,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16885,"byte_end":16892,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16897,"byte_end":16900,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`self.word_splitter`]: #structfield.word_splitter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":16905,"byte_end":16959,"line_start":488,"line_end":488,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19121,"byte_end":19125,"line_start":561,"line_end":561,"column_start":8,"column_end":12},"name":"fill","qualname":"::fill","value":"pub fn fill<'a, Opt>(&str, Opt) -> String where Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Fill a line of text at a given width.","sig":null,"attributes":[{"value":"/ Fill a line of text at a given width.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18218,"byte_end":18259,"line_start":529,"line_end":529,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18260,"byte_end":18263,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ The result is a [`String`], complete with newlines between each","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18264,"byte_end":18331,"line_start":531,"line_end":531,"column_start":1,"column_end":68}},{"value":"/ line. Use the [`wrap`] function if you need access to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18332,"byte_end":18393,"line_start":532,"line_end":532,"column_start":1,"column_end":62}},{"value":"/ individual lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18394,"byte_end":18415,"line_start":533,"line_end":533,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18416,"byte_end":18419,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use this function is to pass an integer for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18420,"byte_end":18486,"line_start":535,"line_end":535,"column_start":1,"column_end":67}},{"value":"/ `width_or_options`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18487,"byte_end":18510,"line_start":536,"line_end":536,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18511,"byte_end":18514,"line_start":537,"line_end":537,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18515,"byte_end":18522,"line_start":538,"line_end":538,"column_start":1,"column_end":8}},{"value":"/ use textwrap::fill;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18523,"byte_end":18546,"line_start":539,"line_end":539,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18547,"byte_end":18550,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18551,"byte_end":18566,"line_start":541,"line_end":541,"column_start":1,"column_end":16}},{"value":"/     fill(\"Memory safety without garbage collection.\", 15),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18567,"byte_end":18629,"line_start":542,"line_end":542,"column_start":1,"column_end":63}},{"value":"/     \"Memory safety\\nwithout garbage\\ncollection.\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18630,"byte_end":18683,"line_start":543,"line_end":543,"column_start":1,"column_end":54}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18684,"byte_end":18690,"line_start":544,"line_end":544,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18691,"byte_end":18698,"line_start":545,"line_end":545,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18699,"byte_end":18702,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ If you need to customize the wrapping, you can pass an [`Options`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18703,"byte_end":18773,"line_start":547,"line_end":547,"column_start":1,"column_end":71}},{"value":"/ instead of an `usize`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18774,"byte_end":18800,"line_start":548,"line_end":548,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18801,"byte_end":18804,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18805,"byte_end":18812,"line_start":550,"line_end":550,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{fill, Options};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18813,"byte_end":18847,"line_start":551,"line_end":551,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18848,"byte_end":18851,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18852,"byte_end":18886,"line_start":553,"line_end":553,"column_start":1,"column_end":35}},{"value":"/     .initial_indent(\"- \")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18887,"byte_end":18916,"line_start":554,"line_end":554,"column_start":1,"column_end":30}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18917,"byte_end":18950,"line_start":555,"line_end":555,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18951,"byte_end":18966,"line_start":556,"line_end":556,"column_start":1,"column_end":16}},{"value":"/     fill(\"Memory safety without garbage collection.\", &options),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":18967,"byte_end":19035,"line_start":557,"line_end":557,"column_start":1,"column_end":69}},{"value":"/     \"- Memory safety\\n  without\\n  garbage\\n  collection.\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19036,"byte_end":19098,"line_start":558,"line_end":558,"column_start":1,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19099,"byte_end":19105,"line_start":559,"line_end":559,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19106,"byte_end":19113,"line_start":560,"line_end":560,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20876,"byte_end":20882,"line_start":625,"line_end":625,"column_start":8,"column_end":14},"name":"unfill","qualname":"::unfill","value":"pub fn unfill(&str) -> (String, Options)","parent":null,"children":[],"decl_id":null,"docs":" Unpack a paragraph of already-wrapped text.","sig":null,"attributes":[{"value":"/ Unpack a paragraph of already-wrapped text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19549,"byte_end":19596,"line_start":579,"line_end":579,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19597,"byte_end":19600,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ This function attempts to recover the original text from a single","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19601,"byte_end":19670,"line_start":581,"line_end":581,"column_start":1,"column_end":70}},{"value":"/ paragraph of text produced by the [`fill`] function. This means","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19671,"byte_end":19738,"line_start":582,"line_end":582,"column_start":1,"column_end":68}},{"value":"/ that it turns","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19739,"byte_end":19756,"line_start":583,"line_end":583,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19757,"byte_end":19760,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19761,"byte_end":19772,"line_start":585,"line_end":585,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19773,"byte_end":19794,"line_start":586,"line_end":586,"column_start":1,"column_end":22}},{"value":"/ library for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19795,"byte_end":19810,"line_start":587,"line_end":587,"column_start":1,"column_end":16}},{"value":"/ wrapping text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19811,"byte_end":19829,"line_start":588,"line_end":588,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19830,"byte_end":19837,"line_start":589,"line_end":589,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19838,"byte_end":19841,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ back into","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19842,"byte_end":19855,"line_start":591,"line_end":591,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19856,"byte_end":19859,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19860,"byte_end":19871,"line_start":593,"line_end":593,"column_start":1,"column_end":12}},{"value":"/ textwrap: a small library for wrapping text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19872,"byte_end":19920,"line_start":594,"line_end":594,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19921,"byte_end":19928,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19929,"byte_end":19932,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ In addition, it will recognize a common prefix among the lines.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":19933,"byte_end":20000,"line_start":597,"line_end":597,"column_start":1,"column_end":68}},{"value":"/ The prefix of the first line is returned in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20001,"byte_end":20048,"line_start":598,"line_end":598,"column_start":1,"column_end":48}},{"value":"/ [`Options::initial_indent`] and the prefix (if any) of the the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20049,"byte_end":20115,"line_start":599,"line_end":599,"column_start":1,"column_end":67}},{"value":"/ other lines is returned in [`Options::subsequent_indent`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20116,"byte_end":20178,"line_start":600,"line_end":600,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20179,"byte_end":20182,"line_start":601,"line_end":601,"column_start":1,"column_end":4}},{"value":"/ In addition to `' '`, the prefixes can consist of characters used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20183,"byte_end":20252,"line_start":602,"line_end":602,"column_start":1,"column_end":70}},{"value":"/ for unordered lists (`'-'`, `'+'`, and `'*'`) and block quotes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20253,"byte_end":20319,"line_start":603,"line_end":603,"column_start":1,"column_end":67}},{"value":"/ (`'>'`) in Markdown as well as characters often used for inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20320,"byte_end":20387,"line_start":604,"line_end":604,"column_start":1,"column_end":68}},{"value":"/ comments (`'#'` and `'/'`).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20388,"byte_end":20419,"line_start":605,"line_end":605,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20420,"byte_end":20423,"line_start":606,"line_end":606,"column_start":1,"column_end":4}},{"value":"/ The text must come from a single wrapped paragraph. This means","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20424,"byte_end":20490,"line_start":607,"line_end":607,"column_start":1,"column_end":67}},{"value":"/ that there can be no `\"\\n\\n\"` within the text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20491,"byte_end":20541,"line_start":608,"line_end":608,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20542,"byte_end":20545,"line_start":609,"line_end":609,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20546,"byte_end":20560,"line_start":610,"line_end":610,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20561,"byte_end":20564,"line_start":611,"line_end":611,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20565,"byte_end":20572,"line_start":612,"line_end":612,"column_start":1,"column_end":8}},{"value":"/ use textwrap::unfill;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20573,"byte_end":20598,"line_start":613,"line_end":613,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20599,"byte_end":20602,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ let (text, options) = unfill(\"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20603,"byte_end":20638,"line_start":615,"line_end":615,"column_start":1,"column_end":36}},{"value":"/ * This is an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20639,"byte_end":20655,"line_start":616,"line_end":616,"column_start":1,"column_end":17}},{"value":"/   example of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20656,"byte_end":20672,"line_start":617,"line_end":617,"column_start":1,"column_end":17}},{"value":"/   a list item.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20673,"byte_end":20691,"line_start":618,"line_end":618,"column_start":1,"column_end":19}},{"value":"/ \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20692,"byte_end":20699,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20700,"byte_end":20703,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(text, \"This is an example of a list item.\\n\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20704,"byte_end":20765,"line_start":621,"line_end":621,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(options.initial_indent, \"* \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20766,"byte_end":20811,"line_start":622,"line_end":622,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(options.subsequent_indent, \"  \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20812,"byte_end":20860,"line_start":623,"line_end":623,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":20861,"byte_end":20868,"line_start":624,"line_end":624,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23573,"byte_end":23579,"line_start":720,"line_end":720,"column_start":8,"column_end":14},"name":"refill","qualname":"::refill","value":"pub fn refill<'a, Opt>(&str, Opt) -> String where Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Refill a paragraph of wrapped text with a new width.","sig":null,"attributes":[{"value":"/ Refill a paragraph of wrapped text with a new width.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22334,"byte_end":22390,"line_start":666,"line_end":666,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22391,"byte_end":22394,"line_start":667,"line_end":667,"column_start":1,"column_end":4}},{"value":"/ This function will first use the [`unfill`] function to remove","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22395,"byte_end":22461,"line_start":668,"line_end":668,"column_start":1,"column_end":67}},{"value":"/ newlines from the text. Afterwards the text is filled again using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22462,"byte_end":22531,"line_start":669,"line_end":669,"column_start":1,"column_end":70}},{"value":"/ the [`fill`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22532,"byte_end":22558,"line_start":670,"line_end":670,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22559,"byte_end":22562,"line_start":671,"line_end":671,"column_start":1,"column_end":4}},{"value":"/ The `new_width_or_options` argument specify the new width and can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22563,"byte_end":22632,"line_start":672,"line_end":672,"column_start":1,"column_end":70}},{"value":"/ specify other options as well — except for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22633,"byte_end":22681,"line_start":673,"line_end":673,"column_start":1,"column_end":47}},{"value":"/ [`Options::initial_indent`] and [`Options::subsequent_indent`],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22682,"byte_end":22749,"line_start":674,"line_end":674,"column_start":1,"column_end":68}},{"value":"/ which are deduced from `filled_text`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22750,"byte_end":22791,"line_start":675,"line_end":675,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22792,"byte_end":22795,"line_start":676,"line_end":676,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22796,"byte_end":22810,"line_start":677,"line_end":677,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22811,"byte_end":22814,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22815,"byte_end":22822,"line_start":679,"line_end":679,"column_start":1,"column_end":8}},{"value":"/ use textwrap::refill;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22823,"byte_end":22848,"line_start":680,"line_end":680,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22849,"byte_end":22852,"line_start":681,"line_end":681,"column_start":1,"column_end":4}},{"value":"/ // Some loosely wrapped text. The \"> \" prefix is recognized automatically.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22853,"byte_end":22931,"line_start":682,"line_end":682,"column_start":1,"column_end":79}},{"value":"/ let text = \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22932,"byte_end":22949,"line_start":683,"line_end":683,"column_start":1,"column_end":18}},{"value":"/ > Memory","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22950,"byte_end":22962,"line_start":684,"line_end":684,"column_start":1,"column_end":13}},{"value":"/ > safety without garbage","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22963,"byte_end":22991,"line_start":685,"line_end":685,"column_start":1,"column_end":29}},{"value":"/ > collection.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":22992,"byte_end":23009,"line_start":686,"line_end":686,"column_start":1,"column_end":18}},{"value":"/ \";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23010,"byte_end":23016,"line_start":687,"line_end":687,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23017,"byte_end":23020,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 20), \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23021,"byte_end":23056,"line_start":689,"line_end":689,"column_start":1,"column_end":36}},{"value":"/ > Memory safety","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23057,"byte_end":23076,"line_start":690,"line_end":690,"column_start":1,"column_end":20}},{"value":"/ > without garbage","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23077,"byte_end":23098,"line_start":691,"line_end":691,"column_start":1,"column_end":22}},{"value":"/ > collection.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23099,"byte_end":23116,"line_start":692,"line_end":692,"column_start":1,"column_end":18}},{"value":"/ \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23117,"byte_end":23124,"line_start":693,"line_end":693,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23125,"byte_end":23128,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 40), \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23129,"byte_end":23164,"line_start":695,"line_end":695,"column_start":1,"column_end":36}},{"value":"/ > Memory safety without garbage","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23165,"byte_end":23200,"line_start":696,"line_end":696,"column_start":1,"column_end":36}},{"value":"/ > collection.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23201,"byte_end":23218,"line_start":697,"line_end":697,"column_start":1,"column_end":18}},{"value":"/ \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23219,"byte_end":23226,"line_start":698,"line_end":698,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23227,"byte_end":23230,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 60), \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23231,"byte_end":23266,"line_start":700,"line_end":700,"column_start":1,"column_end":36}},{"value":"/ > Memory safety without garbage collection.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23267,"byte_end":23314,"line_start":701,"line_end":701,"column_start":1,"column_end":48}},{"value":"/ \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23315,"byte_end":23322,"line_start":702,"line_end":702,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23323,"byte_end":23330,"line_start":703,"line_end":703,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23331,"byte_end":23334,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ You can also reshape bullet points:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23335,"byte_end":23374,"line_start":705,"line_end":705,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23375,"byte_end":23378,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23379,"byte_end":23386,"line_start":707,"line_end":707,"column_start":1,"column_end":8}},{"value":"/ use textwrap::refill;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23387,"byte_end":23412,"line_start":708,"line_end":708,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23413,"byte_end":23416,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ let text = \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23417,"byte_end":23434,"line_start":710,"line_end":710,"column_start":1,"column_end":18}},{"value":"/ - This is my","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23435,"byte_end":23451,"line_start":711,"line_end":711,"column_start":1,"column_end":17}},{"value":"/   list item.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23452,"byte_end":23468,"line_start":712,"line_end":712,"column_start":1,"column_end":17}},{"value":"/ \";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23469,"byte_end":23475,"line_start":713,"line_end":713,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23476,"byte_end":23479,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(refill(text, 20), \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23480,"byte_end":23515,"line_start":715,"line_end":715,"column_start":1,"column_end":36}},{"value":"/ - This is my list","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23516,"byte_end":23537,"line_start":716,"line_end":716,"column_start":1,"column_end":22}},{"value":"/   item.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23538,"byte_end":23549,"line_start":717,"line_end":717,"column_start":1,"column_end":12}},{"value":"/ \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23550,"byte_end":23557,"line_start":718,"line_end":718,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":23558,"byte_end":23565,"line_start":719,"line_end":719,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":137},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29524,"byte_end":29528,"line_start":904,"line_end":904,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap<'a, Opt>(&str, Opt) -> Vec<Cow<, str>> where Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a line of text at a given width.","sig":null,"attributes":[{"value":"/ Wrap a line of text at a given width.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24072,"byte_end":24113,"line_start":734,"line_end":734,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24114,"byte_end":24117,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ The result is a vector of lines, each line is of type [`Cow<'_,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24118,"byte_end":24185,"line_start":736,"line_end":736,"column_start":1,"column_end":68}},{"value":"/ str>`](Cow), which means that the line will borrow from the input","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24186,"byte_end":24255,"line_start":737,"line_end":737,"column_start":1,"column_end":70}},{"value":"/ `&str` if possible. The lines do not have trailing whitespace,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24256,"byte_end":24322,"line_start":738,"line_end":738,"column_start":1,"column_end":67}},{"value":"/ including a final `'\\n'`. Please use the [`fill`] function if you","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24323,"byte_end":24392,"line_start":739,"line_end":739,"column_start":1,"column_end":70}},{"value":"/ need a [`String`] instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24393,"byte_end":24423,"line_start":740,"line_end":740,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24424,"byte_end":24427,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use this function is to pass an integer for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24428,"byte_end":24494,"line_start":742,"line_end":742,"column_start":1,"column_end":67}},{"value":"/ `width_or_options`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24495,"byte_end":24518,"line_start":743,"line_end":743,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24519,"byte_end":24522,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24523,"byte_end":24530,"line_start":745,"line_end":745,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24531,"byte_end":24554,"line_start":746,"line_end":746,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24555,"byte_end":24558,"line_start":747,"line_end":747,"column_start":1,"column_end":4}},{"value":"/ let lines = wrap(\"Memory safety without garbage collection.\", 15);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24559,"byte_end":24629,"line_start":748,"line_end":748,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(lines, &[","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24630,"byte_end":24654,"line_start":749,"line_end":749,"column_start":1,"column_end":25}},{"value":"/     \"Memory safety\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24655,"byte_end":24679,"line_start":750,"line_end":750,"column_start":1,"column_end":25}},{"value":"/     \"without garbage\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24680,"byte_end":24706,"line_start":751,"line_end":751,"column_start":1,"column_end":27}},{"value":"/     \"collection.\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24707,"byte_end":24729,"line_start":752,"line_end":752,"column_start":1,"column_end":23}},{"value":"/ ]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24730,"byte_end":24737,"line_start":753,"line_end":753,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24738,"byte_end":24745,"line_start":754,"line_end":754,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24746,"byte_end":24749,"line_start":755,"line_end":755,"column_start":1,"column_end":4}},{"value":"/ If you need to customize the wrapping, you can pass an [`Options`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24750,"byte_end":24820,"line_start":756,"line_end":756,"column_start":1,"column_end":71}},{"value":"/ instead of an `usize`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24821,"byte_end":24847,"line_start":757,"line_end":757,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24848,"byte_end":24851,"line_start":758,"line_end":758,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24852,"byte_end":24859,"line_start":759,"line_end":759,"column_start":1,"column_end":8}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24860,"byte_end":24894,"line_start":760,"line_end":760,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24895,"byte_end":24898,"line_start":761,"line_end":761,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24899,"byte_end":24933,"line_start":762,"line_end":762,"column_start":1,"column_end":35}},{"value":"/     .initial_indent(\"- \")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24934,"byte_end":24963,"line_start":763,"line_end":763,"column_start":1,"column_end":30}},{"value":"/     .subsequent_indent(\"  \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24964,"byte_end":24997,"line_start":764,"line_end":764,"column_start":1,"column_end":34}},{"value":"/ let lines = wrap(\"Memory safety without garbage collection.\", &options);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":24998,"byte_end":25074,"line_start":765,"line_end":765,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(lines, &[","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25075,"byte_end":25099,"line_start":766,"line_end":766,"column_start":1,"column_end":25}},{"value":"/     \"- Memory safety\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25100,"byte_end":25126,"line_start":767,"line_end":767,"column_start":1,"column_end":27}},{"value":"/     \"  without\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25127,"byte_end":25147,"line_start":768,"line_end":768,"column_start":1,"column_end":21}},{"value":"/     \"  garbage\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25148,"byte_end":25168,"line_start":769,"line_end":769,"column_start":1,"column_end":21}},{"value":"/     \"  collection.\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25169,"byte_end":25193,"line_start":770,"line_end":770,"column_start":1,"column_end":25}},{"value":"/ ]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25194,"byte_end":25201,"line_start":771,"line_end":771,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25202,"byte_end":25209,"line_start":772,"line_end":772,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25210,"byte_end":25213,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ # Optimal-Fit Wrapping","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25214,"byte_end":25240,"line_start":774,"line_end":774,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25241,"byte_end":25244,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ By default, `wrap` will try to ensure an even right margin by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25245,"byte_end":25310,"line_start":776,"line_end":776,"column_start":1,"column_end":66}},{"value":"/ finding breaks which avoid short lines. We call this an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25311,"byte_end":25370,"line_start":777,"line_end":777,"column_start":1,"column_end":60}},{"value":"/ “optimal-fit algorithm” since the line breaks are computed by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25371,"byte_end":25440,"line_start":778,"line_end":778,"column_start":1,"column_end":66}},{"value":"/ considering all possible line breaks. The alternative is a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25441,"byte_end":25503,"line_start":779,"line_end":779,"column_start":1,"column_end":63}},{"value":"/ “first-fit algorithm” which simply accumulates words until they no","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25504,"byte_end":25578,"line_start":780,"line_end":780,"column_start":1,"column_end":71}},{"value":"/ longer fit on the line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25579,"byte_end":25606,"line_start":781,"line_end":781,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25607,"byte_end":25610,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ As an example, using the first-fit algorithm to wrap the famous","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25611,"byte_end":25678,"line_start":783,"line_end":783,"column_start":1,"column_end":68}},{"value":"/ Hamlet quote “To be, or not to be: that is the question” in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25679,"byte_end":25748,"line_start":784,"line_end":784,"column_start":1,"column_end":66}},{"value":"/ narrow column with room for only 10 characters looks like this:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25749,"byte_end":25816,"line_start":785,"line_end":785,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25817,"byte_end":25820,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25821,"byte_end":25828,"line_start":787,"line_end":787,"column_start":1,"column_end":8}},{"value":"/ # use textwrap::{WrapAlgorithm::FirstFit, Options, wrap};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25829,"byte_end":25890,"line_start":788,"line_end":788,"column_start":1,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25891,"byte_end":25896,"line_start":789,"line_end":789,"column_start":1,"column_end":6}},{"value":"/ # let lines = wrap(\"To be, or not to be: that is the question\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25897,"byte_end":25964,"line_start":790,"line_end":790,"column_start":1,"column_end":68}},{"value":"/ #                  Options::new(10).wrap_algorithm(FirstFit));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":25965,"byte_end":26031,"line_start":791,"line_end":791,"column_start":1,"column_end":67}},{"value":"/ # assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26032,"byte_end":26076,"line_start":792,"line_end":792,"column_start":1,"column_end":45}},{"value":"/ To be, or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26077,"byte_end":26090,"line_start":793,"line_end":793,"column_start":1,"column_end":14}},{"value":"/ not to be:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26091,"byte_end":26105,"line_start":794,"line_end":794,"column_start":1,"column_end":15}},{"value":"/ that is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26106,"byte_end":26117,"line_start":795,"line_end":795,"column_start":1,"column_end":12}},{"value":"/ the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26118,"byte_end":26125,"line_start":796,"line_end":796,"column_start":1,"column_end":8}},{"value":"/ question","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26126,"byte_end":26138,"line_start":797,"line_end":797,"column_start":1,"column_end":13}},{"value":"/ # \");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26139,"byte_end":26148,"line_start":798,"line_end":798,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26149,"byte_end":26156,"line_start":799,"line_end":799,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26157,"byte_end":26160,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ Notice how the second to last line is quite narrow because","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26161,"byte_end":26223,"line_start":801,"line_end":801,"column_start":1,"column_end":63}},{"value":"/ “question” was too large to fit? The greedy first-fit algorithm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26224,"byte_end":26295,"line_start":802,"line_end":802,"column_start":1,"column_end":68}},{"value":"/ doesn’t look ahead, so it has no other option than to put","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26296,"byte_end":26359,"line_start":803,"line_end":803,"column_start":1,"column_end":62}},{"value":"/ “question” onto its own line.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26360,"byte_end":26397,"line_start":804,"line_end":804,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26398,"byte_end":26401,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ With the optimal-fit wrapping algorithm, the previous lines are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26402,"byte_end":26469,"line_start":806,"line_end":806,"column_start":1,"column_end":68}},{"value":"/ shortened slightly in order to make the word “is” go into the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26470,"byte_end":26539,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ second last line:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26540,"byte_end":26561,"line_start":808,"line_end":808,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26562,"byte_end":26565,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26566,"byte_end":26573,"line_start":810,"line_end":810,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"smawk\")] {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26574,"byte_end":26607,"line_start":811,"line_end":811,"column_start":1,"column_end":34}},{"value":"/ # use textwrap::{Options, WrapAlgorithm, wrap};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26608,"byte_end":26659,"line_start":812,"line_end":812,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26660,"byte_end":26665,"line_start":813,"line_end":813,"column_start":1,"column_end":6}},{"value":"/ # let lines = wrap(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26666,"byte_end":26689,"line_start":814,"line_end":814,"column_start":1,"column_end":24}},{"value":"/ #     \"To be, or not to be: that is the question\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26690,"byte_end":26744,"line_start":815,"line_end":815,"column_start":1,"column_end":55}},{"value":"/ #     Options::new(10).wrap_algorithm(WrapAlgorithm::new_optimal_fit())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26745,"byte_end":26820,"line_start":816,"line_end":816,"column_start":1,"column_end":76}},{"value":"/ # );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26821,"byte_end":26829,"line_start":817,"line_end":817,"column_start":1,"column_end":9}},{"value":"/ # assert_eq!(lines.join(\"\\n\") + \"\\n\", \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26830,"byte_end":26874,"line_start":818,"line_end":818,"column_start":1,"column_end":45}},{"value":"/ To be,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26875,"byte_end":26885,"line_start":819,"line_end":819,"column_start":1,"column_end":11}},{"value":"/ or not to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26886,"byte_end":26899,"line_start":820,"line_end":820,"column_start":1,"column_end":14}},{"value":"/ be: that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26900,"byte_end":26912,"line_start":821,"line_end":821,"column_start":1,"column_end":13}},{"value":"/ is the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26913,"byte_end":26923,"line_start":822,"line_end":822,"column_start":1,"column_end":11}},{"value":"/ question","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26924,"byte_end":26936,"line_start":823,"line_end":823,"column_start":1,"column_end":13}},{"value":"/ # \"); }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26937,"byte_end":26948,"line_start":824,"line_end":824,"column_start":1,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26949,"byte_end":26956,"line_start":825,"line_end":825,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26957,"byte_end":26960,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ Please see [`WrapAlgorithm`] for details on the choices.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":26961,"byte_end":27021,"line_start":827,"line_end":827,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27022,"byte_end":27025,"line_start":828,"line_end":828,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27026,"byte_end":27040,"line_start":829,"line_end":829,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27041,"byte_end":27044,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ The returned iterator yields lines of type `Cow<'_, str>`. If","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27045,"byte_end":27110,"line_start":831,"line_end":831,"column_start":1,"column_end":66}},{"value":"/ possible, the wrapped lines will borrow from the input string. As","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27111,"byte_end":27180,"line_start":832,"line_end":832,"column_start":1,"column_end":70}},{"value":"/ an example, a hanging indentation, the first line can borrow from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27181,"byte_end":27250,"line_start":833,"line_end":833,"column_start":1,"column_end":70}},{"value":"/ the input, but the subsequent lines become owned strings:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27251,"byte_end":27312,"line_start":834,"line_end":834,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27313,"byte_end":27316,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27317,"byte_end":27324,"line_start":836,"line_end":836,"column_start":1,"column_end":8}},{"value":"/ use std::borrow::Cow::{Borrowed, Owned};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27325,"byte_end":27369,"line_start":837,"line_end":837,"column_start":1,"column_end":45}},{"value":"/ use textwrap::{wrap, Options};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27370,"byte_end":27404,"line_start":838,"line_end":838,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27405,"byte_end":27408,"line_start":839,"line_end":839,"column_start":1,"column_end":4}},{"value":"/ let options = Options::new(15).subsequent_indent(\"....\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27409,"byte_end":27470,"line_start":840,"line_end":840,"column_start":1,"column_end":62}},{"value":"/ let lines = wrap(\"Wrapping text all day long.\", &options);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27471,"byte_end":27533,"line_start":841,"line_end":841,"column_start":1,"column_end":63}},{"value":"/ let annotated = lines","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27534,"byte_end":27559,"line_start":842,"line_end":842,"column_start":1,"column_end":26}},{"value":"/     .iter()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27560,"byte_end":27575,"line_start":843,"line_end":843,"column_start":1,"column_end":16}},{"value":"/     .map(|line| match line {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27576,"byte_end":27608,"line_start":844,"line_end":844,"column_start":1,"column_end":33}},{"value":"/         Borrowed(text) => format!(\"[Borrowed] {}\", text),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27609,"byte_end":27670,"line_start":845,"line_end":845,"column_start":1,"column_end":62}},{"value":"/         Owned(text) => format!(\"[Owned]    {}\", text),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27671,"byte_end":27729,"line_start":846,"line_end":846,"column_start":1,"column_end":59}},{"value":"/     })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27730,"byte_end":27740,"line_start":847,"line_end":847,"column_start":1,"column_end":11}},{"value":"/     .collect::<Vec<_>>();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27741,"byte_end":27770,"line_start":848,"line_end":848,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27771,"byte_end":27786,"line_start":849,"line_end":849,"column_start":1,"column_end":16}},{"value":"/     annotated,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27787,"byte_end":27805,"line_start":850,"line_end":850,"column_start":1,"column_end":19}},{"value":"/     &[","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27806,"byte_end":27816,"line_start":851,"line_end":851,"column_start":1,"column_end":11}},{"value":"/         \"[Borrowed] Wrapping text\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27817,"byte_end":27856,"line_start":852,"line_end":852,"column_start":1,"column_end":40}},{"value":"/         \"[Owned]    ....all day\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27857,"byte_end":27894,"line_start":853,"line_end":853,"column_start":1,"column_end":38}},{"value":"/         \"[Owned]    ....long.\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27895,"byte_end":27930,"line_start":854,"line_end":854,"column_start":1,"column_end":36}},{"value":"/     ]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27931,"byte_end":27940,"line_start":855,"line_end":855,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27941,"byte_end":27947,"line_start":856,"line_end":856,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27948,"byte_end":27955,"line_start":857,"line_end":857,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27956,"byte_end":27959,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ ## Leading and Trailing Whitespace","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27960,"byte_end":27998,"line_start":859,"line_end":859,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":27999,"byte_end":28002,"line_start":860,"line_end":860,"column_start":1,"column_end":4}},{"value":"/ As a rule, leading whitespace (indentation) is preserved and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28003,"byte_end":28067,"line_start":861,"line_end":861,"column_start":1,"column_end":65}},{"value":"/ trailing whitespace is discarded.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28068,"byte_end":28105,"line_start":862,"line_end":862,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28106,"byte_end":28109,"line_start":863,"line_end":863,"column_start":1,"column_end":4}},{"value":"/ In more details, when wrapping words into lines, words are found","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28110,"byte_end":28178,"line_start":864,"line_end":864,"column_start":1,"column_end":69}},{"value":"/ by splitting the input text on space characters. One or more","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28179,"byte_end":28243,"line_start":865,"line_end":865,"column_start":1,"column_end":65}},{"value":"/ spaces (shown here as “␣”) are attached to the end of each word:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28244,"byte_end":28318,"line_start":866,"line_end":866,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28319,"byte_end":28322,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28323,"byte_end":28334,"line_start":868,"line_end":868,"column_start":1,"column_end":12}},{"value":"/ \"Foo␣␣␣bar␣baz\" -> [\"Foo␣␣␣\", \"bar␣\", \"baz\"]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28335,"byte_end":28399,"line_start":869,"line_end":869,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28400,"byte_end":28407,"line_start":870,"line_end":870,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28408,"byte_end":28411,"line_start":871,"line_end":871,"column_start":1,"column_end":4}},{"value":"/ These words are then put into lines. The interword whitespace is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28412,"byte_end":28480,"line_start":872,"line_end":872,"column_start":1,"column_end":69}},{"value":"/ preserved, unless the lines are wrapped so that the `\"Foo␣␣␣\"`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28481,"byte_end":28553,"line_start":873,"line_end":873,"column_start":1,"column_end":67}},{"value":"/ word falls at the end of a line:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28554,"byte_end":28590,"line_start":874,"line_end":874,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28591,"byte_end":28594,"line_start":875,"line_end":875,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28595,"byte_end":28602,"line_start":876,"line_end":876,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28603,"byte_end":28626,"line_start":877,"line_end":877,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28627,"byte_end":28630,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(wrap(\"Foo   bar baz\", 10), vec![\"Foo   bar\", \"baz\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28631,"byte_end":28699,"line_start":879,"line_end":879,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(wrap(\"Foo   bar baz\", 8), vec![\"Foo\", \"bar baz\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28700,"byte_end":28765,"line_start":880,"line_end":880,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28766,"byte_end":28773,"line_start":881,"line_end":881,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28774,"byte_end":28777,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ Notice how the trailing whitespace is removed in both case: in the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28778,"byte_end":28848,"line_start":883,"line_end":883,"column_start":1,"column_end":71}},{"value":"/ first example, `\"bar␣\"` becomes `\"bar\"` and in the second case","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28849,"byte_end":28917,"line_start":884,"line_end":884,"column_start":1,"column_end":67}},{"value":"/ `\"Foo␣␣␣\"` becomes `\"Foo\"`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28918,"byte_end":28955,"line_start":885,"line_end":885,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28956,"byte_end":28959,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ Leading whitespace is preserved when the following word fits on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":28960,"byte_end":29027,"line_start":887,"line_end":887,"column_start":1,"column_end":68}},{"value":"/ the first line. To understand this, consider how words are found","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29028,"byte_end":29096,"line_start":888,"line_end":888,"column_start":1,"column_end":69}},{"value":"/ in a text with leading spaces:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29097,"byte_end":29131,"line_start":889,"line_end":889,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29132,"byte_end":29135,"line_start":890,"line_end":890,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29136,"byte_end":29147,"line_start":891,"line_end":891,"column_start":1,"column_end":12}},{"value":"/ \"␣␣foo␣bar\" -> [\"␣␣\", \"foo␣\", \"bar\"]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29148,"byte_end":29200,"line_start":892,"line_end":892,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29201,"byte_end":29208,"line_start":893,"line_end":893,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29209,"byte_end":29212,"line_start":894,"line_end":894,"column_start":1,"column_end":4}},{"value":"/ When put into lines, the indentation is preserved if `\"foo\"` fits","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29213,"byte_end":29282,"line_start":895,"line_end":895,"column_start":1,"column_end":70}},{"value":"/ on the first line, otherwise you end up with an empty line:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29283,"byte_end":29346,"line_start":896,"line_end":896,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29347,"byte_end":29350,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29351,"byte_end":29358,"line_start":898,"line_end":898,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29359,"byte_end":29382,"line_start":899,"line_end":899,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29383,"byte_end":29386,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(wrap(\"  foo bar\", 8), vec![\"  foo\", \"bar\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29387,"byte_end":29446,"line_start":901,"line_end":901,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(wrap(\"  foo bar\", 4), vec![\"\", \"foo\", \"bar\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29447,"byte_end":29508,"line_start":902,"line_end":902,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":29509,"byte_end":29516,"line_start":903,"line_end":903,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":141},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":35147,"byte_end":35159,"line_start":1046,"line_end":1046,"column_start":8,"column_end":20},"name":"wrap_columns","qualname":"::wrap_columns","value":"pub fn wrap_columns<'a, Opt>(&str, usize, Opt, &str, &str, &str)\n-> Vec<String> where Opt: Into<Options>","parent":null,"children":[],"decl_id":null,"docs":" Wrap text into columns with a given total width.","sig":null,"attributes":[{"value":"/ Wrap text into columns with a given total width.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":32770,"byte_end":32822,"line_start":989,"line_end":989,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":32823,"byte_end":32826,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ The `left_gap`, `middle_gap` and `right_gap` arguments specify the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":32827,"byte_end":32897,"line_start":991,"line_end":991,"column_start":1,"column_end":71}},{"value":"/ strings to insert before, between, and after the columns. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":32898,"byte_end":32963,"line_start":992,"line_end":992,"column_start":1,"column_end":66}},{"value":"/ total width of all columns and all gaps is specified using the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":32964,"byte_end":33030,"line_start":993,"line_end":993,"column_start":1,"column_end":67}},{"value":"/ `total_width_or_options` argument. This argument can simply be an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33031,"byte_end":33100,"line_start":994,"line_end":994,"column_start":1,"column_end":70}},{"value":"/ integer if you want to use default settings when wrapping, or it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33101,"byte_end":33169,"line_start":995,"line_end":995,"column_start":1,"column_end":69}},{"value":"/ can be a [`Options`] value if you want to customize the wrapping.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33170,"byte_end":33239,"line_start":996,"line_end":996,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33240,"byte_end":33243,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ If the columns are narrow, it is recommended to set","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33244,"byte_end":33299,"line_start":998,"line_end":998,"column_start":1,"column_end":56}},{"value":"/ [`Options::break_words`] to `true` to prevent words from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33300,"byte_end":33360,"line_start":999,"line_end":999,"column_start":1,"column_end":61}},{"value":"/ protruding into the margins.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33361,"byte_end":33393,"line_start":1000,"line_end":1000,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33394,"byte_end":33397,"line_start":1001,"line_end":1001,"column_start":1,"column_end":4}},{"value":"/ The per-column width is computed like this:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33398,"byte_end":33445,"line_start":1002,"line_end":1002,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33446,"byte_end":33449,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33450,"byte_end":33457,"line_start":1004,"line_end":1004,"column_start":1,"column_end":8}},{"value":"/ # let (left_gap, middle_gap, right_gap) = (\"\", \"\", \"\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33458,"byte_end":33517,"line_start":1005,"line_end":1005,"column_start":1,"column_end":60}},{"value":"/ # let columns = 2;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33518,"byte_end":33540,"line_start":1006,"line_end":1006,"column_start":1,"column_end":23}},{"value":"/ # let options = textwrap::Options::new(80);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33541,"byte_end":33588,"line_start":1007,"line_end":1007,"column_start":1,"column_end":48}},{"value":"/ let inner_width = options.width","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33589,"byte_end":33624,"line_start":1008,"line_end":1008,"column_start":1,"column_end":36}},{"value":"/     - textwrap::core::display_width(left_gap)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33625,"byte_end":33674,"line_start":1009,"line_end":1009,"column_start":1,"column_end":50}},{"value":"/     - textwrap::core::display_width(right_gap)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33675,"byte_end":33725,"line_start":1010,"line_end":1010,"column_start":1,"column_end":51}},{"value":"/     - textwrap::core::display_width(middle_gap) * (columns - 1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33726,"byte_end":33794,"line_start":1011,"line_end":1011,"column_start":1,"column_end":69}},{"value":"/ let column_width = inner_width / columns;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33795,"byte_end":33840,"line_start":1012,"line_end":1012,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33841,"byte_end":33848,"line_start":1013,"line_end":1013,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33849,"byte_end":33852,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ The `text` is wrapped using [`wrap`] and the given `options`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33853,"byte_end":33917,"line_start":1015,"line_end":1015,"column_start":1,"column_end":65}},{"value":"/ argument, but the width is overwritten to the computed","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33918,"byte_end":33976,"line_start":1016,"line_end":1016,"column_start":1,"column_end":59}},{"value":"/ `column_width`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33977,"byte_end":33996,"line_start":1017,"line_end":1017,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":33997,"byte_end":34000,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34001,"byte_end":34013,"line_start":1019,"line_end":1019,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34014,"byte_end":34017,"line_start":1020,"line_end":1020,"column_start":1,"column_end":4}},{"value":"/ Panics if `columns` is zero.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34018,"byte_end":34050,"line_start":1021,"line_end":1021,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34051,"byte_end":34054,"line_start":1022,"line_end":1022,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34055,"byte_end":34069,"line_start":1023,"line_end":1023,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34070,"byte_end":34073,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34074,"byte_end":34081,"line_start":1025,"line_end":1025,"column_start":1,"column_end":8}},{"value":"/ use textwrap::wrap_columns;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34082,"byte_end":34113,"line_start":1026,"line_end":1026,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34114,"byte_end":34117,"line_start":1027,"line_end":1027,"column_start":1,"column_end":4}},{"value":"/ let text = \"\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34118,"byte_end":34135,"line_start":1028,"line_end":1028,"column_start":1,"column_end":18}},{"value":"/ This is an example text, which is wrapped into three columns. \\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34136,"byte_end":34203,"line_start":1029,"line_end":1029,"column_start":1,"column_end":68}},{"value":"/ Notice how the final column can be shorter than the others.\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34204,"byte_end":34269,"line_start":1030,"line_end":1030,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34270,"byte_end":34273,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ #[cfg(feature = \"smawk\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34274,"byte_end":34303,"line_start":1032,"line_end":1032,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34304,"byte_end":34364,"line_start":1033,"line_end":1033,"column_start":1,"column_end":61}},{"value":"/            vec![\"| This is       | into three    | column can be  |\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34365,"byte_end":34438,"line_start":1034,"line_end":1034,"column_start":1,"column_end":74}},{"value":"/                 \"| an example    | columns.      | shorter than   |\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34439,"byte_end":34512,"line_start":1035,"line_end":1035,"column_start":1,"column_end":74}},{"value":"/                 \"| text, which   | Notice how    | the others.    |\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34513,"byte_end":34586,"line_start":1036,"line_end":1036,"column_start":1,"column_end":74}},{"value":"/                 \"| is wrapped    | the final     |                |\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34587,"byte_end":34662,"line_start":1037,"line_end":1037,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34663,"byte_end":34666,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ // Without the `smawk` feature, the middle column is a little more uneven:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34667,"byte_end":34745,"line_start":1039,"line_end":1039,"column_start":1,"column_end":79}},{"value":"/ #[cfg(not(feature = \"smawk\"))]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34746,"byte_end":34780,"line_start":1040,"line_end":1040,"column_start":1,"column_end":35}},{"value":"/ assert_eq!(wrap_columns(text, 3, 50, \"| \", \" | \", \" |\"),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34781,"byte_end":34841,"line_start":1041,"line_end":1041,"column_start":1,"column_end":61}},{"value":"/            vec![\"| This is an    | three         | column can be  |\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34842,"byte_end":34915,"line_start":1042,"line_end":1042,"column_start":1,"column_end":74}},{"value":"/                 \"| example text, | columns.      | shorter than   |\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34916,"byte_end":34989,"line_start":1043,"line_end":1043,"column_start":1,"column_end":74}},{"value":"/                 \"| which is      | Notice how    | the others.    |\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":34990,"byte_end":35063,"line_start":1044,"line_end":1044,"column_start":1,"column_end":74}},{"value":"/                 \"| wrapped into  | the final     |                |\"]);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":35064,"byte_end":35139,"line_start":1045,"line_end":1045,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":144},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38880,"byte_end":38892,"line_start":1152,"line_end":1152,"column_start":8,"column_end":20},"name":"fill_inplace","qualname":"::fill_inplace","value":"pub fn fill_inplace(&mut String, usize)","parent":null,"children":[],"decl_id":null,"docs":" Fill `text` in-place without reallocating the input string.","sig":null,"attributes":[{"value":"/ Fill `text` in-place without reallocating the input string.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":36816,"byte_end":36879,"line_start":1099,"line_end":1099,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":36880,"byte_end":36883,"line_start":1100,"line_end":1100,"column_start":1,"column_end":4}},{"value":"/ This function works by modifying the input string: some `' '`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":36884,"byte_end":36949,"line_start":1101,"line_end":1101,"column_start":1,"column_end":66}},{"value":"/ characters will be replaced by `'\\n'` characters. The rest of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":36950,"byte_end":37019,"line_start":1102,"line_end":1102,"column_start":1,"column_end":70}},{"value":"/ text remains untouched.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37020,"byte_end":37047,"line_start":1103,"line_end":1103,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37048,"byte_end":37051,"line_start":1104,"line_end":1104,"column_start":1,"column_end":4}},{"value":"/ Since we can only replace existing whitespace in the input with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37052,"byte_end":37119,"line_start":1105,"line_end":1105,"column_start":1,"column_end":68}},{"value":"/ `'\\n'`, we cannot do hyphenation nor can we split words longer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37120,"byte_end":37186,"line_start":1106,"line_end":1106,"column_start":1,"column_end":67}},{"value":"/ than the line width. We also need to use `AsciiSpace` as the word","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37187,"byte_end":37256,"line_start":1107,"line_end":1107,"column_start":1,"column_end":70}},{"value":"/ separator since we need `' '` characters between words in order to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37257,"byte_end":37327,"line_start":1108,"line_end":1108,"column_start":1,"column_end":71}},{"value":"/ replace some of them with a `'\\n'`. Indentation is also ruled out.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37328,"byte_end":37398,"line_start":1109,"line_end":1109,"column_start":1,"column_end":71}},{"value":"/ In other words, `fill_inplace(width)` behaves as if you had called","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37399,"byte_end":37469,"line_start":1110,"line_end":1110,"column_start":1,"column_end":71}},{"value":"/ [`fill`] with these options:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37470,"byte_end":37502,"line_start":1111,"line_end":1111,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37503,"byte_end":37506,"line_start":1112,"line_end":1112,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37507,"byte_end":37514,"line_start":1113,"line_end":1113,"column_start":1,"column_end":8}},{"value":"/ # use textwrap::{core, Options, WordSplitter, WordSeparator, WrapAlgorithm};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37515,"byte_end":37595,"line_start":1114,"line_end":1114,"column_start":1,"column_end":81}},{"value":"/ # let width = 80;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37596,"byte_end":37617,"line_start":1115,"line_end":1115,"column_start":1,"column_end":22}},{"value":"/ Options {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37618,"byte_end":37631,"line_start":1116,"line_end":1116,"column_start":1,"column_end":14}},{"value":"/     width: width,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37632,"byte_end":37653,"line_start":1117,"line_end":1117,"column_start":1,"column_end":22}},{"value":"/     initial_indent: \"\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37654,"byte_end":37681,"line_start":1118,"line_end":1118,"column_start":1,"column_end":28}},{"value":"/     subsequent_indent: \"\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37682,"byte_end":37712,"line_start":1119,"line_end":1119,"column_start":1,"column_end":31}},{"value":"/     break_words: false,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37713,"byte_end":37740,"line_start":1120,"line_end":1120,"column_start":1,"column_end":28}},{"value":"/     word_separator: WordSeparator::AsciiSpace,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37741,"byte_end":37791,"line_start":1121,"line_end":1121,"column_start":1,"column_end":51}},{"value":"/     wrap_algorithm: WrapAlgorithm::FirstFit,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37792,"byte_end":37840,"line_start":1122,"line_end":1122,"column_start":1,"column_end":49}},{"value":"/     word_splitter: WordSplitter::NoHyphenation,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37841,"byte_end":37892,"line_start":1123,"line_end":1123,"column_start":1,"column_end":52}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37893,"byte_end":37899,"line_start":1124,"line_end":1124,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37900,"byte_end":37907,"line_start":1125,"line_end":1125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37908,"byte_end":37911,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ The wrap algorithm is [`WrapAlgorithm::FirstFit`] since this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37912,"byte_end":37976,"line_start":1127,"line_end":1127,"column_start":1,"column_end":65}},{"value":"/ is the fastest algorithm — and the main reason to use","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":37977,"byte_end":38036,"line_start":1128,"line_end":1128,"column_start":1,"column_end":58}},{"value":"/ `fill_inplace` is to get the string broken into newlines as fast","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38037,"byte_end":38105,"line_start":1129,"line_end":1129,"column_start":1,"column_end":69}},{"value":"/ as possible.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38106,"byte_end":38122,"line_start":1130,"line_end":1130,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38123,"byte_end":38126,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ A last difference is that (unlike [`fill`]) `fill_inplace` can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38127,"byte_end":38193,"line_start":1132,"line_end":1132,"column_start":1,"column_end":67}},{"value":"/ leave trailing whitespace on lines. This is because we wrap by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38194,"byte_end":38260,"line_start":1133,"line_end":1133,"column_start":1,"column_end":67}},{"value":"/ inserting a `'\\n'` at the final whitespace in the input string:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38261,"byte_end":38328,"line_start":1134,"line_end":1134,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38329,"byte_end":38332,"line_start":1135,"line_end":1135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38333,"byte_end":38340,"line_start":1136,"line_end":1136,"column_start":1,"column_end":8}},{"value":"/ let mut text = String::from(\"Hello   World!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38341,"byte_end":38391,"line_start":1137,"line_end":1137,"column_start":1,"column_end":51}},{"value":"/ textwrap::fill_inplace(&mut text, 10);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38392,"byte_end":38434,"line_start":1138,"line_end":1138,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(text, \"Hello  \\nWorld!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38435,"byte_end":38475,"line_start":1139,"line_end":1139,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38476,"byte_end":38483,"line_start":1140,"line_end":1140,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38484,"byte_end":38487,"line_start":1141,"line_end":1141,"column_start":1,"column_end":4}},{"value":"/ If we didn't do this, the word `World!` would end up being","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38488,"byte_end":38550,"line_start":1142,"line_end":1142,"column_start":1,"column_end":63}},{"value":"/ indented. You can avoid this if you make sure that your input text","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38551,"byte_end":38621,"line_start":1143,"line_end":1143,"column_start":1,"column_end":71}},{"value":"/ has no double spaces.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38622,"byte_end":38647,"line_start":1144,"line_end":1144,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38648,"byte_end":38651,"line_start":1145,"line_end":1145,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38652,"byte_end":38669,"line_start":1146,"line_end":1146,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38670,"byte_end":38673,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ In benchmarks, `fill_inplace` is about twice as fast as [`fill`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38674,"byte_end":38743,"line_start":1148,"line_end":1148,"column_start":1,"column_end":70}},{"value":"/ Please see the [`linear`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38744,"byte_end":38772,"line_start":1149,"line_end":1149,"column_start":1,"column_end":29}},{"value":"/ benchmark](https://github.com/mgeisler/textwrap/blob/master/benches/linear.rs)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38773,"byte_end":38855,"line_start":1150,"line_end":1150,"column_start":1,"column_end":83}},{"value":"/ for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":38856,"byte_end":38872,"line_start":1151,"line_end":1151,"column_start":1,"column_end":17}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":73846,"byte_end":73859,"line_start":125,"line_end":125,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":74258,"byte_end":74271,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":87210,"byte_end":87222,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":87724,"byte_end":87736,"line_start":113,"line_end":113,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88248,"byte_end":88260,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97827,"byte_end":97840,"line_start":90,"line_end":90,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98225,"byte_end":98238,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100251,"byte_end":100264,"line_start":161,"line_end":161,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117182,"byte_end":117186,"line_start":226,"line_end":226,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117292,"byte_end":117296,"line_start":234,"line_end":234,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":119505,"byte_end":119509,"line_start":304,"line_end":304,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9180,"byte_end":9187,"line_start":261,"line_end":261,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9653,"byte_end":9660,"line_start":275,"line_end":275,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9749,"byte_end":9756,"line_start":281,"line_end":281,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12294,"byte_end":12301,"line_start":350,"line_end":350,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7452,"byte_end":7466,"line_start":211,"line_end":211,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":32}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7515,"byte_end":7530,"line_start":214,"line_end":214,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":7581,"byte_end":7585,"line_start":217,"line_end":217,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":82}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":73846,"byte_end":73859,"line_start":125,"line_end":125,"column_start":26,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":146},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_separators.rs","byte_start":74258,"byte_end":74271,"line_start":136,"line_end":136,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":87210,"byte_end":87222,"line_start":101,"line_end":101,"column_start":26,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":87724,"byte_end":87736,"line_start":113,"line_end":113,"column_start":34,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":155},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/word_splitters.rs","byte_start":88248,"byte_end":88260,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":97827,"byte_end":97840,"line_start":90,"line_end":90,"column_start":26,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":98225,"byte_end":98238,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/wrap_algorithms.rs","byte_start":100251,"byte_end":100264,"line_start":161,"line_end":161,"column_start":18,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":165},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":116178,"byte_end":116183,"line_start":197,"line_end":197,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":9553},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117182,"byte_end":117186,"line_start":226,"line_end":226,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":117292,"byte_end":117296,"line_start":234,"line_end":234,"column_start":10,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/core.rs","byte_start":119505,"byte_end":119509,"line_start":304,"line_end":304,"column_start":19,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":178},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9180,"byte_end":9187,"line_start":261,"line_end":261,"column_start":36,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9653,"byte_end":9660,"line_start":275,"line_end":275,"column_start":26,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":9749,"byte_end":9756,"line_start":281,"line_end":281,"column_start":10,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/textwrap-0.15.0/src/lib.rs","byte_start":12294,"byte_end":12301,"line_start":350,"line_end":350,"column_start":10,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}}]}