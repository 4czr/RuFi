{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3","program":"/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","termcolor","--edition=2018","/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=75c9485418f3e750","-C","extra-filename=-75c9485418f3e750","--out-dir","/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","-L","dependency=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libtermcolor-75c9485418f3e750.rmeta"},"prelude":{"crate_id":{"name":"termcolor","disambiguator":[17298169107617206076,0]},"crate_root":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src","external_crates":[{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}}],"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":0,"byte_end":71903,"line_start":1,"line_end":2260,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":0,"byte_end":71903,"line_start":1,"line_end":2260,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":34},{"krate":0,"index":41},{"krate":0,"index":329},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":59},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":105},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":199},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":247},{"krate":0,"index":251},{"krate":0,"index":257},{"krate":0,"index":265},{"krate":0,"index":357},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":377},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":291},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":319},{"krate":0,"index":325}],"decl_id":null,"docs":"This crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.","sig":null,"attributes":[{"value":"*\nThis crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.\n\nThis crate also provides platform independent support for writing colored text\nto an in memory buffer. While this is easy to do with ANSI escape sequences\n(because they are in the buffer themselves), it is trickier to do with the\nWindows console API, which requires synchronous communication.\n\n# Organization\n\nThe `WriteColor` trait extends the `io::Write` trait with methods for setting\ncolors or resetting them.\n\n`StandardStream` and `StandardStreamLock` both satisfy `WriteColor` and are\nanalogous to `std::io::Stdout` and `std::io::StdoutLock`, or `std::io::Stderr`\nand `std::io::StderrLock`.\n\n`Buffer` is an in memory buffer that supports colored text. In a parallel\nprogram, each thread might write to its own buffer. A buffer can be printed to\nusing a `BufferWriter`. The advantage of this design is that each thread can\nwork in parallel on a buffer without having to synchronize access to global\nresources such as the Windows console. Moreover, this design also prevents\ninterleaving of buffer output.\n\n`Ansi` and `NoColor` both satisfy `WriteColor` for arbitrary implementors of\n`io::Write`. These types are useful when you know exactly what you need. An\nanalogous type for the Windows console is not provided since it cannot exist.\n\n# Example: using `StandardStream`\n\nThe `StandardStream` type in this crate works similarly to `std::io::Stdout`,\nexcept it is augmented with methods for coloring by the `WriteColor` trait.\nFor example, to write some green text:\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{Color, ColorChoice, ColorSpec, StandardStream, WriteColor};\n\nlet mut stdout = StandardStream::stdout(ColorChoice::Always);\nstdout.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut stdout, \"green text!\")?;\n# Ok(()) }\n```\n\nNote that any text written to the terminal now will be colored\ngreen when using ANSI escape sequences, even if it is written via\nstderr, and even if stderr had previously been set to `Color::Red`.\nUsers will need to manage any color changes themselves by calling\n[`WriteColor::set_color`](trait.WriteColor.html#tymethod.set_color), and this\nmay include calling [`WriteColor::reset`](trait.WriteColor.html#tymethod.reset)\nbefore the program exits to a shell.\n\n# Example: using `BufferWriter`\n\nA `BufferWriter` can create buffers and write buffers to stdout or stderr. It\ndoes *not* implement `io::Write` or `WriteColor` itself. Instead, `Buffer`\nimplements `io::Write` and `io::WriteColor`.\n\nThis example shows how to print some green text to stderr.\n\n```rust,no_run\n# fn test() -> Result<(), Box<::std::error::Error>> {\nuse std::io::Write;\nuse termcolor::{BufferWriter, Color, ColorChoice, ColorSpec, WriteColor};\n\nlet mut bufwtr = BufferWriter::stderr(ColorChoice::Always);\nlet mut buffer = bufwtr.buffer();\nbuffer.set_color(ColorSpec::new().set_fg(Some(Color::Green)))?;\nwriteln!(&mut buffer, \"green text!\")?;\nbufwtr.print(&buffer)?;\n# Ok(()) }\n```\n\n# Detecting presence of a terminal\n\nIn many scenarios when using color, one often wants to enable colors\nautomatically when writing to a terminal and disable colors automatically when\nwriting to anything else. The typical way to achieve this in Unix environments\nis via libc's\n[`isatty`](https://man7.org/linux/man-pages/man3/isatty.3.html)\nfunction.\nUnfortunately, this notoriously does not work well in Windows environments. To\nwork around that, the currently recommended solution is to use the\n[`atty`](https://crates.io/crates/atty)\ncrate, which goes out of its way to get this as right as possible in Windows\nenvironments.\n\nFor example, in a command line application that exposes a `--color` flag,\nyour logic for how to enable colors might look like this:\n\n```rust,ignore\nuse atty;\nuse termcolor::{ColorChoice, StandardStream};\n\nlet preference = argv.get_flag(\"color\").unwrap_or(\"auto\");\nlet choice = match preference {\n    \"always\" => ColorChoice::Always,\n    \"ansi\" => ColorChoice::AlwaysAnsi,\n    \"auto\" => {\n        if atty::is(atty::Stream::Stdout) {\n            ColorChoice::Auto\n        } else {\n            ColorChoice::Never\n        }\n    }\n    _ => ColorChoice::Never,\n};\nlet stdout = StandardStream::stdout(choice);\n// ... write to stdout\n```\n\nCurrently, `termcolor` does not provide anything to do this for you.\n*/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":0,"byte_end":4647,"line_start":1,"line_end":118,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":4649,"byte_end":4671,"line_start":120,"line_end":120,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5106,"byte_end":5116,"line_start":140,"line_end":140,"column_start":11,"column_end":21},"name":"WriteColor","qualname":"::WriteColor","value":"WriteColor: io::Write","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" This trait describes the behavior of writers that support colored output.\n","sig":null,"attributes":[{"value":"/ This trait describes the behavior of writers that support colored output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5018,"byte_end":5095,"line_start":139,"line_end":139,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5212,"byte_end":5226,"line_start":142,"line_end":142,"column_start":8,"column_end":22},"name":"supports_color","qualname":"::WriteColor::supports_color","value":"pub fn supports_color(&Self) -> bool","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Returns true if and only if the underlying writer supports colors.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if the underlying writer supports colors.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5134,"byte_end":5204,"line_start":141,"line_end":141,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5542,"byte_end":5551,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"set_color","qualname":"::WriteColor::set_color","value":"pub fn set_color(&mut Self, &ColorSpec) -> io::Result<()>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Set the color settings of the writer.","sig":null,"attributes":[{"value":"/ Set the color settings of the writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5248,"byte_end":5289,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5294,"byte_end":5297,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Subsequent writes to this writer will use these settings until either","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5302,"byte_end":5375,"line_start":146,"line_end":146,"column_start":5,"column_end":78}},{"value":"/ `reset` is called or new color settings are set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5380,"byte_end":5432,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5437,"byte_end":5440,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If there was a problem setting the color settings, then an error is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5445,"byte_end":5516,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5521,"byte_end":5534,"line_start":150,"line_end":150,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5781,"byte_end":5786,"line_start":157,"line_end":157,"column_start":8,"column_end":13},"name":"reset","qualname":"::WriteColor::reset","value":"pub fn reset(&mut Self) -> io::Result<()>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Reset the current color settings to their original settings.","sig":null,"attributes":[{"value":"/ Reset the current color settings to their original settings.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5605,"byte_end":5669,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5674,"byte_end":5677,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ If there was a problem resetting the color settings, then an error is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5682,"byte_end":5755,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5760,"byte_end":5773,"line_start":156,"line_end":156,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6462,"byte_end":6476,"line_start":170,"line_end":170,"column_start":8,"column_end":22},"name":"is_synchronous","qualname":"::WriteColor::is_synchronous","value":"pub fn is_synchronous(&Self) -> bool","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Returns true if and only if the underlying writer must synchronously\n interact with an end user's device in order to control colors. By\n default, this always returns `false`.","sig":null,"attributes":[{"value":"/ Returns true if and only if the underlying writer must synchronously","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5822,"byte_end":5894,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ interact with an end user's device in order to control colors. By","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5899,"byte_end":5968,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ default, this always returns `false`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5973,"byte_end":6014,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6019,"byte_end":6022,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ In practice, this should return `true` if the underlying writer is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6027,"byte_end":6097,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ manipulating colors using the Windows console APIs.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6102,"byte_end":6157,"line_start":164,"line_end":164,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6162,"byte_end":6165,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This is useful for writing generic code (such as a buffered writer)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6170,"byte_end":6241,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ that can perform certain optimizations when the underlying writer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6246,"byte_end":6315,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ doesn't rely on synchronous APIs. For example, ANSI escape sequences","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6320,"byte_end":6392,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ can be passed through to the end user's device as is.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6397,"byte_end":6454,"line_start":169,"line_end":169,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7600,"byte_end":7606,"line_start":210,"line_end":210,"column_start":5,"column_end":11},"name":"Always","qualname":"::ColorChoice::Always","value":"ColorChoice::Always","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Try very hard to emit colors. This includes emitting ANSI colors\n on Windows if the console API is unavailable.\n","sig":null,"attributes":[{"value":"/ Try very hard to emit colors. This includes emitting ANSI colors","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7473,"byte_end":7541,"line_start":208,"line_end":208,"column_start":5,"column_end":73}},{"value":"/ on Windows if the console API is unavailable.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7546,"byte_end":7595,"line_start":209,"line_end":209,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":332},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7731,"byte_end":7741,"line_start":213,"line_end":213,"column_start":5,"column_end":15},"name":"AlwaysAnsi","qualname":"::ColorChoice::AlwaysAnsi","value":"ColorChoice::AlwaysAnsi","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" AlwaysAnsi is like Always, except it never tries to use anything other\n than emitting ANSI color codes.\n","sig":null,"attributes":[{"value":"/ AlwaysAnsi is like Always, except it never tries to use anything other","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7612,"byte_end":7686,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ than emitting ANSI color codes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7691,"byte_end":7726,"line_start":212,"line_end":212,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7942,"byte_end":7946,"line_start":217,"line_end":217,"column_start":5,"column_end":9},"name":"Auto","qualname":"::ColorChoice::Auto","value":"ColorChoice::Auto","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Try to use colors, but don't force the issue. If the console isn't\n available on Windows, or if TERM=dumb, or if `NO_COLOR` is defined, for\n example, then don't use colors.\n","sig":null,"attributes":[{"value":"/ Try to use colors, but don't force the issue. If the console isn't","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7747,"byte_end":7817,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ available on Windows, or if TERM=dumb, or if `NO_COLOR` is defined, for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7822,"byte_end":7897,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ example, then don't use colors.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7902,"byte_end":7937,"line_start":216,"line_end":216,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7979,"byte_end":7984,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"Never","qualname":"::ColorChoice::Never","value":"ColorChoice::Never","parent":{"krate":0,"index":329},"children":[],"decl_id":null,"docs":" Never emit colors.\n","sig":null,"attributes":[{"value":"/ Never emit colors.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7952,"byte_end":7974,"line_start":218,"line_end":218,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":329},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7455,"byte_end":7466,"line_start":207,"line_end":207,"column_start":10,"column_end":21},"name":"ColorChoice","qualname":"::ColorChoice","value":"pub enum ColorChoice { Always, AlwaysAnsi, Auto, Never, }","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336}],"decl_id":null,"docs":" ColorChoice represents the color preferences of an end user.\n","sig":null,"attributes":[{"value":"/ ColorChoice represents the color preferences of an end user.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7336,"byte_end":7400,"line_start":205,"line_end":205,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":90},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":13869,"byte_end":13883,"line_start":399,"line_end":399,"column_start":12,"column_end":26},"name":"StandardStream","qualname":"::StandardStream","value":"StandardStream {  }","parent":null,"children":[{"krate":0,"index":91}],"decl_id":null,"docs":" Satisfies `io::Write` and `WriteColor`, and supports optional coloring\n to either of the standard output streams, stdout and stderr.\n","sig":null,"attributes":[{"value":"/ Satisfies `io::Write` and `WriteColor`, and supports optional coloring","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":13718,"byte_end":13792,"line_start":397,"line_end":397,"column_start":1,"column_end":75}},{"value":"/ to either of the standard output streams, stdout and stderr.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":13793,"byte_end":13857,"line_start":398,"line_end":398,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14241,"byte_end":14259,"line_start":410,"line_end":410,"column_start":12,"column_end":30},"name":"StandardStreamLock","qualname":"::StandardStreamLock","value":"StandardStreamLock {  }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" `StandardStreamLock` is a locked reference to a `StandardStream`.","sig":null,"attributes":[{"value":"/ `StandardStreamLock` is a locked reference to a `StandardStream`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":13950,"byte_end":14019,"line_start":403,"line_end":403,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14020,"byte_end":14023,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ This implements the `io::Write` and `WriteColor` traits, and is constructed","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14024,"byte_end":14103,"line_start":405,"line_end":405,"column_start":1,"column_end":80}},{"value":"/ via the `Write::lock` method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14104,"byte_end":14137,"line_start":406,"line_end":406,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14138,"byte_end":14141,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ The lifetime `'a` refers to the lifetime of the corresponding","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14142,"byte_end":14207,"line_start":408,"line_end":408,"column_start":1,"column_end":66}},{"value":"/ `StandardStream`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14208,"byte_end":14229,"line_start":409,"line_end":409,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":95},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14411,"byte_end":14433,"line_start":415,"line_end":415,"column_start":12,"column_end":34},"name":"BufferedStandardStream","qualname":"::BufferedStandardStream","value":"BufferedStandardStream {  }","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" Like `StandardStream`, but does buffered writing.\n","sig":null,"attributes":[{"value":"/ Like `StandardStream`, but does buffered writing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":14346,"byte_end":14399,"line_start":414,"line_end":414,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15876,"byte_end":15882,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"stdout","qualname":"<StandardStream>::stdout","value":"pub fn stdout(ColorChoice) -> StandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StandardStream` with the given color preferences that\n writes to standard output.","sig":null,"attributes":[{"value":"/ Create a new `StandardStream` with the given color preferences that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15495,"byte_end":15566,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ writes to standard output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15571,"byte_end":15601,"line_start":451,"line_end":451,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15606,"byte_end":15609,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ On Windows, if coloring is desired and a Windows console could not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15614,"byte_end":15687,"line_start":453,"line_end":453,"column_start":5,"column_end":78}},{"value":"/ found, then ANSI escape sequences are used instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15692,"byte_end":15747,"line_start":454,"line_end":454,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15752,"byte_end":15755,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The specific color/style settings can be configured when writing via","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15760,"byte_end":15832,"line_start":456,"line_end":456,"column_start":5,"column_end":77}},{"value":"/ the `WriteColor` trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15837,"byte_end":15864,"line_start":457,"line_end":457,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16452,"byte_end":16458,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"stderr","qualname":"<StandardStream>::stderr","value":"pub fn stderr(ColorChoice) -> StandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StandardStream` with the given color preferences that\n writes to standard error.","sig":null,"attributes":[{"value":"/ Create a new `StandardStream` with the given color preferences that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16072,"byte_end":16143,"line_start":463,"line_end":463,"column_start":5,"column_end":76}},{"value":"/ writes to standard error.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16148,"byte_end":16177,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16182,"byte_end":16185,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ On Windows, if coloring is desired and a Windows console could not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16190,"byte_end":16263,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ found, then ANSI escape sequences are used instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16268,"byte_end":16323,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16328,"byte_end":16331,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The specific color/style settings can be configured when writing via","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16336,"byte_end":16408,"line_start":469,"line_end":469,"column_start":5,"column_end":77}},{"value":"/ the `WriteColor` trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16413,"byte_end":16440,"line_start":470,"line_end":470,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16920,"byte_end":16924,"line_start":483,"line_end":483,"column_start":12,"column_end":16},"name":"lock","qualname":"<StandardStream>::lock","value":"pub fn lock(&Self) -> StandardStreamLock","parent":null,"children":[],"decl_id":null,"docs":" Lock the underlying writer.","sig":null,"attributes":[{"value":"/ Lock the underlying writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16648,"byte_end":16679,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16684,"byte_end":16687,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ The lock guard returned also satisfies `io::Write` and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16692,"byte_end":16750,"line_start":478,"line_end":478,"column_start":5,"column_end":63}},{"value":"/ `WriteColor`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16755,"byte_end":16772,"line_start":479,"line_end":479,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16777,"byte_end":16780,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This method is **not reentrant**. It may panic if `lock` is called","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16785,"byte_end":16855,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/ while a `StandardStreamLock` is still alive.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":16860,"byte_end":16908,"line_start":482,"line_end":482,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18662,"byte_end":18668,"line_start":532,"line_end":532,"column_start":12,"column_end":18},"name":"stdout","qualname":"<BufferedStandardStream>::stdout","value":"pub fn stdout(ColorChoice) -> BufferedStandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferedStandardStream` with the given color preferences\n that writes to standard output via a buffered writer.","sig":null,"attributes":[{"value":"/ Create a new `BufferedStandardStream` with the given color preferences","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18251,"byte_end":18325,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ that writes to standard output via a buffered writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18330,"byte_end":18387,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18392,"byte_end":18395,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ On Windows, if coloring is desired and a Windows console could not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18400,"byte_end":18473,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ found, then ANSI escape sequences are used instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18478,"byte_end":18533,"line_start":528,"line_end":528,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18538,"byte_end":18541,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The specific color/style settings can be configured when writing via","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18546,"byte_end":18618,"line_start":530,"line_end":530,"column_start":5,"column_end":77}},{"value":"/ the `WriteColor` trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18623,"byte_end":18650,"line_start":531,"line_end":531,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19304,"byte_end":19310,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"stderr","qualname":"<BufferedStandardStream>::stderr","value":"pub fn stderr(ColorChoice) -> BufferedStandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferedStandardStream` with the given color preferences\n that writes to standard error via a buffered writer.","sig":null,"attributes":[{"value":"/ Create a new `BufferedStandardStream` with the given color preferences","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18894,"byte_end":18968,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ that writes to standard error via a buffered writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18973,"byte_end":19029,"line_start":539,"line_end":539,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19034,"byte_end":19037,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ On Windows, if coloring is desired and a Windows console could not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19042,"byte_end":19115,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/ found, then ANSI escape sequences are used instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19120,"byte_end":19175,"line_start":542,"line_end":542,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19180,"byte_end":19183,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ The specific color/style settings can be configured when writing via","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19188,"byte_end":19260,"line_start":544,"line_end":544,"column_start":5,"column_end":77}},{"value":"/ the `WriteColor` trait.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19265,"byte_end":19292,"line_start":545,"line_end":545,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28671,"byte_end":28683,"line_start":858,"line_end":858,"column_start":12,"column_end":24},"name":"BufferWriter","qualname":"::BufferWriter","value":"BufferWriter {  }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" Writes colored buffers to stdout or stderr.","sig":null,"attributes":[{"value":"/ Writes colored buffers to stdout or stderr.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28300,"byte_end":28347,"line_start":849,"line_end":849,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28348,"byte_end":28351,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ Writable buffers can be obtained by calling `buffer` on a `BufferWriter`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28352,"byte_end":28429,"line_start":851,"line_end":851,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28430,"byte_end":28433,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ This writer works with terminals that support ANSI escape sequences or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28434,"byte_end":28508,"line_start":853,"line_end":853,"column_start":1,"column_end":75}},{"value":"/ with a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28509,"byte_end":28536,"line_start":854,"line_end":854,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28537,"byte_end":28540,"line_start":855,"line_end":855,"column_start":1,"column_end":4}},{"value":"/ It is intended for a `BufferWriter` to be put in an `Arc` and written to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28541,"byte_end":28617,"line_start":856,"line_end":856,"column_start":1,"column_end":77}},{"value":"/ from multiple threads simultaneously.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28618,"byte_end":28659,"line_start":857,"line_end":857,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31267,"byte_end":31273,"line_start":927,"line_end":927,"column_start":12,"column_end":18},"name":"stdout","qualname":"<BufferWriter>::stdout","value":"pub fn stdout(ColorChoice) -> BufferWriter","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferWriter` that writes to stdout with the given\n color preferences.","sig":null,"attributes":[{"value":"/ Create a new `BufferWriter` that writes to stdout with the given","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":30898,"byte_end":30966,"line_start":919,"line_end":919,"column_start":5,"column_end":73}},{"value":"/ color preferences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":30971,"byte_end":30993,"line_start":920,"line_end":920,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":30998,"byte_end":31001,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ On Windows, if coloring is desired and a Windows console could not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31006,"byte_end":31079,"line_start":922,"line_end":922,"column_start":5,"column_end":78}},{"value":"/ found, then ANSI escape sequences are used instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31084,"byte_end":31139,"line_start":923,"line_end":923,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31144,"byte_end":31147,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ The specific color/style settings can be configured when writing to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31152,"byte_end":31223,"line_start":925,"line_end":925,"column_start":5,"column_end":76}},{"value":"/ the buffers themselves.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31228,"byte_end":31255,"line_start":926,"line_end":926,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31758,"byte_end":31764,"line_start":939,"line_end":939,"column_start":12,"column_end":18},"name":"stderr","qualname":"<BufferWriter>::stderr","value":"pub fn stderr(ColorChoice) -> BufferWriter","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferWriter` that writes to stderr with the given\n color preferences.","sig":null,"attributes":[{"value":"/ Create a new `BufferWriter` that writes to stderr with the given","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31389,"byte_end":31457,"line_start":931,"line_end":931,"column_start":5,"column_end":73}},{"value":"/ color preferences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31462,"byte_end":31484,"line_start":932,"line_end":932,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31489,"byte_end":31492,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ On Windows, if coloring is desired and a Windows console could not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31497,"byte_end":31570,"line_start":934,"line_end":934,"column_start":5,"column_end":78}},{"value":"/ found, then ANSI escape sequences are used instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31575,"byte_end":31630,"line_start":935,"line_end":935,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31635,"byte_end":31638,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ The specific color/style settings can be configured when writing to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31643,"byte_end":31714,"line_start":937,"line_end":937,"column_start":5,"column_end":76}},{"value":"/ the buffers themselves.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31719,"byte_end":31746,"line_start":938,"line_end":938,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32041,"byte_end":32050,"line_start":947,"line_end":947,"column_start":12,"column_end":21},"name":"separator","qualname":"<BufferWriter>::separator","value":"pub fn separator(&mut Self, Option<Vec<u8>>)","parent":null,"children":[],"decl_id":null,"docs":" If set, the separator given is printed between buffers. By default, no\n separator is printed.","sig":null,"attributes":[{"value":"/ If set, the separator given is printed between buffers. By default, no","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31880,"byte_end":31954,"line_start":943,"line_end":943,"column_start":5,"column_end":79}},{"value":"/ separator is printed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31959,"byte_end":31984,"line_start":944,"line_end":944,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31989,"byte_end":31992,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ The default value is `None`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":31997,"byte_end":32029,"line_start":946,"line_end":946,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32358,"byte_end":32364,"line_start":956,"line_end":956,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufferWriter>::buffer","value":"pub fn buffer(&Self) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Buffer` with the current color preferences.","sig":null,"attributes":[{"value":"/ Creates a new `Buffer` with the current color preferences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32127,"byte_end":32189,"line_start":951,"line_end":951,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32194,"byte_end":32197,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ A `Buffer` satisfies both `io::Write` and `WriteColor`. A `Buffer` can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32202,"byte_end":32276,"line_start":953,"line_end":953,"column_start":5,"column_end":79}},{"value":"/ be printed using the `print` method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32281,"byte_end":32321,"line_start":954,"line_end":954,"column_start":5,"column_end":45}},{"value":"cfg(not(windows))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32326,"byte_end":32346,"line_start":955,"line_end":955,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32989,"byte_end":32994,"line_start":974,"line_end":974,"column_start":12,"column_end":17},"name":"print","qualname":"<BufferWriter>::print","value":"pub fn print(&Self, &Buffer) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Prints the contents of the given buffer.","sig":null,"attributes":[{"value":"/ Prints the contents of the given buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32760,"byte_end":32804,"line_start":969,"line_end":969,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32809,"byte_end":32812,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ It is safe to call this from multiple threads simultaneously. In","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32817,"byte_end":32885,"line_start":971,"line_end":971,"column_start":5,"column_end":73}},{"value":"/ particular, all buffers are written atomically. No interleaving will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32890,"byte_end":32962,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ occur.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":32967,"byte_end":32977,"line_start":973,"line_end":973,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34732,"byte_end":34738,"line_start":1016,"line_end":1016,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write colored text to memory.","sig":null,"attributes":[{"value":"/ Write colored text to memory.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34155,"byte_end":34188,"line_start":1005,"line_end":1005,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34189,"byte_end":34192,"line_start":1006,"line_end":1006,"column_start":1,"column_end":4}},{"value":"/ `Buffer` is a platform independent abstraction for printing colored text to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34193,"byte_end":34272,"line_start":1007,"line_end":1007,"column_start":1,"column_end":80}},{"value":"/ an in memory buffer. When the buffer is printed using a `BufferWriter`, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34273,"byte_end":34352,"line_start":1008,"line_end":1008,"column_start":1,"column_end":80}},{"value":"/ color information will be applied to the output device (a tty on Unix and a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34353,"byte_end":34432,"line_start":1009,"line_end":1009,"column_start":1,"column_end":80}},{"value":"/ console on Windows).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34433,"byte_end":34457,"line_start":1010,"line_end":1010,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34458,"byte_end":34461,"line_start":1011,"line_end":1011,"column_start":1,"column_end":4}},{"value":"/ A `Buffer` is typically created by calling the `BufferWriter.buffer`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34462,"byte_end":34534,"line_start":1012,"line_end":1012,"column_start":1,"column_end":73}},{"value":"/ method, which will take color preferences and the environment into","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34535,"byte_end":34605,"line_start":1013,"line_end":1013,"column_start":1,"column_end":71}},{"value":"/ account. However, buffers can also be manually created using `no_color`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34606,"byte_end":34682,"line_start":1014,"line_end":1014,"column_start":1,"column_end":77}},{"value":"/ `ansi` or `console` (on Windows).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":34683,"byte_end":34720,"line_start":1015,"line_end":1015,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36304,"byte_end":36312,"line_start":1064,"line_end":1064,"column_start":12,"column_end":20},"name":"no_color","qualname":"<Buffer>::no_color","value":"pub fn no_color() -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Create a buffer that drops all color information.\n","sig":null,"attributes":[{"value":"/ Create a buffer that drops all color information.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36239,"byte_end":36292,"line_start":1063,"line_end":1063,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36456,"byte_end":36460,"line_start":1069,"line_end":1069,"column_start":12,"column_end":16},"name":"ansi","qualname":"<Buffer>::ansi","value":"pub fn ansi() -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Create a buffer that uses ANSI escape sequences.\n","sig":null,"attributes":[{"value":"/ Create a buffer that uses ANSI escape sequences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36392,"byte_end":36444,"line_start":1068,"line_end":1068,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36784,"byte_end":36792,"line_start":1080,"line_end":1080,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Buffer>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this buffer is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this buffer is empty.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36719,"byte_end":36772,"line_start":1079,"line_end":1079,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36904,"byte_end":36907,"line_start":1085,"line_end":1085,"column_start":12,"column_end":15},"name":"len","qualname":"<Buffer>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of this buffer in bytes.\n","sig":null,"attributes":[{"value":"/ Returns the length of this buffer in bytes.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":36845,"byte_end":36892,"line_start":1084,"line_end":1084,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37194,"byte_end":37199,"line_start":1095,"line_end":1095,"column_start":12,"column_end":17},"name":"clear","qualname":"<Buffer>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears this buffer.\n","sig":null,"attributes":[{"value":"/ Clears this buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37159,"byte_end":37182,"line_start":1094,"line_end":1094,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37642,"byte_end":37652,"line_start":1108,"line_end":1108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffer>::into_inner","value":"pub fn into_inner(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume this buffer and return the underlying raw data.","sig":null,"attributes":[{"value":"/ Consume this buffer and return the underlying raw data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37460,"byte_end":37519,"line_start":1104,"line_end":1104,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37524,"byte_end":37527,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ On Windows, this unrecoverably drops all color information associated","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37532,"byte_end":37605,"line_start":1106,"line_end":1106,"column_start":5,"column_end":78}},{"value":"/ with the buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37610,"byte_end":37630,"line_start":1107,"line_end":1107,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37932,"byte_end":37940,"line_start":1118,"line_end":1118,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Buffer>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying data of the buffer.\n","sig":null,"attributes":[{"value":"/ Return the underlying data of the buffer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":37875,"byte_end":37920,"line_start":1117,"line_end":1117,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":38253,"byte_end":38265,"line_start":1128,"line_end":1128,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Buffer>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying data of the buffer as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Return the underlying data of the buffer as a mutable slice.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":38177,"byte_end":38241,"line_start":1127,"line_end":1127,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":217},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40248,"byte_end":40255,"line_start":1198,"line_end":1198,"column_start":12,"column_end":19},"name":"NoColor","qualname":"::NoColor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Satisfies `WriteColor` but ignores all color options.\n","sig":null,"attributes":[{"value":"/ Satisfies `WriteColor` but ignores all color options.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40179,"byte_end":40236,"line_start":1197,"line_end":1197,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40400,"byte_end":40403,"line_start":1203,"line_end":1203,"column_start":12,"column_end":15},"name":"new","qualname":"<NoColor<W>>::new","value":"pub fn new(W) -> NoColor<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new writer that satisfies `WriteColor` but drops all color\n information.\n","sig":null,"attributes":[{"value":"/ Create a new writer that satisfies `WriteColor` but drops all color","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40296,"byte_end":40367,"line_start":1201,"line_end":1201,"column_start":5,"column_end":76}},{"value":"/ information.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40372,"byte_end":40388,"line_start":1202,"line_end":1202,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40533,"byte_end":40543,"line_start":1208,"line_end":1208,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<NoColor<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consume this `NoColor` value and return the inner writer.\n","sig":null,"attributes":[{"value":"/ Consume this `NoColor` value and return the inner writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40460,"byte_end":40521,"line_start":1207,"line_end":1207,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40638,"byte_end":40645,"line_start":1213,"line_end":1213,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<NoColor<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Return a reference to the inner writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40583,"byte_end":40626,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40751,"byte_end":40758,"line_start":1218,"line_end":1218,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<NoColor<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the inner writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40688,"byte_end":40739,"line_start":1217,"line_end":1217,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41505,"byte_end":41509,"line_start":1258,"line_end":1258,"column_start":12,"column_end":16},"name":"Ansi","qualname":"::Ansi","value":"","parent":null,"children":[],"decl_id":null,"docs":" Satisfies `WriteColor` using standard ANSI escape sequences.\n","sig":null,"attributes":[{"value":"/ Satisfies `WriteColor` using standard ANSI escape sequences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41429,"byte_end":41493,"line_start":1257,"line_end":1257,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41656,"byte_end":41659,"line_start":1263,"line_end":1263,"column_start":12,"column_end":15},"name":"new","qualname":"<Ansi<W>>::new","value":"pub fn new(W) -> Ansi<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new writer that satisfies `WriteColor` using standard ANSI\n escape sequences.\n","sig":null,"attributes":[{"value":"/ Create a new writer that satisfies `WriteColor` using standard ANSI","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41547,"byte_end":41618,"line_start":1261,"line_end":1261,"column_start":5,"column_end":76}},{"value":"/ escape sequences.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41623,"byte_end":41644,"line_start":1262,"line_end":1262,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41780,"byte_end":41790,"line_start":1268,"line_end":1268,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ansi<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Ansi` value and return the inner writer.\n","sig":null,"attributes":[{"value":"/ Consume this `Ansi` value and return the inner writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41710,"byte_end":41768,"line_start":1267,"line_end":1267,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41885,"byte_end":41892,"line_start":1273,"line_end":1273,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Ansi<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Return a reference to the inner writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41830,"byte_end":41873,"line_start":1272,"line_end":1272,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41998,"byte_end":42005,"line_start":1278,"line_end":1278,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Ansi<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner writer.\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to the inner writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41935,"byte_end":41986,"line_start":1277,"line_end":1277,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":357},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":50986,"byte_end":50995,"line_start":1580,"line_end":1580,"column_start":12,"column_end":21},"name":"ColorSpec","qualname":"::ColorSpec","value":"ColorSpec {  }","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"decl_id":null,"docs":" A color specification.\n","sig":null,"attributes":[{"value":"/ A color specification.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":50909,"byte_end":50935,"line_start":1578,"line_end":1578,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51585,"byte_end":51588,"line_start":1608,"line_end":1608,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorSpec>::new","value":"pub fn new() -> ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Create a new color specification that has no colors or styles.\n","sig":null,"attributes":[{"value":"/ Create a new color specification that has no colors or styles.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51507,"byte_end":51573,"line_start":1607,"line_end":1607,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51687,"byte_end":51689,"line_start":1613,"line_end":1613,"column_start":12,"column_end":14},"name":"fg","qualname":"<ColorSpec>::fg","value":"pub fn fg(&Self) -> Option<&Color>","parent":null,"children":[],"decl_id":null,"docs":" Get the foreground color.\n","sig":null,"attributes":[{"value":"/ Get the foreground color.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51646,"byte_end":51675,"line_start":1612,"line_end":1612,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51800,"byte_end":51806,"line_start":1618,"line_end":1618,"column_start":12,"column_end":18},"name":"set_fg","qualname":"<ColorSpec>::set_fg","value":"pub fn set_fg(&mut Self, Option<Color>) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set the foreground color.\n","sig":null,"attributes":[{"value":"/ Set the foreground color.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51759,"byte_end":51788,"line_start":1617,"line_end":1617,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51956,"byte_end":51958,"line_start":1624,"line_end":1624,"column_start":12,"column_end":14},"name":"bg","qualname":"<ColorSpec>::bg","value":"pub fn bg(&Self) -> Option<&Color>","parent":null,"children":[],"decl_id":null,"docs":" Get the background color.\n","sig":null,"attributes":[{"value":"/ Get the background color.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51915,"byte_end":51944,"line_start":1623,"line_end":1623,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52069,"byte_end":52075,"line_start":1629,"line_end":1629,"column_start":12,"column_end":18},"name":"set_bg","qualname":"<ColorSpec>::set_bg","value":"pub fn set_bg(&mut Self, Option<Color>) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set the background color.\n","sig":null,"attributes":[{"value":"/ Set the background color.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52028,"byte_end":52057,"line_start":1628,"line_end":1628,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52311,"byte_end":52315,"line_start":1637,"line_end":1637,"column_start":12,"column_end":16},"name":"bold","qualname":"<ColorSpec>::bold","value":"pub fn bold(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is bold or not.","sig":null,"attributes":[{"value":"/ Get whether this is bold or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52184,"byte_end":52220,"line_start":1634,"line_end":1634,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52225,"byte_end":52228,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ Note that the bold setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52233,"byte_end":52299,"line_start":1636,"line_end":1636,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52495,"byte_end":52503,"line_start":1644,"line_end":1644,"column_start":12,"column_end":20},"name":"set_bold","qualname":"<ColorSpec>::set_bold","value":"pub fn set_bold(&mut Self, bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is bolded or not.","sig":null,"attributes":[{"value":"/ Set whether the text is bolded or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52362,"byte_end":52404,"line_start":1641,"line_end":1641,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52409,"byte_end":52412,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ Note that the bold setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52417,"byte_end":52483,"line_start":1643,"line_end":1643,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52726,"byte_end":52732,"line_start":1652,"line_end":1652,"column_start":12,"column_end":18},"name":"dimmed","qualname":"<ColorSpec>::dimmed","value":"pub fn dimmed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is dimmed or not.","sig":null,"attributes":[{"value":"/ Get whether this is dimmed or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52595,"byte_end":52633,"line_start":1649,"line_end":1649,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52638,"byte_end":52641,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ Note that the dimmed setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52646,"byte_end":52714,"line_start":1651,"line_end":1651,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52916,"byte_end":52926,"line_start":1659,"line_end":1659,"column_start":12,"column_end":22},"name":"set_dimmed","qualname":"<ColorSpec>::set_dimmed","value":"pub fn set_dimmed(&mut Self, bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is dimmed or not.","sig":null,"attributes":[{"value":"/ Set whether the text is dimmed or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52781,"byte_end":52823,"line_start":1656,"line_end":1656,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52828,"byte_end":52831,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ Note that the dimmed setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":52836,"byte_end":52904,"line_start":1658,"line_end":1658,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53151,"byte_end":53157,"line_start":1667,"line_end":1667,"column_start":12,"column_end":18},"name":"italic","qualname":"<ColorSpec>::italic","value":"pub fn italic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is italic or not.","sig":null,"attributes":[{"value":"/ Get whether this is italic or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53020,"byte_end":53058,"line_start":1664,"line_end":1664,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53063,"byte_end":53066,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ Note that the italic setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53071,"byte_end":53139,"line_start":1666,"line_end":1666,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53345,"byte_end":53355,"line_start":1674,"line_end":1674,"column_start":12,"column_end":22},"name":"set_italic","qualname":"<ColorSpec>::set_italic","value":"pub fn set_italic(&mut Self, bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is italicized or not.","sig":null,"attributes":[{"value":"/ Set whether the text is italicized or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53206,"byte_end":53252,"line_start":1671,"line_end":1671,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53257,"byte_end":53260,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ Note that the italic setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53265,"byte_end":53333,"line_start":1673,"line_end":1673,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53586,"byte_end":53595,"line_start":1682,"line_end":1682,"column_start":12,"column_end":21},"name":"underline","qualname":"<ColorSpec>::underline","value":"pub fn underline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is underline or not.","sig":null,"attributes":[{"value":"/ Get whether this is underline or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53449,"byte_end":53490,"line_start":1679,"line_end":1679,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53495,"byte_end":53498,"line_start":1680,"line_end":1680,"column_start":5,"column_end":8}},{"value":"/ Note that the underline setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53503,"byte_end":53574,"line_start":1681,"line_end":1681,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53789,"byte_end":53802,"line_start":1689,"line_end":1689,"column_start":12,"column_end":25},"name":"set_underline","qualname":"<ColorSpec>::set_underline","value":"pub fn set_underline(&mut Self, bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is underlined or not.","sig":null,"attributes":[{"value":"/ Set whether the text is underlined or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53647,"byte_end":53693,"line_start":1686,"line_end":1686,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53698,"byte_end":53701,"line_start":1687,"line_end":1687,"column_start":5,"column_end":8}},{"value":"/ Note that the underline setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53706,"byte_end":53777,"line_start":1688,"line_end":1688,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54219,"byte_end":54224,"line_start":1701,"line_end":1701,"column_start":12,"column_end":17},"name":"reset","qualname":"<ColorSpec>::reset","value":"pub fn reset(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether reset is enabled or not.","sig":null,"attributes":[{"value":"/ Get whether reset is enabled or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53899,"byte_end":53939,"line_start":1694,"line_end":1694,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53944,"byte_end":53947,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ reset is enabled by default. When disabled and using ANSI escape","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":53952,"byte_end":54020,"line_start":1696,"line_end":1696,"column_start":5,"column_end":73}},{"value":"/ sequences, a \"reset\" code will be emitted every time a `ColorSpec`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54025,"byte_end":54097,"line_start":1697,"line_end":1697,"column_start":5,"column_end":77}},{"value":"/ settings are applied.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54102,"byte_end":54127,"line_start":1698,"line_end":1698,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54132,"byte_end":54135,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ Note that the reset setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54140,"byte_end":54207,"line_start":1700,"line_end":1700,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54821,"byte_end":54830,"line_start":1716,"line_end":1716,"column_start":12,"column_end":21},"name":"set_reset","qualname":"<ColorSpec>::set_reset","value":"pub fn set_reset(&mut Self, bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether to reset the terminal whenever color settings are applied.","sig":null,"attributes":[{"value":"/ Set whether to reset the terminal whenever color settings are applied.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54272,"byte_end":54346,"line_start":1705,"line_end":1705,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54351,"byte_end":54354,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ reset is enabled by default. When disabled and using ANSI escape","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54359,"byte_end":54427,"line_start":1707,"line_end":1707,"column_start":5,"column_end":73}},{"value":"/ sequences, a \"reset\" code will be emitted every time a `ColorSpec`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54432,"byte_end":54504,"line_start":1708,"line_end":1708,"column_start":5,"column_end":77}},{"value":"/ settings are applied.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54509,"byte_end":54534,"line_start":1709,"line_end":1709,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54539,"byte_end":54542,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ Typically this is useful if callers have a requirement to more","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54547,"byte_end":54613,"line_start":1711,"line_end":1711,"column_start":5,"column_end":71}},{"value":"/ scrupulously manage the exact sequence of escape codes that are emitted","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54618,"byte_end":54693,"line_start":1712,"line_end":1712,"column_start":5,"column_end":80}},{"value":"/ when using ANSI for colors.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54698,"byte_end":54729,"line_start":1713,"line_end":1713,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54734,"byte_end":54737,"line_start":1714,"line_end":1714,"column_start":5,"column_end":8}},{"value":"/ Note that the reset setting has no effect in a Windows console.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54742,"byte_end":54809,"line_start":1715,"line_end":1715,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55280,"byte_end":55287,"line_start":1729,"line_end":1729,"column_start":12,"column_end":19},"name":"intense","qualname":"<ColorSpec>::intense","value":"pub fn intense(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is intense or not.","sig":null,"attributes":[{"value":"/ Get whether this is intense or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54923,"byte_end":54962,"line_start":1721,"line_end":1721,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54967,"byte_end":54970,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ On Unix-like systems, this will output the ANSI escape sequence","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":54975,"byte_end":55042,"line_start":1723,"line_end":1723,"column_start":5,"column_end":72}},{"value":"/ that will print a high-intensity version of the color","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55047,"byte_end":55104,"line_start":1724,"line_end":1724,"column_start":5,"column_end":62}},{"value":"/ specified.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55109,"byte_end":55123,"line_start":1725,"line_end":1725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55128,"byte_end":55131,"line_start":1726,"line_end":1726,"column_start":5,"column_end":8}},{"value":"/ On Windows systems, this will output the ANSI escape sequence","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55136,"byte_end":55201,"line_start":1727,"line_end":1727,"column_start":5,"column_end":70}},{"value":"/ that will print a brighter version of the color specified.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55206,"byte_end":55268,"line_start":1728,"line_end":1728,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55698,"byte_end":55709,"line_start":1741,"line_end":1741,"column_start":12,"column_end":23},"name":"set_intense","qualname":"<ColorSpec>::set_intense","value":"pub fn set_intense(&mut Self, bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is intense or not.","sig":null,"attributes":[{"value":"/ Set whether the text is intense or not.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55337,"byte_end":55380,"line_start":1733,"line_end":1733,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55385,"byte_end":55388,"line_start":1734,"line_end":1734,"column_start":5,"column_end":8}},{"value":"/ On Unix-like systems, this will output the ANSI escape sequence","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55393,"byte_end":55460,"line_start":1735,"line_end":1735,"column_start":5,"column_end":72}},{"value":"/ that will print a high-intensity version of the color","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55465,"byte_end":55522,"line_start":1736,"line_end":1736,"column_start":5,"column_end":62}},{"value":"/ specified.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55527,"byte_end":55541,"line_start":1737,"line_end":1737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55546,"byte_end":55549,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ On Windows systems, this will output the ANSI escape sequence","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55554,"byte_end":55619,"line_start":1739,"line_end":1739,"column_start":5,"column_end":70}},{"value":"/ that will print a brighter version of the color specified.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55624,"byte_end":55686,"line_start":1740,"line_end":1740,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55885,"byte_end":55892,"line_start":1747,"line_end":1747,"column_start":12,"column_end":19},"name":"is_none","qualname":"<ColorSpec>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this color specification has no colors or styles.\n","sig":null,"attributes":[{"value":"/ Returns true if this color specification has no colors or styles.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":55804,"byte_end":55873,"line_start":1746,"line_end":1746,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":56221,"byte_end":56226,"line_start":1758,"line_end":1758,"column_start":12,"column_end":17},"name":"clear","qualname":"<ColorSpec>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears this color specification so that it has no color/style settings.\n","sig":null,"attributes":[{"value":"/ Clears this color specification so that it has no color/style settings.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":56134,"byte_end":56209,"line_start":1757,"line_end":1757,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":378},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58023,"byte_end":58028,"line_start":1807,"line_end":1807,"column_start":5,"column_end":10},"name":"Black","qualname":"::Color::Black","value":"Color::Black","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":380},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58034,"byte_end":58038,"line_start":1808,"line_end":1808,"column_start":5,"column_end":9},"name":"Blue","qualname":"::Color::Blue","value":"Color::Blue","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":382},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58044,"byte_end":58049,"line_start":1809,"line_end":1809,"column_start":5,"column_end":10},"name":"Green","qualname":"::Color::Green","value":"Color::Green","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":384},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58055,"byte_end":58058,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8},"name":"Red","qualname":"::Color::Red","value":"Color::Red","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58064,"byte_end":58068,"line_start":1811,"line_end":1811,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::Color::Cyan","value":"Color::Cyan","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":388},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58074,"byte_end":58081,"line_start":1812,"line_end":1812,"column_start":5,"column_end":12},"name":"Magenta","qualname":"::Color::Magenta","value":"Color::Magenta","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":390},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58087,"byte_end":58093,"line_start":1813,"line_end":1813,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::Color::Yellow","value":"Color::Yellow","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58099,"byte_end":58104,"line_start":1814,"line_end":1814,"column_start":5,"column_end":10},"name":"White","qualname":"::Color::White","value":"Color::White","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58110,"byte_end":58117,"line_start":1815,"line_end":1815,"column_start":5,"column_end":12},"name":"Ansi256","qualname":"::Color::Ansi256","value":"Color::Ansi256(u8)","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58127,"byte_end":58130,"line_start":1816,"line_end":1816,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::Color::Rgb","value":"Color::Rgb(u8, u8, u8)","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":402},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58167,"byte_end":58182,"line_start":1818,"line_end":1818,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Color::__Nonexhaustive","value":"Color::__Nonexhaustive","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":377},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58011,"byte_end":58016,"line_start":1806,"line_end":1806,"column_start":10,"column_end":15},"name":"Color","qualname":"::Color","value":"pub enum Color {\n    Black,\n    Blue,\n    Green,\n    Red,\n    Cyan,\n    Magenta,\n    Yellow,\n    White,\n    Ansi256(u8),\n    Rgb(u8, u8, u8),\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":402}],"decl_id":null,"docs":" The set of available colors for the terminal foreground/background.","sig":null,"attributes":[{"value":"/ The set of available colors for the terminal foreground/background.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57000,"byte_end":57071,"line_start":1783,"line_end":1783,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57072,"byte_end":57075,"line_start":1784,"line_end":1784,"column_start":1,"column_end":4}},{"value":"/ The `Ansi256` and `Rgb` colors will only output the correct codes when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57076,"byte_end":57150,"line_start":1785,"line_end":1785,"column_start":1,"column_end":75}},{"value":"/ paired with the `Ansi` `WriteColor` implementation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57151,"byte_end":57206,"line_start":1786,"line_end":1786,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57207,"byte_end":57210,"line_start":1787,"line_end":1787,"column_start":1,"column_end":4}},{"value":"/ The `Ansi256` and `Rgb` color types are not supported when writing colors","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57211,"byte_end":57288,"line_start":1788,"line_end":1788,"column_start":1,"column_end":78}},{"value":"/ on Windows using the console. If they are used on Windows, then they are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57289,"byte_end":57365,"line_start":1789,"line_end":1789,"column_start":1,"column_end":77}},{"value":"/ silently ignored and no colors will be emitted.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57366,"byte_end":57417,"line_start":1790,"line_end":1790,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57418,"byte_end":57421,"line_start":1791,"line_end":1791,"column_start":1,"column_end":4}},{"value":"/ This set may expand over time.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57422,"byte_end":57456,"line_start":1792,"line_end":1792,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57457,"byte_end":57460,"line_start":1793,"line_end":1793,"column_start":1,"column_end":4}},{"value":"/ This type has a `FromStr` impl that can parse colors from their human","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57461,"byte_end":57534,"line_start":1794,"line_end":1794,"column_start":1,"column_end":74}},{"value":"/ readable form. The format is as follows:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57535,"byte_end":57579,"line_start":1795,"line_end":1795,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57580,"byte_end":57583,"line_start":1796,"line_end":1796,"column_start":1,"column_end":4}},{"value":"/ 1. Any of the explicitly listed colors in English. They are matched","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57584,"byte_end":57655,"line_start":1797,"line_end":1797,"column_start":1,"column_end":72}},{"value":"/    case insensitively.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57656,"byte_end":57682,"line_start":1798,"line_end":1798,"column_start":1,"column_end":27}},{"value":"/ 2. A single 8-bit integer, in either decimal or hexadecimal format.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57683,"byte_end":57754,"line_start":1799,"line_end":1799,"column_start":1,"column_end":72}},{"value":"/ 3. A triple of 8-bit integers separated by a comma, where each integer is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57755,"byte_end":57832,"line_start":1800,"line_end":1800,"column_start":1,"column_end":78}},{"value":"/    in decimal or hexadecimal format.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57833,"byte_end":57873,"line_start":1801,"line_end":1801,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57874,"byte_end":57877,"line_start":1802,"line_end":1802,"column_start":1,"column_end":4}},{"value":"/ Hexadecimal numbers are written with a `0x` prefix.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57878,"byte_end":57933,"line_start":1803,"line_end":1803,"column_start":1,"column_end":56}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":57934,"byte_end":57956,"line_start":1804,"line_end":1804,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62519,"byte_end":62534,"line_start":1926,"line_end":1926,"column_start":12,"column_end":27},"name":"ParseColorError","qualname":"::ParseColorError","value":"ParseColorError {  }","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" An error from parsing an invalid color specification.\n","sig":null,"attributes":[{"value":"/ An error from parsing an invalid color specification.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62411,"byte_end":62468,"line_start":1924,"line_end":1924,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62814,"byte_end":62821,"line_start":1940,"line_end":1940,"column_start":12,"column_end":19},"name":"invalid","qualname":"<ParseColorError>::invalid","value":"pub fn invalid(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the string that couldn't be parsed as a valid color.\n","sig":null,"attributes":[{"value":"/ Return the string that couldn't be parsed as a valid color.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62739,"byte_end":62802,"line_start":1939,"line_end":1939,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6974,"byte_end":6977,"line_start":190,"line_end":190,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7994,"byte_end":8005,"line_start":222,"line_end":222,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":10857,"byte_end":10873,"line_start":312,"line_end":312,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":12210,"byte_end":12226,"line_start":350,"line_end":350,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":13184,"byte_end":13204,"line_start":379,"line_end":379,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15474,"byte_end":15488,"line_start":449,"line_end":449,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":17024,"byte_end":17042,"line_start":488,"line_end":488,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18222,"byte_end":18244,"line_start":523,"line_end":523,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19539,"byte_end":19550,"line_start":553,"line_end":553,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":21499,"byte_end":21513,"line_start":605,"line_end":605,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":21732,"byte_end":21746,"line_start":617,"line_end":617,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":22172,"byte_end":22190,"line_start":639,"line_end":639,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":22417,"byte_end":22435,"line_start":651,"line_end":651,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":22861,"byte_end":22883,"line_start":673,"line_end":673,"column_start":20,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":23102,"byte_end":23124,"line_start":685,"line_end":685,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":23636,"byte_end":23647,"line_start":710,"line_end":710,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":24359,"byte_end":24370,"line_start":732,"line_end":732,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":25812,"byte_end":25827,"line_start":778,"line_end":778,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":26653,"byte_end":26668,"line_start":800,"line_end":800,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28898,"byte_end":28910,"line_start":867,"line_end":867,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":35301,"byte_end":35307,"line_start":1032,"line_end":1032,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":38551,"byte_end":38557,"line_start":1138,"line_end":1138,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":39200,"byte_end":39206,"line_start":1160,"line_end":1160,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40279,"byte_end":40286,"line_start":1200,"line_end":1200,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40844,"byte_end":40851,"line_start":1223,"line_end":1223,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41087,"byte_end":41094,"line_start":1235,"line_end":1235,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41533,"byte_end":41537,"line_start":1260,"line_end":1260,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":42091,"byte_end":42095,"line_start":1283,"line_end":1283,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":42331,"byte_end":42335,"line_start":1295,"line_end":1295,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":43291,"byte_end":43295,"line_start":1338,"line_end":1338,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":47464,"byte_end":47468,"line_start":1453,"line_end":1453,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51185,"byte_end":51194,"line_start":1591,"line_end":1591,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51491,"byte_end":51500,"line_start":1606,"line_end":1606,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58192,"byte_end":58197,"line_start":1821,"line_end":1821,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62717,"byte_end":62732,"line_start":1938,"line_end":1938,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62890,"byte_end":62905,"line_start":1945,"line_end":1945,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":63223,"byte_end":63238,"line_start":1956,"line_end":1956,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":64131,"byte_end":64136,"line_start":1984,"line_end":1984,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":64766,"byte_end":64785,"line_start":2008,"line_end":2008,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":65556,"byte_end":65575,"line_start":2036,"line_end":2036,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":65955,"byte_end":65974,"line_start":2051,"line_end":2051,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":5122,"byte_end":5127,"line_start":140,"line_end":140,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":4459},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":6974,"byte_end":6977,"line_start":190,"line_end":190,"column_start":45,"column_end":48},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":7994,"byte_end":8005,"line_start":222,"line_end":222,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":10857,"byte_end":10873,"line_start":312,"line_end":312,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":59},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":12210,"byte_end":12226,"line_start":350,"line_end":350,"column_start":20,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":59},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":13184,"byte_end":13204,"line_start":379,"line_end":379,"column_start":24,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":78},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":15474,"byte_end":15488,"line_start":449,"line_end":449,"column_start":6,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":17024,"byte_end":17042,"line_start":488,"line_end":488,"column_start":10,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":18222,"byte_end":18244,"line_start":523,"line_end":523,"column_start":6,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":95},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":19539,"byte_end":19550,"line_start":553,"line_end":553,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":21499,"byte_end":21513,"line_start":605,"line_end":605,"column_start":20,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":90},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":21732,"byte_end":21746,"line_start":617,"line_end":617,"column_start":21,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":90},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":22172,"byte_end":22190,"line_start":639,"line_end":639,"column_start":24,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":22417,"byte_end":22435,"line_start":651,"line_end":651,"column_start":25,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":92},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":22861,"byte_end":22883,"line_start":673,"line_end":673,"column_start":20,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":95},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":23102,"byte_end":23124,"line_start":685,"line_end":685,"column_start":21,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":95},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":23636,"byte_end":23647,"line_start":710,"line_end":710,"column_start":34,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":24359,"byte_end":24370,"line_start":732,"line_end":732,"column_start":35,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":97},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":25812,"byte_end":25827,"line_start":778,"line_end":778,"column_start":38,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":105},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":26653,"byte_end":26668,"line_start":800,"line_end":800,"column_start":39,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":105},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":28898,"byte_end":28910,"line_start":867,"line_end":867,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":35301,"byte_end":35307,"line_start":1032,"line_end":1032,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":38551,"byte_end":38557,"line_start":1138,"line_end":1138,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":189},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":39200,"byte_end":39206,"line_start":1160,"line_end":1160,"column_start":21,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":189},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40279,"byte_end":40286,"line_start":1200,"line_end":1200,"column_start":16,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":40844,"byte_end":40851,"line_start":1223,"line_end":1223,"column_start":34,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":217},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41087,"byte_end":41094,"line_start":1235,"line_end":1235,"column_start":35,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":217},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":41533,"byte_end":41537,"line_start":1260,"line_end":1260,"column_start":16,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":42091,"byte_end":42095,"line_start":1283,"line_end":1283,"column_start":34,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":4459}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":42331,"byte_end":42335,"line_start":1295,"line_end":1295,"column_start":35,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":237},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":43291,"byte_end":43295,"line_start":1338,"line_end":1338,"column_start":20,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":47464,"byte_end":47468,"line_start":1453,"line_end":1453,"column_start":25,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":10764},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51185,"byte_end":51194,"line_start":1591,"line_end":1591,"column_start":18,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2997}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":51491,"byte_end":51500,"line_start":1606,"line_end":1606,"column_start":6,"column_end":15},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":58192,"byte_end":58197,"line_start":1821,"line_end":1821,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62717,"byte_end":62732,"line_start":1938,"line_end":1938,"column_start":6,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":62890,"byte_end":62905,"line_start":1945,"line_end":1945,"column_start":23,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":416},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":63223,"byte_end":63238,"line_start":1956,"line_end":1956,"column_start":23,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":9560}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":64131,"byte_end":64136,"line_start":1984,"line_end":1984,"column_start":18,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":12144}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":64766,"byte_end":64785,"line_start":2008,"line_end":2008,"column_start":20,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":65556,"byte_end":65575,"line_start":2036,"line_end":2036,"column_start":36,"column_end":55},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":310},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.1.3/src/lib.rs","byte_start":65955,"byte_end":65974,"line_start":2051,"line_end":2051,"column_start":34,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":310},"to":{"krate":1,"index":4459}}]}