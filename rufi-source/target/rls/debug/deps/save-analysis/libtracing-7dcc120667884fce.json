{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32","program":"/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tracing","--edition=2018","/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=7dcc120667884fce","-C","extra-filename=-7dcc120667884fce","--out-dir","/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","-L","dependency=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps","--extern","cfg_if=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libcfg_if-2120cfe954d0c3f5.rmeta","--extern","pin_project_lite=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libpin_project_lite-a998cf3a0c0f2ffc.rmeta","--extern","tracing_core=/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libtracing_core-adb7eb37e3aad02a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ozz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ozz/Desktop/dev/rust/rufi/target/rls/debug/deps/libtracing-7dcc120667884fce.rmeta"},"prelude":{"crate_id":{"name":"tracing","disambiguator":[10611824624856974296,0]},"crate_root":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src","external_crates":[{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":20,"id":{"name":"tracing_core","disambiguator":[18153404294366702238,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","num":21,"id":{"name":"lazy_static","disambiguator":[9708727071027780738,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[10864849255587560100,0]}},{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","num":23,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}}],"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":0,"byte_end":46658,"line_start":1,"line_end":1162,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":38902,"byte_end":38912,"line_start":937,"line_end":937,"column_start":27,"column_end":37},"alias_span":null,"name":"Instrument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":811},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":38941,"byte_end":38949,"line_start":938,"line_end":938,"column_start":28,"column_end":36},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":828},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":38958,"byte_end":38963,"line_start":938,"line_end":938,"column_start":45,"column_end":50},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":290},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":38972,"byte_end":38977,"line_start":938,"line_end":938,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":693},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":38991,"byte_end":39001,"line_start":938,"line_end":938,"column_start":78,"column_end":88},"alias_span":null,"name":"Subscriber","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1168},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39040,"byte_end":39042,"line_start":941,"line_end":941,"column_start":21,"column_end":23},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":11},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39088,"byte_end":39096,"line_start":945,"line_end":945,"column_start":5,"column_end":13},"alias_span":null,"name":"callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":56},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39105,"byte_end":39113,"line_start":945,"line_end":945,"column_start":22,"column_end":30},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":443},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39120,"byte_end":39128,"line_start":946,"line_end":946,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":4},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39120,"byte_end":39128,"line_start":946,"line_end":946,"column_start":5,"column_end":13},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":218},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39156,"byte_end":39161,"line_start":948,"line_end":948,"column_start":24,"column_end":29},"alias_span":null,"name":"event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":1083},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39163,"byte_end":39168,"line_start":948,"line_end":948,"column_start":31,"column_end":36},"alias_span":null,"name":"Level","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":468},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39170,"byte_end":39178,"line_start":948,"line_end":948,"column_start":38,"column_end":46},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39217,"byte_end":39221,"line_start":951,"line_end":951,"column_start":21,"column_end":25},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":151},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125925,"byte_end":125936,"line_start":132,"line_end":132,"column_start":35,"column_end":46},"alias_span":null,"name":"set_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":148},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126043,"byte_end":126055,"line_start":135,"line_end":135,"column_start":35,"column_end":47},"alias_span":null,"name":"with_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":819},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126162,"byte_end":126174,"line_start":138,"line_end":138,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":157},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126216,"byte_end":126227,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"alias_span":null,"name":"get_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":152},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126229,"byte_end":126247,"line_start":140,"line_end":140,"column_start":18,"column_end":36},"alias_span":null,"name":"set_global_default","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":811},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126249,"byte_end":126257,"line_start":140,"line_end":140,"column_start":38,"column_end":46},"alias_span":null,"name":"Dispatch","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":824},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126259,"byte_end":126280,"line_start":140,"line_end":140,"column_start":48,"column_end":69},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":20,"index":153},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":126588,"byte_end":126600,"line_start":149,"line_end":149,"column_start":35,"column_end":47},"alias_span":null,"name":"has_been_set","value":"","parent":{"krate":0,"index":69}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131765,"byte_end":131766,"line_start":114,"line_end":114,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"Field, Value, ValueSet","parent":{"krate":0,"index":95}},{"kind":"Use","ref_id":{"krate":20,"index":1117},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147377,"byte_end":147398,"line_start":53,"line_end":53,"column_start":34,"column_end":55},"alias_span":null,"name":"ParseLevelFilterError","value":"","parent":{"krate":0,"index":182}},{"kind":"Use","ref_id":{"krate":20,"index":1101},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147400,"byte_end":147411,"line_start":53,"line_end":53,"column_start":57,"column_end":68},"alias_span":null,"name":"LevelFilter","value":"","parent":{"krate":0,"index":182}},{"kind":"Use","ref_id":{"krate":20,"index":1185},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162880,"byte_end":162890,"line_start":320,"line_end":320,"column_start":30,"column_end":40},"alias_span":null,"name":"Attributes","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":20,"index":1168},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162892,"byte_end":162894,"line_start":320,"line_end":320,"column_start":42,"column_end":44},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":20,"index":1193},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162896,"byte_end":162902,"line_start":320,"line_end":320,"column_start":46,"column_end":52},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":191}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209169,"byte_end":209170,"line_start":2,"line_end":2,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Subscriber, Interest","parent":{"krate":0,"index":337}},{"kind":"Use","ref_id":{"krate":20,"index":819},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209278,"byte_end":209290,"line_start":6,"line_end":6,"column_start":35,"column_end":47},"alias_span":null,"name":"DefaultGuard","value":"","parent":{"krate":0,"index":337}},{"kind":"Use","ref_id":{"krate":20,"index":824},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211750,"byte_end":211771,"line_start":68,"line_end":68,"column_start":35,"column_end":56},"alias_span":null,"name":"SetGlobalDefaultError","value":"","parent":{"krate":0,"index":337}},{"kind":"Use","ref_id":{"krate":20,"index":56},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39642,"byte_end":39650,"line_start":971,"line_end":971,"column_start":30,"column_end":38},"alias_span":null,"name":"Callsite","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":2,"index":28},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39811,"byte_end":39817,"line_start":977,"line_end":977,"column_start":19,"column_end":25},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":353}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":0,"byte_end":46658,"line_start":1,"line_end":1162,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":69},{"krate":0,"index":95},{"krate":0,"index":113},{"krate":0,"index":182},{"krate":0,"index":191},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":353},{"krate":0,"index":398}],"decl_id":null,"docs":" A scoped, structured logging and diagnostics system.","sig":null,"attributes":[{"value":"/ A scoped, structured logging and diagnostics system.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":0,"byte_end":56,"line_start":1,"line_end":1,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":57,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":61,"byte_end":75,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":76,"byte_end":79,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `tracing` is a framework for instrumenting Rust programs to collect","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":80,"byte_end":151,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ structured, event-based diagnostic information.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":152,"byte_end":203,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":204,"byte_end":207,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In asynchronous systems like Tokio, interpreting traditional log messages can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":208,"byte_end":289,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ often be quite challenging. Since individual tasks are multiplexed on the same","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":290,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ thread, associated events and log lines are intermixed making it difficult to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":373,"byte_end":454,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/ trace the logic flow. `tracing` expands upon logging-style diagnostics by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":455,"byte_end":532,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ allowing libraries and applications to record structured events with additional","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":533,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ information about *temporality* and *causality* — unlike a log message, a span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":617,"byte_end":701,"line_start":13,"line_end":13,"column_start":1,"column_end":83}},{"value":"/ in `tracing` has a beginning and end time, may be entered and exited by the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":702,"byte_end":781,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ flow of execution, and may exist within a nested tree of similar spans. In","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":782,"byte_end":860,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ addition, `tracing` spans are *structured*, with the ability to record typed","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":861,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ data as well as textual messages.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":942,"byte_end":979,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":980,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The `tracing` crate provides the APIs necessary for instrumenting libraries","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":984,"byte_end":1063,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and applications to emit trace data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1064,"byte_end":1104,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.49+][msrv]*","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1109,"byte_end":1163,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1164,"byte_end":1167,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1168,"byte_end":1204,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ # Core Concepts","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1205,"byte_end":1224,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1225,"byte_end":1228,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The core of `tracing`'s API is composed of _spans_, _events_ and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1229,"byte_end":1297,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ _subscribers_. We'll cover these in turn.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1298,"byte_end":1343,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1344,"byte_end":1347,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1348,"byte_end":1360,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1361,"byte_end":1364,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To record the flow of execution through a program, `tracing` introduces the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1365,"byte_end":1444,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ concept of [spans]. Unlike a log line that represents a _moment in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1445,"byte_end":1515,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ time_, a span represents a _period of time_ with a beginning and an end. When a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1516,"byte_end":1599,"line_start":34,"line_end":34,"column_start":1,"column_end":84}},{"value":"/ program begins executing in a context or performing a unit of work, it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1600,"byte_end":1674,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ _enters_ that context's span, and when it stops executing in that context,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1675,"byte_end":1753,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ it _exits_ the span. The span in which a thread is currently executing is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1754,"byte_end":1831,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ referred to as that thread's _current_ span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1832,"byte_end":1880,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1881,"byte_end":1884,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1885,"byte_end":1901,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1902,"byte_end":1909,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1910,"byte_end":1941,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1942,"byte_end":1959,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":1960,"byte_end":2006,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ // `enter` returns a RAII guard which, when dropped, exits the span. this","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2007,"byte_end":2084,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ // indicates that we are in the span for the current lexical scope.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2085,"byte_end":2156,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2157,"byte_end":2187,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ // perform some work in the context of `my_span`...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2188,"byte_end":2243,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2244,"byte_end":2251,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2252,"byte_end":2258,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2259,"byte_end":2262,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The [`span` module][span]'s documentation provides further details on how to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2263,"byte_end":2343,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ use spans.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2344,"byte_end":2358,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2359,"byte_end":2362,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2363,"byte_end":2489,"line_start":55,"line_end":55,"column_start":1,"column_end":127}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/  **Warning**: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2494,"byte_end":2562,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/  `Span::enter` may produce incorrect traces if the returned drop","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2563,"byte_end":2631,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/  guard is held across an await point. See","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2632,"byte_end":2677,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/  [the method documentation][Span#in-asynchronous-code] for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2678,"byte_end":2749,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2750,"byte_end":2753,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ </pre></div>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2754,"byte_end":2770,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2771,"byte_end":2774,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Events","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2775,"byte_end":2788,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2789,"byte_end":2792,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ An [`Event`] represents a _moment_ in time. It signifies something that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2793,"byte_end":2868,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/ happened while a trace was being recorded. `Event`s are comparable to the log","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2869,"byte_end":2950,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/ records emitted by unstructured logging code, but unlike a typical log line,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":2951,"byte_end":3031,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ an `Event` may occur within the context of a span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3032,"byte_end":3086,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3087,"byte_end":3090,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3091,"byte_end":3107,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3108,"byte_end":3115,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ use tracing::{event, span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3116,"byte_end":3154,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3155,"byte_end":3158,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3159,"byte_end":3176,"line_start":75,"line_end":75,"column_start":1,"column_end":18}},{"value":"/ // records an event outside of any span context:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3177,"byte_end":3229,"line_start":76,"line_end":76,"column_start":1,"column_end":53}},{"value":"/ event!(Level::INFO, \"something happened\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3230,"byte_end":3276,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3277,"byte_end":3280,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3281,"byte_end":3326,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/ let _guard = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3327,"byte_end":3357,"line_start":80,"line_end":80,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3358,"byte_end":3361,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // records an event within \"my_span\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3362,"byte_end":3403,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/ event!(Level::DEBUG, \"something happened inside my_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3404,"byte_end":3466,"line_start":83,"line_end":83,"column_start":1,"column_end":63}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3467,"byte_end":3474,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3475,"byte_end":3481,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3482,"byte_end":3485,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ In general, events should be used to represent points in time _within_ a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3486,"byte_end":3562,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ span — a request returned with a given status code, _n_ new items were","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3563,"byte_end":3639,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ taken from a queue, and so on.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3640,"byte_end":3674,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3675,"byte_end":3678,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`Event` struct][`Event`] documentation provides further details on using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3679,"byte_end":3760,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/ events.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3761,"byte_end":3772,"line_start":92,"line_end":92,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3773,"byte_end":3776,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Subscribers","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3777,"byte_end":3795,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3796,"byte_end":3799,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ As `Span`s and `Event`s occur, they are recorded or aggregated by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3800,"byte_end":3869,"line_start":96,"line_end":96,"column_start":1,"column_end":70}},{"value":"/ implementations of the [`Subscriber`] trait. `Subscriber`s are notified","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3870,"byte_end":3945,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ when an `Event` takes place and when a `Span` is entered or exited. These","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":3946,"byte_end":4023,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ notifications are represented by the following `Subscriber` trait methods:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4024,"byte_end":4102,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4103,"byte_end":4106,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ + [`event`][Subscriber::event], called when an `Event` takes place,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4107,"byte_end":4178,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/ + [`enter`], called when execution enters a `Span`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4179,"byte_end":4234,"line_start":102,"line_end":102,"column_start":1,"column_end":56}},{"value":"/ + [`exit`], called when execution exits a `Span`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4235,"byte_end":4287,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4288,"byte_end":4291,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ In addition, subscribers may implement the [`enabled`] function to _filter_","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4292,"byte_end":4371,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ the notifications they receive based on [metadata] describing each `Span`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4372,"byte_end":4449,"line_start":106,"line_end":106,"column_start":1,"column_end":78}},{"value":"/ or `Event`. If a call to `Subscriber::enabled` returns `false` for a given","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4450,"byte_end":4528,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"/ set of metadata, that `Subscriber` will *not* be notified about the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4529,"byte_end":4600,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ corresponding `Span` or `Event`. For performance reasons, if no currently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4601,"byte_end":4678,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ active subscribers express interest in a given set of metadata by returning","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4679,"byte_end":4758,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ `true`, then the corresponding `Span` or `Event` will never be constructed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4759,"byte_end":4838,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4839,"byte_end":4842,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4843,"byte_end":4854,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4855,"byte_end":4858,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ First, add this to your `Cargo.toml`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4859,"byte_end":4900,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4901,"byte_end":4904,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4905,"byte_end":4916,"line_start":117,"line_end":117,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4917,"byte_end":4935,"line_start":118,"line_end":118,"column_start":1,"column_end":19}},{"value":"/ tracing = \"0.1\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4936,"byte_end":4955,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4956,"byte_end":4963,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4964,"byte_end":4967,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.42+][msrv]*","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":4968,"byte_end":5022,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5023,"byte_end":5026,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Recording Spans and Events","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5027,"byte_end":5060,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5061,"byte_end":5064,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Spans and events are recorded using macros.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5065,"byte_end":5112,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5113,"byte_end":5116,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ### Spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5117,"byte_end":5130,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5131,"byte_end":5134,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] macro expands to a [`Span` struct][`Span`] which is used to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5135,"byte_end":5212,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ record a span. The [`Span::enter`] method on that struct records that the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5213,"byte_end":5290,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ span has been entered, and returns a [RAII] guard object, which will exit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5291,"byte_end":5368,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ the span when dropped.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5369,"byte_end":5395,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5396,"byte_end":5399,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5400,"byte_end":5416,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5417,"byte_end":5420,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5421,"byte_end":5432,"line_start":137,"line_end":137,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5433,"byte_end":5464,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5465,"byte_end":5482,"line_start":139,"line_end":139,"column_start":1,"column_end":18}},{"value":"/ // Construct a new span named \"my span\" with trace log level.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5483,"byte_end":5548,"line_start":140,"line_end":140,"column_start":1,"column_end":66}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5549,"byte_end":5595,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5596,"byte_end":5599,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ // Enter the span, returning a guard object.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5600,"byte_end":5648,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5649,"byte_end":5679,"line_start":144,"line_end":144,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5680,"byte_end":5683,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ // Any trace events that occur before the guard is dropped will occur","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5684,"byte_end":5757,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"/ // within the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5758,"byte_end":5781,"line_start":147,"line_end":147,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5782,"byte_end":5785,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ // Dropping the guard will exit the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5786,"byte_end":5831,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5832,"byte_end":5839,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5840,"byte_end":5847,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5848,"byte_end":5851,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The [`#[instrument]`][instrument] attribute provides an easy way to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5852,"byte_end":5923,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/ add `tracing` spans to functions. A function annotated with `#[instrument]`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":5924,"byte_end":6003,"line_start":154,"line_end":154,"column_start":1,"column_end":80}},{"value":"/ will create and enter a span with that function's name every time the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6004,"byte_end":6077,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ function is called, with arguments to that function will be recorded as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6078,"byte_end":6153,"line_start":156,"line_end":156,"column_start":1,"column_end":76}},{"value":"/ fields using `fmt::Debug`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6154,"byte_end":6184,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6185,"byte_end":6188,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6189,"byte_end":6205,"line_start":159,"line_end":159,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6206,"byte_end":6219,"line_start":160,"line_end":160,"column_start":1,"column_end":14}},{"value":"/ # // this doctest is ignored because we don't have a way to say","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6220,"byte_end":6287,"line_start":161,"line_end":161,"column_start":1,"column_end":68}},{"value":"/ # // that it should only be run with cfg(feature = \"attributes\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6288,"byte_end":6356,"line_start":162,"line_end":162,"column_start":1,"column_end":69}},{"value":"/ use tracing::{Level, event, instrument};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6357,"byte_end":6401,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6402,"byte_end":6405,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #[instrument]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6406,"byte_end":6423,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"/ pub fn my_function(my_arg: usize) {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6424,"byte_end":6463,"line_start":166,"line_end":166,"column_start":1,"column_end":40}},{"value":"/     // This event will be recorded inside a span named `my_function` with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6464,"byte_end":6545,"line_start":167,"line_end":167,"column_start":1,"column_end":82}},{"value":"/     // field `my_arg`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6546,"byte_end":6572,"line_start":168,"line_end":168,"column_start":1,"column_end":27}},{"value":"/     event!(Level::INFO, \"inside my_function!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6573,"byte_end":6624,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6625,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6640,"byte_end":6645,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ # fn main() {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6646,"byte_end":6664,"line_start":172,"line_end":172,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6665,"byte_end":6672,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6673,"byte_end":6676,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For functions which don't have built-in tracing support and can't have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6677,"byte_end":6751,"line_start":175,"line_end":175,"column_start":1,"column_end":75}},{"value":"/ the `#[instrument]` attribute applied (such as from an external crate),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6752,"byte_end":6827,"line_start":176,"line_end":176,"column_start":1,"column_end":76}},{"value":"/ the [`Span` struct][`Span`] has a [`in_scope()` method][`in_scope`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6828,"byte_end":6899,"line_start":177,"line_end":177,"column_start":1,"column_end":72}},{"value":"/ which can be used to easily wrap synchonous code in a span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6900,"byte_end":6963,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6964,"byte_end":6967,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6968,"byte_end":6984,"line_start":180,"line_end":180,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6985,"byte_end":6996,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":6997,"byte_end":7024,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7025,"byte_end":7028,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # fn doc() -> Result<(), ()> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7029,"byte_end":7063,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/ # mod serde_json {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7064,"byte_end":7086,"line_start":185,"line_end":185,"column_start":1,"column_end":23}},{"value":"/ #    pub(crate) fn from_slice(buf: &[u8]) -> Result<(), ()> { Ok(()) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7087,"byte_end":7161,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7162,"byte_end":7169,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # let buf: [u8; 0] = [];","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7170,"byte_end":7198,"line_start":188,"line_end":188,"column_start":1,"column_end":29}},{"value":"/ let json = info_span!(\"json.parse\").in_scope(|| serde_json::from_slice(&buf))?;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7199,"byte_end":7282,"line_start":189,"line_end":189,"column_start":1,"column_end":84}},{"value":"/ # let _ = json; // suppress unused variable warning","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7283,"byte_end":7338,"line_start":190,"line_end":190,"column_start":1,"column_end":56}},{"value":"/ # Ok(())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7339,"byte_end":7351,"line_start":191,"line_end":191,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7352,"byte_end":7359,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7360,"byte_end":7367,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7368,"byte_end":7371,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ You can find more examples showing how to use this crate [here][examples].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7372,"byte_end":7450,"line_start":195,"line_end":195,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7451,"byte_end":7454,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [RAII]: https://github.com/rust-unofficial/patterns/blob/master/patterns/behavioural/RAII.md","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7455,"byte_end":7551,"line_start":197,"line_end":197,"column_start":1,"column_end":97}},{"value":"/ [examples]: https://github.com/tokio-rs/tracing/tree/master/examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7552,"byte_end":7624,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7625,"byte_end":7628,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ### Events","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7629,"byte_end":7643,"line_start":200,"line_end":200,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7644,"byte_end":7647,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ [`Event`]s are recorded using the [`event!`] macro:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7648,"byte_end":7703,"line_start":202,"line_end":202,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7704,"byte_end":7707,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7708,"byte_end":7719,"line_start":204,"line_end":204,"column_start":1,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7720,"byte_end":7737,"line_start":205,"line_end":205,"column_start":1,"column_end":18}},{"value":"/ use tracing::{event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7738,"byte_end":7770,"line_start":206,"line_end":206,"column_start":1,"column_end":33}},{"value":"/ event!(Level::INFO, \"something has happened!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7771,"byte_end":7822,"line_start":207,"line_end":207,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7823,"byte_end":7830,"line_start":208,"line_end":208,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7831,"byte_end":7838,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7839,"byte_end":7842,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ## Using the Macros","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7843,"byte_end":7866,"line_start":211,"line_end":211,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7867,"byte_end":7870,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ The [`span!`] and [`event!`] macros as well as the `#[instrument]` attribute","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7871,"byte_end":7951,"line_start":213,"line_end":213,"column_start":1,"column_end":81}},{"value":"/ use fairly similar syntax, with some exceptions.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":7952,"byte_end":8004,"line_start":214,"line_end":214,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8005,"byte_end":8008,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ### Configuring Attributes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8009,"byte_end":8039,"line_start":216,"line_end":216,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8040,"byte_end":8043,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Both macros require a [`Level`] specifying the verbosity of the span or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8044,"byte_end":8119,"line_start":218,"line_end":218,"column_start":1,"column_end":76}},{"value":"/ event. Optionally, the [target] and [parent span] may be overridden. If the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8120,"byte_end":8199,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ target and parent span are not overridden, they will default to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8200,"byte_end":8271,"line_start":220,"line_end":220,"column_start":1,"column_end":72}},{"value":"/ module path where the macro was invoked and the current span (as determined","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8272,"byte_end":8351,"line_start":221,"line_end":221,"column_start":1,"column_end":80}},{"value":"/ by the subscriber), respectively.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8352,"byte_end":8389,"line_start":222,"line_end":222,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8390,"byte_end":8393,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8394,"byte_end":8410,"line_start":224,"line_end":224,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8411,"byte_end":8414,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8415,"byte_end":8422,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8423,"byte_end":8463,"line_start":227,"line_end":227,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8464,"byte_end":8481,"line_start":228,"line_end":228,"column_start":1,"column_end":18}},{"value":"/ span!(target: \"app_spans\", Level::TRACE, \"my span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8482,"byte_end":8538,"line_start":229,"line_end":229,"column_start":1,"column_end":57}},{"value":"/ event!(target: \"app_events\", Level::INFO, \"something has happened!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8539,"byte_end":8612,"line_start":230,"line_end":230,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8613,"byte_end":8620,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8621,"byte_end":8628,"line_start":232,"line_end":232,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8629,"byte_end":8636,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8637,"byte_end":8677,"line_start":234,"line_end":234,"column_start":1,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8678,"byte_end":8695,"line_start":235,"line_end":235,"column_start":1,"column_end":18}},{"value":"/ let span = span!(Level::TRACE, \"my span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8696,"byte_end":8742,"line_start":236,"line_end":236,"column_start":1,"column_end":47}},{"value":"/ event!(parent: &span, Level::INFO, \"something has happened!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8743,"byte_end":8809,"line_start":237,"line_end":237,"column_start":1,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8810,"byte_end":8817,"line_start":238,"line_end":238,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8818,"byte_end":8825,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8826,"byte_end":8829,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ The span macros also take a string literal after the level, to set the name","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8830,"byte_end":8909,"line_start":241,"line_end":241,"column_start":1,"column_end":80}},{"value":"/ of the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8910,"byte_end":8926,"line_start":242,"line_end":242,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8927,"byte_end":8930,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ### Recording Fields","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8931,"byte_end":8955,"line_start":244,"line_end":244,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8956,"byte_end":8959,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ Structured fields on spans and events are specified using the syntax","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":8960,"byte_end":9032,"line_start":246,"line_end":246,"column_start":1,"column_end":73}},{"value":"/ `field_name = field_value`. Fields are separated by commas.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9033,"byte_end":9096,"line_start":247,"line_end":247,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9097,"byte_end":9100,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9101,"byte_end":9108,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9109,"byte_end":9143,"line_start":250,"line_end":250,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9144,"byte_end":9161,"line_start":251,"line_end":251,"column_start":1,"column_end":18}},{"value":"/ // records an event with two fields:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9162,"byte_end":9202,"line_start":252,"line_end":252,"column_start":1,"column_end":41}},{"value":"/ //  - \"answer\", with the value 42","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9203,"byte_end":9240,"line_start":253,"line_end":253,"column_start":1,"column_end":38}},{"value":"/ //  - \"question\", with the value \"life, the universe and everything\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9241,"byte_end":9313,"line_start":254,"line_end":254,"column_start":1,"column_end":73}},{"value":"/ event!(Level::INFO, answer = 42, question = \"life, the universe, and everything\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9314,"byte_end":9400,"line_start":255,"line_end":255,"column_start":1,"column_end":87}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9401,"byte_end":9408,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9409,"byte_end":9416,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9417,"byte_end":9420,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ As shorthand, local variables may be used as field values without an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9421,"byte_end":9493,"line_start":259,"line_end":259,"column_start":1,"column_end":73}},{"value":"/ assignment, similar to [struct initializers]. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9494,"byte_end":9556,"line_start":260,"line_end":260,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9557,"byte_end":9560,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9561,"byte_end":9568,"line_start":262,"line_end":262,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9569,"byte_end":9602,"line_start":263,"line_end":263,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9603,"byte_end":9620,"line_start":264,"line_end":264,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9621,"byte_end":9645,"line_start":265,"line_end":265,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9646,"byte_end":9649,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ span!(Level::TRACE, \"login\", user);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9650,"byte_end":9689,"line_start":267,"line_end":267,"column_start":1,"column_end":40}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9690,"byte_end":9714,"line_start":268,"line_end":268,"column_start":1,"column_end":25}},{"value":"/ span!(Level::TRACE, \"login\", user = user);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9715,"byte_end":9761,"line_start":269,"line_end":269,"column_start":1,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9762,"byte_end":9769,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9770,"byte_end":9776,"line_start":271,"line_end":271,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9777,"byte_end":9780,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Field names can include dots, but should not be terminated by them:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9781,"byte_end":9852,"line_start":273,"line_end":273,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9853,"byte_end":9860,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9861,"byte_end":9894,"line_start":275,"line_end":275,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9895,"byte_end":9912,"line_start":276,"line_end":276,"column_start":1,"column_end":18}},{"value":"/ let user = \"ferris\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9913,"byte_end":9937,"line_start":277,"line_end":277,"column_start":1,"column_end":25}},{"value":"/ let email = \"ferris@rust-lang.org\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9938,"byte_end":9977,"line_start":278,"line_end":278,"column_start":1,"column_end":40}},{"value":"/ span!(Level::TRACE, \"login\", user, user.email = email);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":9978,"byte_end":10037,"line_start":279,"line_end":279,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10038,"byte_end":10045,"line_start":280,"line_end":280,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10046,"byte_end":10052,"line_start":281,"line_end":281,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10053,"byte_end":10056,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Since field names can include dots, fields on local structs can be used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10057,"byte_end":10132,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ using the local variable shorthand:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10133,"byte_end":10172,"line_start":284,"line_end":284,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10173,"byte_end":10180,"line_start":285,"line_end":285,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10181,"byte_end":10214,"line_start":286,"line_end":286,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10215,"byte_end":10232,"line_start":287,"line_end":287,"column_start":1,"column_end":18}},{"value":"/ # struct User {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10233,"byte_end":10252,"line_start":288,"line_end":288,"column_start":1,"column_end":20}},{"value":"/ #    name: &'static str,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10253,"byte_end":10281,"line_start":289,"line_end":289,"column_start":1,"column_end":29}},{"value":"/ #    email: &'static str,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10282,"byte_end":10311,"line_start":290,"line_end":290,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10312,"byte_end":10319,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ let user = User {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10320,"byte_end":10341,"line_start":292,"line_end":292,"column_start":1,"column_end":22}},{"value":"/     name: \"ferris\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10342,"byte_end":10365,"line_start":293,"line_end":293,"column_start":1,"column_end":24}},{"value":"/     email: \"ferris@rust-lang.org\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10366,"byte_end":10404,"line_start":294,"line_end":294,"column_start":1,"column_end":39}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10405,"byte_end":10411,"line_start":295,"line_end":295,"column_start":1,"column_end":7}},{"value":"/ // the span will have the fields `user.name = \"ferris\"` and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10412,"byte_end":10475,"line_start":296,"line_end":296,"column_start":1,"column_end":64}},{"value":"/ // `user.email = \"ferris@rust-lang.org\"`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10476,"byte_end":10521,"line_start":297,"line_end":297,"column_start":1,"column_end":46}},{"value":"/ span!(Level::TRACE, \"login\", user.name, user.email);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10522,"byte_end":10578,"line_start":298,"line_end":298,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10579,"byte_end":10586,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10587,"byte_end":10593,"line_start":300,"line_end":300,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10594,"byte_end":10597,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ Fields with names that are not Rust identifiers, or with names that are Rust reserved words,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10598,"byte_end":10694,"line_start":302,"line_end":302,"column_start":1,"column_end":97}},{"value":"/ may be created using quoted string literals. However, this may not be used with the local","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10695,"byte_end":10788,"line_start":303,"line_end":303,"column_start":1,"column_end":94}},{"value":"/ variable shorthand.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10789,"byte_end":10812,"line_start":304,"line_end":304,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10813,"byte_end":10820,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10821,"byte_end":10854,"line_start":306,"line_end":306,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10855,"byte_end":10872,"line_start":307,"line_end":307,"column_start":1,"column_end":18}},{"value":"/ // records an event with fields whose names are not Rust identifiers","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10873,"byte_end":10945,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"/ //  - \"guid:x-request-id\", containing a `:`, with the value \"abcdef\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":10946,"byte_end":11018,"line_start":309,"line_end":309,"column_start":1,"column_end":73}},{"value":"/ //  - \"type\", which is a reserved word, with the value \"request\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11019,"byte_end":11087,"line_start":310,"line_end":310,"column_start":1,"column_end":69}},{"value":"/ span!(Level::TRACE, \"api\", \"guid:x-request-id\" = \"abcdef\", \"type\" = \"request\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11088,"byte_end":11171,"line_start":311,"line_end":311,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11172,"byte_end":11179,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11180,"byte_end":11186,"line_start":313,"line_end":313,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11187,"byte_end":11190,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ The `?` sigil is shorthand that specifies a field should be recorded using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11191,"byte_end":11269,"line_start":315,"line_end":315,"column_start":1,"column_end":79}},{"value":"/ its [`fmt::Debug`] implementation:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11270,"byte_end":11308,"line_start":316,"line_end":316,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11309,"byte_end":11316,"line_start":317,"line_end":317,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11317,"byte_end":11351,"line_start":318,"line_end":318,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11352,"byte_end":11369,"line_start":319,"line_end":319,"column_start":1,"column_end":18}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11370,"byte_end":11390,"line_start":320,"line_end":320,"column_start":1,"column_end":21}},{"value":"/ struct MyStruct {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11391,"byte_end":11412,"line_start":321,"line_end":321,"column_start":1,"column_end":22}},{"value":"/     field: &'static str,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11413,"byte_end":11441,"line_start":322,"line_end":322,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11442,"byte_end":11447,"line_start":323,"line_end":323,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11448,"byte_end":11451,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ let my_struct = MyStruct {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11452,"byte_end":11482,"line_start":325,"line_end":325,"column_start":1,"column_end":31}},{"value":"/     field: \"Hello world!\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11483,"byte_end":11512,"line_start":326,"line_end":326,"column_start":1,"column_end":30}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11513,"byte_end":11519,"line_start":327,"line_end":327,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11520,"byte_end":11523,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ // `my_struct` will be recorded using its `fmt::Debug` implementation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11524,"byte_end":11598,"line_start":329,"line_end":329,"column_start":1,"column_end":75}},{"value":"/ event!(Level::TRACE, greeting = ?my_struct);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11599,"byte_end":11647,"line_start":330,"line_end":330,"column_start":1,"column_end":49}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11648,"byte_end":11672,"line_start":331,"line_end":331,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::debug(&my_struct));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11673,"byte_end":11744,"line_start":332,"line_end":332,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11745,"byte_end":11752,"line_start":333,"line_end":333,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11753,"byte_end":11760,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11761,"byte_end":11764,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ The `%` sigil operates similarly, but indicates that the value should be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11765,"byte_end":11841,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ recorded using its [`fmt::Display`] implementation:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11842,"byte_end":11897,"line_start":337,"line_end":337,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11898,"byte_end":11905,"line_start":338,"line_end":338,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11906,"byte_end":11940,"line_start":339,"line_end":339,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11941,"byte_end":11958,"line_start":340,"line_end":340,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11959,"byte_end":11981,"line_start":341,"line_end":341,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":11982,"byte_end":12005,"line_start":342,"line_end":342,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12006,"byte_end":12036,"line_start":343,"line_end":343,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12037,"byte_end":12044,"line_start":344,"line_end":344,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12045,"byte_end":12050,"line_start":345,"line_end":345,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12051,"byte_end":12083,"line_start":346,"line_end":346,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12084,"byte_end":12115,"line_start":347,"line_end":347,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12116,"byte_end":12124,"line_start":348,"line_end":348,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12125,"byte_end":12207,"line_start":349,"line_end":349,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, greeting = %my_struct.field);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12208,"byte_end":12262,"line_start":350,"line_end":350,"column_start":1,"column_end":55}},{"value":"/ // is equivalent to:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12263,"byte_end":12287,"line_start":351,"line_end":351,"column_start":1,"column_end":25}},{"value":"/ event!(Level::TRACE, greeting = tracing::field::display(&my_struct.field));","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12288,"byte_end":12367,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12368,"byte_end":12375,"line_start":353,"line_end":353,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12376,"byte_end":12383,"line_start":354,"line_end":354,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12384,"byte_end":12387,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ The `%` and `?` sigils may also be used with local variable shorthand:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12388,"byte_end":12462,"line_start":356,"line_end":356,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12463,"byte_end":12466,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12467,"byte_end":12474,"line_start":358,"line_end":358,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12475,"byte_end":12509,"line_start":359,"line_end":359,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12510,"byte_end":12527,"line_start":360,"line_end":360,"column_start":1,"column_end":18}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12528,"byte_end":12550,"line_start":361,"line_end":361,"column_start":1,"column_end":23}},{"value":"/ # struct MyStruct {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12551,"byte_end":12574,"line_start":362,"line_end":362,"column_start":1,"column_end":24}},{"value":"/ #     field: &'static str,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12575,"byte_end":12605,"line_start":363,"line_end":363,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12606,"byte_end":12613,"line_start":364,"line_end":364,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12614,"byte_end":12619,"line_start":365,"line_end":365,"column_start":1,"column_end":6}},{"value":"/ # let my_struct = MyStruct {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12620,"byte_end":12652,"line_start":366,"line_end":366,"column_start":1,"column_end":33}},{"value":"/ #     field: \"Hello world!\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12653,"byte_end":12684,"line_start":367,"line_end":367,"column_start":1,"column_end":32}},{"value":"/ # };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12685,"byte_end":12693,"line_start":368,"line_end":368,"column_start":1,"column_end":9}},{"value":"/ // `my_struct.field` will be recorded using its `fmt::Display` implementation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12694,"byte_end":12776,"line_start":369,"line_end":369,"column_start":1,"column_end":83}},{"value":"/ event!(Level::TRACE, %my_struct.field);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12777,"byte_end":12820,"line_start":370,"line_end":370,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12821,"byte_end":12828,"line_start":371,"line_end":371,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12829,"byte_end":12836,"line_start":372,"line_end":372,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12837,"byte_end":12840,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ Additionally, a span may declare fields with the special value [`Empty`],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12841,"byte_end":12918,"line_start":374,"line_end":374,"column_start":1,"column_end":78}},{"value":"/ which indicates that that the value for that field does not currently exist","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12919,"byte_end":12998,"line_start":375,"line_end":375,"column_start":1,"column_end":80}},{"value":"/ but may be recorded later. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":12999,"byte_end":13042,"line_start":376,"line_end":376,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13043,"byte_end":13046,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13047,"byte_end":13054,"line_start":378,"line_end":378,"column_start":1,"column_end":8}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13055,"byte_end":13092,"line_start":379,"line_end":379,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13093,"byte_end":13096,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13097,"byte_end":13180,"line_start":381,"line_end":381,"column_start":1,"column_end":84}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13181,"byte_end":13215,"line_start":382,"line_end":382,"column_start":1,"column_end":35}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13216,"byte_end":13304,"line_start":383,"line_end":383,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13305,"byte_end":13308,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13309,"byte_end":13319,"line_start":385,"line_end":385,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13320,"byte_end":13323,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13324,"byte_end":13371,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13372,"byte_end":13418,"line_start":388,"line_end":388,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13419,"byte_end":13426,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13427,"byte_end":13430,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Note that a span may have up to 32 fields. The following will not compile:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13431,"byte_end":13509,"line_start":391,"line_end":391,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13510,"byte_end":13513,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13514,"byte_end":13538,"line_start":393,"line_end":393,"column_start":1,"column_end":25}},{"value":"/ # use tracing::Level;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13539,"byte_end":13564,"line_start":394,"line_end":394,"column_start":1,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13565,"byte_end":13582,"line_start":395,"line_end":395,"column_start":1,"column_end":18}},{"value":"/ let bad_span = span!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13583,"byte_end":13608,"line_start":396,"line_end":396,"column_start":1,"column_end":26}},{"value":"/     Level::TRACE,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13609,"byte_end":13630,"line_start":397,"line_end":397,"column_start":1,"column_end":22}},{"value":"/     \"too many fields!\",","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13631,"byte_end":13658,"line_start":398,"line_end":398,"column_start":1,"column_end":28}},{"value":"/     a = 1, b = 2, c = 3, d = 4, e = 5, f = 6, g = 7, h = 8, i = 9,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13659,"byte_end":13729,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/     j = 10, k = 11, l = 12, m = 13, n = 14, o = 15, p = 16, q = 17,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13730,"byte_end":13801,"line_start":400,"line_end":400,"column_start":1,"column_end":72}},{"value":"/     r = 18, s = 19, t = 20, u = 21, v = 22, w = 23, x = 24, y = 25,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13802,"byte_end":13873,"line_start":401,"line_end":401,"column_start":1,"column_end":72}},{"value":"/     z = 26, aa = 27, bb = 28, cc = 29, dd = 30, ee = 31, ff = 32, gg = 33","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13874,"byte_end":13951,"line_start":402,"line_end":402,"column_start":1,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13952,"byte_end":13958,"line_start":403,"line_end":403,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13959,"byte_end":13966,"line_start":404,"line_end":404,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13967,"byte_end":13974,"line_start":405,"line_end":405,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13975,"byte_end":13978,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Finally, events may also include human-readable messages, in the form of a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":13979,"byte_end":14057,"line_start":407,"line_end":407,"column_start":1,"column_end":79}},{"value":"/ [format string][fmt] and (optional) arguments, **after** the event's","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14058,"byte_end":14130,"line_start":408,"line_end":408,"column_start":1,"column_end":73}},{"value":"/ key-value fields. If a format string and arguments are provided,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14131,"byte_end":14199,"line_start":409,"line_end":409,"column_start":1,"column_end":69}},{"value":"/ they will implicitly create a new field named `message` whose value is the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14200,"byte_end":14278,"line_start":410,"line_end":410,"column_start":1,"column_end":79}},{"value":"/ provided set of format arguments.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14279,"byte_end":14316,"line_start":411,"line_end":411,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14317,"byte_end":14320,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14321,"byte_end":14337,"line_start":413,"line_end":413,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14338,"byte_end":14341,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14342,"byte_end":14349,"line_start":415,"line_end":415,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{event, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14350,"byte_end":14384,"line_start":416,"line_end":416,"column_start":1,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14385,"byte_end":14402,"line_start":417,"line_end":417,"column_start":1,"column_end":18}},{"value":"/ let question = \"the ultimate question of life, the universe, and everything\";","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14403,"byte_end":14484,"line_start":418,"line_end":418,"column_start":1,"column_end":82}},{"value":"/ let answer = 42;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14485,"byte_end":14505,"line_start":419,"line_end":419,"column_start":1,"column_end":21}},{"value":"/ // records an event with the following fields:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14506,"byte_end":14556,"line_start":420,"line_end":420,"column_start":1,"column_end":51}},{"value":"/ // - `question.answer` with the value 42,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14557,"byte_end":14602,"line_start":421,"line_end":421,"column_start":1,"column_end":46}},{"value":"/ // - `question.tricky` with the value `true`,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14603,"byte_end":14652,"line_start":422,"line_end":422,"column_start":1,"column_end":50}},{"value":"/ // - \"message\", with the value \"the answer to the ultimate question of life, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14653,"byte_end":14737,"line_start":423,"line_end":423,"column_start":1,"column_end":85}},{"value":"/ //    universe, and everything is 42.\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14738,"byte_end":14780,"line_start":424,"line_end":424,"column_start":1,"column_end":43}},{"value":"/ event!(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14781,"byte_end":14792,"line_start":425,"line_end":425,"column_start":1,"column_end":12}},{"value":"/     Level::DEBUG,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14793,"byte_end":14814,"line_start":426,"line_end":426,"column_start":1,"column_end":22}},{"value":"/     question.answer = answer,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14815,"byte_end":14848,"line_start":427,"line_end":427,"column_start":1,"column_end":34}},{"value":"/     question.tricky = true,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14849,"byte_end":14880,"line_start":428,"line_end":428,"column_start":1,"column_end":32}},{"value":"/     \"the answer to {} is {}.\", question, answer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14881,"byte_end":14932,"line_start":429,"line_end":429,"column_start":1,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14933,"byte_end":14939,"line_start":430,"line_end":430,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14940,"byte_end":14947,"line_start":431,"line_end":431,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14948,"byte_end":14955,"line_start":432,"line_end":432,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14956,"byte_end":14959,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ Specifying a formatted message in this manner does not allocate by default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":14960,"byte_end":15039,"line_start":434,"line_end":434,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15040,"byte_end":15043,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ [struct initializers]: https://doc.rust-lang.org/book/ch05-01-defining-structs.html#using-the-field-init-shorthand-when-variables-and-fields-have-the-same-name","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15044,"byte_end":15207,"line_start":436,"line_end":436,"column_start":1,"column_end":164}},{"value":"/ [target]: struct.Metadata.html#method.target","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15208,"byte_end":15256,"line_start":437,"line_end":437,"column_start":1,"column_end":49}},{"value":"/ [parent span]: span/struct.Attributes.html#method.parent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15257,"byte_end":15317,"line_start":438,"line_end":438,"column_start":1,"column_end":61}},{"value":"/ [determined contextually]: span/struct.Attributes.html#method.is_contextual","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15318,"byte_end":15397,"line_start":439,"line_end":439,"column_start":1,"column_end":80}},{"value":"/ [`fmt::Debug`]: https://doc.rust-lang.org/std/fmt/trait.Debug.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15398,"byte_end":15468,"line_start":440,"line_end":440,"column_start":1,"column_end":71}},{"value":"/ [`fmt::Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15469,"byte_end":15543,"line_start":441,"line_end":441,"column_start":1,"column_end":75}},{"value":"/ [fmt]: https://doc.rust-lang.org/std/fmt/#usage","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15544,"byte_end":15595,"line_start":442,"line_end":442,"column_start":1,"column_end":52}},{"value":"/ [`Empty`]: field/struct.Empty.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15596,"byte_end":15634,"line_start":443,"line_end":443,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15635,"byte_end":15638,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ ### Shorthand Macros","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15639,"byte_end":15663,"line_start":445,"line_end":445,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15664,"byte_end":15667,"line_start":446,"line_end":446,"column_start":1,"column_end":4}},{"value":"/ `tracing` also offers a number of macros with preset verbosity levels.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15668,"byte_end":15742,"line_start":447,"line_end":447,"column_start":1,"column_end":75}},{"value":"/ The [`trace!`], [`debug!`], [`info!`], [`warn!`], and [`error!`] behave","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15743,"byte_end":15818,"line_start":448,"line_end":448,"column_start":1,"column_end":76}},{"value":"/ similarly to the [`event!`] macro, but with the [`Level`] argument already","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15819,"byte_end":15897,"line_start":449,"line_end":449,"column_start":1,"column_end":79}},{"value":"/ specified, while the corresponding [`trace_span!`], [`debug_span!`],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15898,"byte_end":15970,"line_start":450,"line_end":450,"column_start":1,"column_end":73}},{"value":"/ [`info_span!`], [`warn_span!`], and [`error_span!`] macros are the same,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":15971,"byte_end":16047,"line_start":451,"line_end":451,"column_start":1,"column_end":77}},{"value":"/ but for the [`span!`] macro.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16048,"byte_end":16080,"line_start":452,"line_end":452,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16081,"byte_end":16084,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ These are intended both as a shorthand, and for compatibility with the [`log`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16085,"byte_end":16167,"line_start":454,"line_end":454,"column_start":1,"column_end":83}},{"value":"/ crate (see the next section).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16168,"byte_end":16201,"line_start":455,"line_end":455,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16202,"byte_end":16205,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ [`span!`]: macro.span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16206,"byte_end":16236,"line_start":457,"line_end":457,"column_start":1,"column_end":31}},{"value":"/ [`event!`]: macro.event.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16237,"byte_end":16269,"line_start":458,"line_end":458,"column_start":1,"column_end":33}},{"value":"/ [`trace!`]: macro.trace.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16270,"byte_end":16302,"line_start":459,"line_end":459,"column_start":1,"column_end":33}},{"value":"/ [`debug!`]: macro.debug.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16303,"byte_end":16335,"line_start":460,"line_end":460,"column_start":1,"column_end":33}},{"value":"/ [`info!`]: macro.info.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16336,"byte_end":16366,"line_start":461,"line_end":461,"column_start":1,"column_end":31}},{"value":"/ [`warn!`]: macro.warn.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16367,"byte_end":16397,"line_start":462,"line_end":462,"column_start":1,"column_end":31}},{"value":"/ [`error!`]: macro.error.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16398,"byte_end":16430,"line_start":463,"line_end":463,"column_start":1,"column_end":33}},{"value":"/ [`trace_span!`]: macro.trace_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16431,"byte_end":16473,"line_start":464,"line_end":464,"column_start":1,"column_end":43}},{"value":"/ [`debug_span!`]: macro.debug_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16474,"byte_end":16516,"line_start":465,"line_end":465,"column_start":1,"column_end":43}},{"value":"/ [`info_span!`]: macro.info_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16517,"byte_end":16557,"line_start":466,"line_end":466,"column_start":1,"column_end":41}},{"value":"/ [`warn_span!`]: macro.warn_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16558,"byte_end":16598,"line_start":467,"line_end":467,"column_start":1,"column_end":41}},{"value":"/ [`error_span!`]: macro.error_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16599,"byte_end":16641,"line_start":468,"line_end":468,"column_start":1,"column_end":43}},{"value":"/ [`Level`]: struct.Level.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16642,"byte_end":16674,"line_start":469,"line_end":469,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16675,"byte_end":16678,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ### For `log` Users","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16679,"byte_end":16702,"line_start":471,"line_end":471,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16703,"byte_end":16706,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ Users of the [`log`] crate should note that `tracing` exposes a set of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16707,"byte_end":16781,"line_start":473,"line_end":473,"column_start":1,"column_end":75}},{"value":"/ macros for creating `Event`s (`trace!`, `debug!`, `info!`, `warn!`, and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16782,"byte_end":16857,"line_start":474,"line_end":474,"column_start":1,"column_end":76}},{"value":"/ `error!`) which may be invoked with the same syntax as the similarly-named","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16858,"byte_end":16936,"line_start":475,"line_end":475,"column_start":1,"column_end":79}},{"value":"/ macros from the `log` crate. Often, the process of converting a project to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":16937,"byte_end":17015,"line_start":476,"line_end":476,"column_start":1,"column_end":79}},{"value":"/ use `tracing` can begin with a simple drop-in replacement.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17016,"byte_end":17078,"line_start":477,"line_end":477,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17079,"byte_end":17082,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ Let's consider the `log` crate's yak-shaving example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17083,"byte_end":17140,"line_start":479,"line_end":479,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17141,"byte_end":17144,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17145,"byte_end":17163,"line_start":481,"line_end":481,"column_start":1,"column_end":19}},{"value":"/ use std::{error::Error, io};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17164,"byte_end":17196,"line_start":482,"line_end":482,"column_start":1,"column_end":33}},{"value":"/ use tracing::{debug, error, info, span, warn, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17197,"byte_end":17254,"line_start":483,"line_end":483,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17255,"byte_end":17258,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ // the `#[tracing::instrument]` attribute creates and enters a span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17259,"byte_end":17330,"line_start":485,"line_end":485,"column_start":1,"column_end":72}},{"value":"/ // every time the instrumented function is called. The span is named after the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17331,"byte_end":17413,"line_start":486,"line_end":486,"column_start":1,"column_end":83}},{"value":"/ // the function or method. Parameters passed to the function are recorded as fields.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17414,"byte_end":17502,"line_start":487,"line_end":487,"column_start":1,"column_end":89}},{"value":"/ #[tracing::instrument]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17503,"byte_end":17529,"line_start":488,"line_end":488,"column_start":1,"column_end":27}},{"value":"/ pub fn shave(yak: usize) -> Result<(), Box<dyn Error + 'static>> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17530,"byte_end":17600,"line_start":489,"line_end":489,"column_start":1,"column_end":71}},{"value":"/     // this creates an event at the DEBUG level with two fields:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17601,"byte_end":17669,"line_start":490,"line_end":490,"column_start":1,"column_end":69}},{"value":"/     // - `excitement`, with the key \"excitement\" and the value \"yay!\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17670,"byte_end":17743,"line_start":491,"line_end":491,"column_start":1,"column_end":74}},{"value":"/     // - `message`, with the key \"message\" and the value \"hello! I'm gonna shave a yak.\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17744,"byte_end":17836,"line_start":492,"line_end":492,"column_start":1,"column_end":93}},{"value":"/     //","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17837,"byte_end":17847,"line_start":493,"line_end":493,"column_start":1,"column_end":11}},{"value":"/     // unlike other fields, `message`'s shorthand initialization is just the string itself.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17848,"byte_end":17943,"line_start":494,"line_end":494,"column_start":1,"column_end":96}},{"value":"/     debug!(excitement = \"yay!\", \"hello! I'm gonna shave a yak.\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":17944,"byte_end":18013,"line_start":495,"line_end":495,"column_start":1,"column_end":70}},{"value":"/     if yak == 3 {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18014,"byte_end":18035,"line_start":496,"line_end":496,"column_start":1,"column_end":22}},{"value":"/         warn!(\"could not locate yak!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18036,"byte_end":18079,"line_start":497,"line_end":497,"column_start":1,"column_end":44}},{"value":"/         // note that this is intended to demonstrate `tracing`'s features, not idiomatic","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18080,"byte_end":18172,"line_start":498,"line_end":498,"column_start":1,"column_end":93}},{"value":"/         // error handling! in a library or application, you should consider returning","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18173,"byte_end":18262,"line_start":499,"line_end":499,"column_start":1,"column_end":90}},{"value":"/         // a dedicated `YakError`. libraries like snafu or thiserror make this easy.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18263,"byte_end":18351,"line_start":500,"line_end":500,"column_start":1,"column_end":89}},{"value":"/         return Err(io::Error::new(io::ErrorKind::Other, \"shaving yak failed!\").into());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18352,"byte_end":18443,"line_start":501,"line_end":501,"column_start":1,"column_end":92}},{"value":"/     } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18444,"byte_end":18460,"line_start":502,"line_end":502,"column_start":1,"column_end":17}},{"value":"/         debug!(\"yak shaved successfully\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18461,"byte_end":18507,"line_start":503,"line_end":503,"column_start":1,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18508,"byte_end":18517,"line_start":504,"line_end":504,"column_start":1,"column_end":10}},{"value":"/     Ok(())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18518,"byte_end":18532,"line_start":505,"line_end":505,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18533,"byte_end":18538,"line_start":506,"line_end":506,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18539,"byte_end":18542,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ pub fn shave_all(yaks: usize) -> usize {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18543,"byte_end":18587,"line_start":508,"line_end":508,"column_start":1,"column_end":45}},{"value":"/     // Constructs a new span named \"shaving_yaks\" at the TRACE level,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18588,"byte_end":18661,"line_start":509,"line_end":509,"column_start":1,"column_end":74}},{"value":"/     // and a field whose key is \"yaks\". This is equivalent to writing:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18662,"byte_end":18736,"line_start":510,"line_end":510,"column_start":1,"column_end":75}},{"value":"/     //","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18737,"byte_end":18747,"line_start":511,"line_end":511,"column_start":1,"column_end":11}},{"value":"/     // let span = span!(Level::TRACE, \"shaving_yaks\", yaks = yaks);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18748,"byte_end":18819,"line_start":512,"line_end":512,"column_start":1,"column_end":72}},{"value":"/     //","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18820,"byte_end":18830,"line_start":513,"line_end":513,"column_start":1,"column_end":11}},{"value":"/     // local variables (`yaks`) can be used as field values","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18831,"byte_end":18894,"line_start":514,"line_end":514,"column_start":1,"column_end":64}},{"value":"/     // without an assignment, similar to struct initializers.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18895,"byte_end":18960,"line_start":515,"line_end":515,"column_start":1,"column_end":66}},{"value":"/     let _span = span!(Level::TRACE, \"shaving_yaks\", yaks).entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":18961,"byte_end":19033,"line_start":516,"line_end":516,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19034,"byte_end":19037,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/     info!(\"shaving yaks\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19038,"byte_end":19068,"line_start":518,"line_end":518,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19069,"byte_end":19072,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/     let mut yaks_shaved = 0;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19073,"byte_end":19105,"line_start":520,"line_end":520,"column_start":1,"column_end":33}},{"value":"/     for yak in 1..=yaks {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19106,"byte_end":19135,"line_start":521,"line_end":521,"column_start":1,"column_end":30}},{"value":"/         let res = shave(yak);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19136,"byte_end":19169,"line_start":522,"line_end":522,"column_start":1,"column_end":34}},{"value":"/         debug!(yak, shaved = res.is_ok());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19170,"byte_end":19216,"line_start":523,"line_end":523,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19217,"byte_end":19220,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/         if let Err(ref error) = res {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19221,"byte_end":19262,"line_start":525,"line_end":525,"column_start":1,"column_end":42}},{"value":"/             // Like spans, events can also use the field initialization shorthand.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19263,"byte_end":19349,"line_start":526,"line_end":526,"column_start":1,"column_end":87}},{"value":"/             // In this instance, `yak` is the field being initalized.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19350,"byte_end":19423,"line_start":527,"line_end":527,"column_start":1,"column_end":74}},{"value":"/             error!(yak, error = error.as_ref(), \"failed to shave yak!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19424,"byte_end":19500,"line_start":528,"line_end":528,"column_start":1,"column_end":77}},{"value":"/         } else {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19501,"byte_end":19521,"line_start":529,"line_end":529,"column_start":1,"column_end":21}},{"value":"/             yaks_shaved += 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19522,"byte_end":19555,"line_start":530,"line_end":530,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19556,"byte_end":19569,"line_start":531,"line_end":531,"column_start":1,"column_end":14}},{"value":"/         debug!(yaks_shaved);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19570,"byte_end":19602,"line_start":532,"line_end":532,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19603,"byte_end":19612,"line_start":533,"line_end":533,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19613,"byte_end":19616,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/     yaks_shaved","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19617,"byte_end":19636,"line_start":535,"line_end":535,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19637,"byte_end":19642,"line_start":536,"line_end":536,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19643,"byte_end":19650,"line_start":537,"line_end":537,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19651,"byte_end":19654,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ ## In libraries","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19655,"byte_end":19674,"line_start":539,"line_end":539,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19675,"byte_end":19678,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ Libraries should link only to the `tracing` crate, and use the provided","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19679,"byte_end":19754,"line_start":541,"line_end":541,"column_start":1,"column_end":76}},{"value":"/ macros to record whatever information will be useful to downstream","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19755,"byte_end":19825,"line_start":542,"line_end":542,"column_start":1,"column_end":71}},{"value":"/ consumers.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19826,"byte_end":19840,"line_start":543,"line_end":543,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19841,"byte_end":19844,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ ## In executables","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19845,"byte_end":19866,"line_start":545,"line_end":545,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19867,"byte_end":19870,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ In order to record trace events, executables have to use a `Subscriber`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19871,"byte_end":19946,"line_start":547,"line_end":547,"column_start":1,"column_end":76}},{"value":"/ implementation compatible with `tracing`. A `Subscriber` implements a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":19947,"byte_end":20020,"line_start":548,"line_end":548,"column_start":1,"column_end":74}},{"value":"/ way of collecting trace data, such as by logging it to standard output.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20021,"byte_end":20096,"line_start":549,"line_end":549,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20097,"byte_end":20100,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ This library does not contain any `Subscriber` implementations; these are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20101,"byte_end":20178,"line_start":551,"line_end":551,"column_start":1,"column_end":78}},{"value":"/ provided by [other crates](#related-crates).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20179,"byte_end":20227,"line_start":552,"line_end":552,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20228,"byte_end":20231,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ The simplest way to use a subscriber is to call the [`set_global_default`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20232,"byte_end":20310,"line_start":554,"line_end":554,"column_start":1,"column_end":79}},{"value":"/ function:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20311,"byte_end":20324,"line_start":555,"line_end":555,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20325,"byte_end":20328,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20329,"byte_end":20336,"line_start":557,"line_end":557,"column_start":1,"column_end":8}},{"value":"/ extern crate tracing;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20337,"byte_end":20362,"line_start":558,"line_end":558,"column_start":1,"column_end":26}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20363,"byte_end":20394,"line_start":559,"line_end":559,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20395,"byte_end":20457,"line_start":560,"line_end":560,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20458,"byte_end":20508,"line_start":561,"line_end":561,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20509,"byte_end":20577,"line_start":562,"line_end":562,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20578,"byte_end":20625,"line_start":563,"line_end":563,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20626,"byte_end":20672,"line_start":564,"line_end":564,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20673,"byte_end":20729,"line_start":565,"line_end":565,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20730,"byte_end":20787,"line_start":566,"line_end":566,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20788,"byte_end":20822,"line_start":567,"line_end":567,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20823,"byte_end":20856,"line_start":568,"line_end":568,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20857,"byte_end":20864,"line_start":569,"line_end":569,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20865,"byte_end":20891,"line_start":570,"line_end":570,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20892,"byte_end":20934,"line_start":571,"line_end":571,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20935,"byte_end":20942,"line_start":572,"line_end":572,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20943,"byte_end":20960,"line_start":573,"line_end":573,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20961,"byte_end":20964,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":20965,"byte_end":21010,"line_start":575,"line_end":575,"column_start":1,"column_end":46}},{"value":"/ tracing::subscriber::set_global_default(my_subscriber)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21011,"byte_end":21069,"line_start":576,"line_end":576,"column_start":1,"column_end":59}},{"value":"/     .expect(\"setting tracing default failed\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21070,"byte_end":21120,"line_start":577,"line_end":577,"column_start":1,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21121,"byte_end":21128,"line_start":578,"line_end":578,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21129,"byte_end":21136,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21137,"byte_end":21140,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21141,"byte_end":21212,"line_start":581,"line_end":581,"column_start":1,"column_end":72}},{"value":"/     <strong>Warning</strong>: In general, libraries should <em>not</em> call","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21213,"byte_end":21293,"line_start":582,"line_end":582,"column_start":1,"column_end":81}},{"value":"/     <code>set_global_default()</code>! Doing so will cause conflicts when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21294,"byte_end":21371,"line_start":583,"line_end":583,"column_start":1,"column_end":78}},{"value":"/     executables that depend on the library try to set the default later.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21372,"byte_end":21448,"line_start":584,"line_end":584,"column_start":1,"column_end":77}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21449,"byte_end":21459,"line_start":585,"line_end":585,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21460,"byte_end":21463,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ This subscriber will be used as the default in all threads for the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21464,"byte_end":21534,"line_start":587,"line_end":587,"column_start":1,"column_end":71}},{"value":"/ remainder of the duration of the program, similar to setting the logger","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21535,"byte_end":21610,"line_start":588,"line_end":588,"column_start":1,"column_end":76}},{"value":"/ in the `log` crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21611,"byte_end":21634,"line_start":589,"line_end":589,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21635,"byte_end":21638,"line_start":590,"line_end":590,"column_start":1,"column_end":4}},{"value":"/ In addition, the default subscriber can be set through using the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21639,"byte_end":21707,"line_start":591,"line_end":591,"column_start":1,"column_end":69}},{"value":"/ [`with_default`] function. This follows the `tokio` pattern of using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21708,"byte_end":21780,"line_start":592,"line_end":592,"column_start":1,"column_end":73}},{"value":"/ closures to represent executing code in a context that is exited at the end","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21781,"byte_end":21860,"line_start":593,"line_end":593,"column_start":1,"column_end":80}},{"value":"/ of the closure. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21861,"byte_end":21893,"line_start":594,"line_end":594,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21894,"byte_end":21897,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21898,"byte_end":21909,"line_start":596,"line_end":596,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21910,"byte_end":21941,"line_start":597,"line_end":597,"column_start":1,"column_end":32}},{"value":"/ # use tracing::{span::{Id, Attributes, Record}, Metadata};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":21942,"byte_end":22004,"line_start":598,"line_end":598,"column_start":1,"column_end":63}},{"value":"/ # impl tracing::Subscriber for FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22005,"byte_end":22055,"line_start":599,"line_end":599,"column_start":1,"column_end":51}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22056,"byte_end":22124,"line_start":600,"line_end":600,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22125,"byte_end":22172,"line_start":601,"line_end":601,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &tracing::Event) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22173,"byte_end":22219,"line_start":602,"line_end":602,"column_start":1,"column_end":47}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22220,"byte_end":22276,"line_start":603,"line_end":603,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22277,"byte_end":22334,"line_start":604,"line_end":604,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22335,"byte_end":22369,"line_start":605,"line_end":605,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22370,"byte_end":22403,"line_start":606,"line_end":606,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22404,"byte_end":22411,"line_start":607,"line_end":607,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22412,"byte_end":22438,"line_start":608,"line_end":608,"column_start":1,"column_end":27}},{"value":"/ #   fn new() -> Self { FooSubscriber }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22439,"byte_end":22481,"line_start":609,"line_end":609,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22482,"byte_end":22489,"line_start":610,"line_end":610,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22490,"byte_end":22507,"line_start":611,"line_end":611,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22508,"byte_end":22511,"line_start":612,"line_end":612,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22512,"byte_end":22557,"line_start":613,"line_end":613,"column_start":1,"column_end":46}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22558,"byte_end":22587,"line_start":614,"line_end":614,"column_start":1,"column_end":30}},{"value":"/ tracing::subscriber::with_default(my_subscriber, || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22588,"byte_end":22645,"line_start":615,"line_end":615,"column_start":1,"column_end":58}},{"value":"/     // Any trace events generated in this closure or by functions it calls","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22646,"byte_end":22724,"line_start":616,"line_end":616,"column_start":1,"column_end":79}},{"value":"/     // will be collected by `my_subscriber`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22725,"byte_end":22773,"line_start":617,"line_end":617,"column_start":1,"column_end":49}},{"value":"/ })","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22774,"byte_end":22780,"line_start":618,"line_end":618,"column_start":1,"column_end":7}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22781,"byte_end":22788,"line_start":619,"line_end":619,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22789,"byte_end":22796,"line_start":620,"line_end":620,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22797,"byte_end":22800,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ This approach allows trace data to be collected by multiple subscribers","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22801,"byte_end":22876,"line_start":622,"line_end":622,"column_start":1,"column_end":76}},{"value":"/ within different contexts in the program. Note that the override only applies to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22877,"byte_end":22965,"line_start":623,"line_end":623,"column_start":1,"column_end":89}},{"value":"/ currently executing thread; other threads will not see the change from with_default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":22966,"byte_end":23054,"line_start":624,"line_end":624,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23055,"byte_end":23058,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ Any trace events generated outside the context of a subscriber will not be collected.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23059,"byte_end":23148,"line_start":626,"line_end":626,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23149,"byte_end":23152,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ Once a subscriber has been set, instrumentation points may be added to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23153,"byte_end":23231,"line_start":628,"line_end":628,"column_start":1,"column_end":79}},{"value":"/ executable using the `tracing` crate's macros.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23232,"byte_end":23282,"line_start":629,"line_end":629,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23283,"byte_end":23286,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ ## `log` Compatibility","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23287,"byte_end":23313,"line_start":631,"line_end":631,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23314,"byte_end":23317,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ The [`log`] crate provides a simple, lightweight logging facade for Rust.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23318,"byte_end":23395,"line_start":633,"line_end":633,"column_start":1,"column_end":78}},{"value":"/ While `tracing` builds upon `log`'s foundation with richer structured","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23396,"byte_end":23469,"line_start":634,"line_end":634,"column_start":1,"column_end":74}},{"value":"/ diagnostic data, `log`'s simplicity and ubiquity make it the \"lowest common","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23470,"byte_end":23549,"line_start":635,"line_end":635,"column_start":1,"column_end":80}},{"value":"/ denominator\" for text-based logging in Rust — a vast majority of Rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23550,"byte_end":23625,"line_start":636,"line_end":636,"column_start":1,"column_end":74}},{"value":"/ libraries and applications either emit or consume `log` records. Therefore,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23626,"byte_end":23705,"line_start":637,"line_end":637,"column_start":1,"column_end":80}},{"value":"/ `tracing` provides multiple forms of interoperability with `log`: `tracing`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23706,"byte_end":23785,"line_start":638,"line_end":638,"column_start":1,"column_end":80}},{"value":"/ instrumentation can emit `log` records, and a compatibility layer enables","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23786,"byte_end":23863,"line_start":639,"line_end":639,"column_start":1,"column_end":78}},{"value":"/ `tracing` [`Subscriber`]s to consume `log` records as `tracing` [`Event`]s.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23864,"byte_end":23943,"line_start":640,"line_end":640,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23944,"byte_end":23947,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ ### Emitting `log` Records","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23948,"byte_end":23978,"line_start":642,"line_end":642,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23979,"byte_end":23982,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ This crate provides two feature flags, \"log\" and \"log-always\", which will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":23983,"byte_end":24060,"line_start":644,"line_end":644,"column_start":1,"column_end":78}},{"value":"/ cause [spans] and [events] to emit `log` records. When the \"log\" feature is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24061,"byte_end":24140,"line_start":645,"line_end":645,"column_start":1,"column_end":80}},{"value":"/ enabled, if no `tracing` `Subscriber` is active, invoking an event macro or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24141,"byte_end":24220,"line_start":646,"line_end":646,"column_start":1,"column_end":80}},{"value":"/ creating a span with fields will emit a `log` record. This is intended","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24221,"byte_end":24295,"line_start":647,"line_end":647,"column_start":1,"column_end":75}},{"value":"/ primarily for use in libraries which wish to emit diagnostics that can be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24296,"byte_end":24373,"line_start":648,"line_end":648,"column_start":1,"column_end":78}},{"value":"/ consumed by applications using `tracing` *or* `log`, without paying the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24374,"byte_end":24449,"line_start":649,"line_end":649,"column_start":1,"column_end":76}},{"value":"/ additional overhead of emitting both forms of diagnostics when `tracing` is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24450,"byte_end":24529,"line_start":650,"line_end":650,"column_start":1,"column_end":80}},{"value":"/ in use.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24530,"byte_end":24541,"line_start":651,"line_end":651,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24542,"byte_end":24545,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ Enabling the \"log-always\" feature will cause `log` records to be emitted","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24546,"byte_end":24622,"line_start":653,"line_end":653,"column_start":1,"column_end":77}},{"value":"/ even if a `tracing` `Subscriber` _is_ set. This is intended to be used in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24623,"byte_end":24700,"line_start":654,"line_end":654,"column_start":1,"column_end":78}},{"value":"/ applications where a `log` `Logger` is being used to record a textual log,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24701,"byte_end":24779,"line_start":655,"line_end":655,"column_start":1,"column_end":79}},{"value":"/ and `tracing` is used only to record other forms of diagnostics (such as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24780,"byte_end":24856,"line_start":656,"line_end":656,"column_start":1,"column_end":77}},{"value":"/ metrics, profiling, or distributed tracing data). Unlike the \"log\" feature,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24857,"byte_end":24936,"line_start":657,"line_end":657,"column_start":1,"column_end":80}},{"value":"/ libraries generally should **not** enable the \"log-always\" feature, as doing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":24937,"byte_end":25017,"line_start":658,"line_end":658,"column_start":1,"column_end":81}},{"value":"/ so will prevent applications from being able to opt out of the `log` records.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25018,"byte_end":25099,"line_start":659,"line_end":659,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25100,"byte_end":25103,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ See [here][flags] for more details on this crate's feature flags.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25104,"byte_end":25173,"line_start":661,"line_end":661,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25174,"byte_end":25177,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ The generated `log` records' messages will be a string representation of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25178,"byte_end":25258,"line_start":663,"line_end":663,"column_start":1,"column_end":81}},{"value":"/ span or event's fields, and all additional information recorded by `log`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25259,"byte_end":25335,"line_start":664,"line_end":664,"column_start":1,"column_end":77}},{"value":"/ (target, verbosity level, module path, file, and line number) will also be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25336,"byte_end":25414,"line_start":665,"line_end":665,"column_start":1,"column_end":79}},{"value":"/ populated. Additionally, `log` records are also generated when spans are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25415,"byte_end":25491,"line_start":666,"line_end":666,"column_start":1,"column_end":77}},{"value":"/ entered, exited, and closed. Since these additional span lifecycle logs have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25492,"byte_end":25572,"line_start":667,"line_end":667,"column_start":1,"column_end":81}},{"value":"/ the potential to be very verbose, and don't include additional fields, they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25573,"byte_end":25652,"line_start":668,"line_end":668,"column_start":1,"column_end":80}},{"value":"/ will always be emitted at the `Trace` level, rather than inheriting the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25653,"byte_end":25728,"line_start":669,"line_end":669,"column_start":1,"column_end":76}},{"value":"/ level of the span that generated them. Furthermore, they are are categorized","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25729,"byte_end":25809,"line_start":670,"line_end":670,"column_start":1,"column_end":81}},{"value":"/ under a separate `log` target, \"tracing::span\" (and its sub-target,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25810,"byte_end":25881,"line_start":671,"line_end":671,"column_start":1,"column_end":72}},{"value":"/ \"tracing::span::active\", for the logs on entering and exiting a span), which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25882,"byte_end":25962,"line_start":672,"line_end":672,"column_start":1,"column_end":81}},{"value":"/ may be enabled or disabled separately from other `log` records emitted by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":25963,"byte_end":26040,"line_start":673,"line_end":673,"column_start":1,"column_end":78}},{"value":"/ `tracing`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26041,"byte_end":26055,"line_start":674,"line_end":674,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26056,"byte_end":26059,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ ### Consuming `log` Records","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26060,"byte_end":26091,"line_start":676,"line_end":676,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26092,"byte_end":26095,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ The [`tracing-log`] crate provides a compatibility layer which","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26096,"byte_end":26162,"line_start":678,"line_end":678,"column_start":1,"column_end":67}},{"value":"/ allows a `tracing` [`Subscriber`] to consume `log` records as though they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26163,"byte_end":26240,"line_start":679,"line_end":679,"column_start":1,"column_end":78}},{"value":"/ were `tracing` [events]. This allows applications using `tracing` to record","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26241,"byte_end":26320,"line_start":680,"line_end":680,"column_start":1,"column_end":80}},{"value":"/ the logs emitted by dependencies using `log` as events within the context of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26321,"byte_end":26401,"line_start":681,"line_end":681,"column_start":1,"column_end":81}},{"value":"/ the application's trace tree. See [that crate's documentation][log-tracer]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26402,"byte_end":26480,"line_start":682,"line_end":682,"column_start":1,"column_end":79}},{"value":"/ for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26481,"byte_end":26497,"line_start":683,"line_end":683,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26498,"byte_end":26501,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ [log-tracer]: https://docs.rs/tracing-log/latest/tracing_log/#convert-log-records-to-tracing-events","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26502,"byte_end":26605,"line_start":685,"line_end":685,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26606,"byte_end":26609,"line_start":686,"line_end":686,"column_start":1,"column_end":4}},{"value":"/ ## Related Crates","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26610,"byte_end":26631,"line_start":687,"line_end":687,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26632,"byte_end":26635,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ In addition to `tracing` and `tracing-core`, the [`tokio-rs/tracing`] repository","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26636,"byte_end":26720,"line_start":689,"line_end":689,"column_start":1,"column_end":85}},{"value":"/ contains several additional crates designed to be used with the `tracing` ecosystem.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26721,"byte_end":26809,"line_start":690,"line_end":690,"column_start":1,"column_end":89}},{"value":"/ This includes a collection of `Subscriber` implementations, as well as utility","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26810,"byte_end":26892,"line_start":691,"line_end":691,"column_start":1,"column_end":83}},{"value":"/ and adapter crates to assist in writing `Subscriber`s and instrumenting","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26893,"byte_end":26968,"line_start":692,"line_end":692,"column_start":1,"column_end":76}},{"value":"/ applications.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26969,"byte_end":26986,"line_start":693,"line_end":693,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26987,"byte_end":26990,"line_start":694,"line_end":694,"column_start":1,"column_end":4}},{"value":"/ In particular, the following crates are likely to be of interest:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":26991,"byte_end":27060,"line_start":695,"line_end":695,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27061,"byte_end":27064,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-futures`] provides a compatibility layer with the `futures`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27065,"byte_end":27141,"line_start":697,"line_end":697,"column_start":1,"column_end":77}},{"value":"/    crate, allowing spans to be attached to `Future`s, `Stream`s, and `Executor`s.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27142,"byte_end":27227,"line_start":698,"line_end":698,"column_start":1,"column_end":86}},{"value":"/  - [`tracing-subscriber`] provides `Subscriber` implementations and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27228,"byte_end":27299,"line_start":699,"line_end":699,"column_start":1,"column_end":72}},{"value":"/    utilities for working with `Subscriber`s. This includes a [`FmtSubscriber`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27300,"byte_end":27382,"line_start":700,"line_end":700,"column_start":1,"column_end":83}},{"value":"/    `FmtSubscriber` for logging formatted trace data to stdout, with similar","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27383,"byte_end":27462,"line_start":701,"line_end":701,"column_start":1,"column_end":80}},{"value":"/    filtering and formatting to the [`env_logger`] crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27463,"byte_end":27523,"line_start":702,"line_end":702,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-log`] provides a compatibility layer with the [`log`] crate,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27524,"byte_end":27601,"line_start":703,"line_end":703,"column_start":1,"column_end":78}},{"value":"/    allowing log messages to be recorded as `tracing` `Event`s within the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27602,"byte_end":27678,"line_start":704,"line_end":704,"column_start":1,"column_end":77}},{"value":"/    trace tree. This is useful when a project using `tracing` have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27679,"byte_end":27748,"line_start":705,"line_end":705,"column_start":1,"column_end":70}},{"value":"/    dependencies which use `log`. Note that if you're using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27749,"byte_end":27811,"line_start":706,"line_end":706,"column_start":1,"column_end":63}},{"value":"/    `tracing-subscriber`'s `FmtSubscriber`, you don't need to depend on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27812,"byte_end":27886,"line_start":707,"line_end":707,"column_start":1,"column_end":75}},{"value":"/    `tracing-log` directly.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27887,"byte_end":27917,"line_start":708,"line_end":708,"column_start":1,"column_end":31}},{"value":"/  - [`tracing-appender`] provides utilities for outputting tracing data,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27918,"byte_end":27993,"line_start":709,"line_end":709,"column_start":1,"column_end":76}},{"value":"/     including a file appender and non blocking writer.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":27994,"byte_end":28052,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28053,"byte_end":28056,"line_start":711,"line_end":711,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are also several third-party crates which are not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28057,"byte_end":28130,"line_start":712,"line_end":712,"column_start":1,"column_end":74}},{"value":"/ maintained by the `tokio` project. These include:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28131,"byte_end":28184,"line_start":713,"line_end":713,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28185,"byte_end":28188,"line_start":714,"line_end":714,"column_start":1,"column_end":4}},{"value":"/  - [`tracing-timing`] implements inter-event timing metrics on top of `tracing`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28189,"byte_end":28273,"line_start":715,"line_end":715,"column_start":1,"column_end":85}},{"value":"/    It provides a subscriber that records the time elapsed between pairs of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28274,"byte_end":28352,"line_start":716,"line_end":716,"column_start":1,"column_end":79}},{"value":"/    `tracing` events and generates histograms.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28353,"byte_end":28402,"line_start":717,"line_end":717,"column_start":1,"column_end":50}},{"value":"/  - [`tracing-opentelemetry`] provides a subscriber for emitting traces to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28403,"byte_end":28480,"line_start":718,"line_end":718,"column_start":1,"column_end":78}},{"value":"/    [OpenTelemetry]-compatible distributed tracing systems.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28481,"byte_end":28543,"line_start":719,"line_end":719,"column_start":1,"column_end":63}},{"value":"/  - [`tracing-honeycomb`] Provides a layer that reports traces spanning multiple machines to [honeycomb.io]. Backed by [`tracing-distributed`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28544,"byte_end":28690,"line_start":720,"line_end":720,"column_start":1,"column_end":147}},{"value":"/  - [`tracing-distributed`] Provides a generic implementation of a layer that reports traces spanning multiple machines to some backend.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28691,"byte_end":28830,"line_start":721,"line_end":721,"column_start":1,"column_end":140}},{"value":"/  - [`tracing-actix-web`] provides `tracing` integration for the `actix-web` web framework.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28831,"byte_end":28925,"line_start":722,"line_end":722,"column_start":1,"column_end":95}},{"value":"/  - [`tracing-actix`] provides `tracing` integration for the `actix` actor","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":28926,"byte_end":29003,"line_start":723,"line_end":723,"column_start":1,"column_end":78}},{"value":"/    framework.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29004,"byte_end":29021,"line_start":724,"line_end":724,"column_start":1,"column_end":18}},{"value":"/  - [`tracing-gelf`] implements a subscriber for exporting traces in Greylog","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29022,"byte_end":29101,"line_start":725,"line_end":725,"column_start":1,"column_end":80}},{"value":"/    GELF format.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29102,"byte_end":29121,"line_start":726,"line_end":726,"column_start":1,"column_end":20}},{"value":"/  - [`tracing-coz`] provides integration with the [coz] causal profiler","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29122,"byte_end":29196,"line_start":727,"line_end":727,"column_start":1,"column_end":75}},{"value":"/    (Linux-only).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29197,"byte_end":29217,"line_start":728,"line_end":728,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-bunyan-formatter`] provides a layer implementation that reports events and spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29218,"byte_end":29315,"line_start":729,"line_end":729,"column_start":1,"column_end":98}},{"value":"/    in [bunyan] format, enriched with timing information.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29316,"byte_end":29376,"line_start":730,"line_end":730,"column_start":1,"column_end":61}},{"value":"/  - [`tracing-wasm`] provides a `Subscriber`/`Layer` implementation that reports","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29377,"byte_end":29460,"line_start":731,"line_end":731,"column_start":1,"column_end":84}},{"value":"/    events and spans via browser `console.log` and [User Timing API (`window.performance`)].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29461,"byte_end":29556,"line_start":732,"line_end":732,"column_start":1,"column_end":96}},{"value":"/  - [`tide-tracing`] provides a [tide] middleware to trace all incoming requests and responses.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29557,"byte_end":29655,"line_start":733,"line_end":733,"column_start":1,"column_end":99}},{"value":"/  - [`test-log`] takes care of initializing `tracing` for tests, based on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29656,"byte_end":29732,"line_start":734,"line_end":734,"column_start":1,"column_end":77}},{"value":"/    environment variables with an `env_logger` compatible syntax.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29733,"byte_end":29801,"line_start":735,"line_end":735,"column_start":1,"column_end":69}},{"value":"/  - [`tracing-unwrap`] provides convenience methods to report failed unwraps","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29802,"byte_end":29881,"line_start":736,"line_end":736,"column_start":1,"column_end":80}},{"value":"/    on `Result` or `Option` types to a `Subscriber`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29882,"byte_end":29937,"line_start":737,"line_end":737,"column_start":1,"column_end":56}},{"value":"/  - [`diesel-tracing`] provides integration with [`diesel`] database connections.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":29938,"byte_end":30022,"line_start":738,"line_end":738,"column_start":1,"column_end":85}},{"value":"/  - [`tracing-tracy`] provides a way to collect [Tracy] profiles in instrumented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30023,"byte_end":30106,"line_start":739,"line_end":739,"column_start":1,"column_end":84}},{"value":"/    applications.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30107,"byte_end":30127,"line_start":740,"line_end":740,"column_start":1,"column_end":21}},{"value":"/  - [`tracing-elastic-apm`] provides a layer for reporting traces to [Elastic APM].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30128,"byte_end":30214,"line_start":741,"line_end":741,"column_start":1,"column_end":87}},{"value":"/  - [`tracing-etw`] provides a layer for emitting Windows [ETW] events.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30215,"byte_end":30289,"line_start":742,"line_end":742,"column_start":1,"column_end":75}},{"value":"/  - [`tracing-fluent-assertions`] provides a fluent assertions-style testing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30290,"byte_end":30369,"line_start":743,"line_end":743,"column_start":1,"column_end":80}},{"value":"/    framework for validating the behavior of `tracing` spans.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30370,"byte_end":30434,"line_start":744,"line_end":744,"column_start":1,"column_end":65}},{"value":"/  - [`sentry-tracing`] provides a layer for reporting events and traces to [Sentry].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30435,"byte_end":30522,"line_start":745,"line_end":745,"column_start":1,"column_end":88}},{"value":"/  - [`tracing-forest`] provides a subscriber that preserves contextual coherence by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30523,"byte_end":30609,"line_start":746,"line_end":746,"column_start":1,"column_end":87}},{"value":"/    grouping together logs from the same spans during writing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30610,"byte_end":30675,"line_start":747,"line_end":747,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30676,"byte_end":30679,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of a `tracing` ecosystem crate not listed above,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30680,"byte_end":30757,"line_start":749,"line_end":749,"column_start":1,"column_end":78}},{"value":"/ please let us know! We'd love to add your project to the list!","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30758,"byte_end":30824,"line_start":750,"line_end":750,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30825,"byte_end":30828,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ [`tracing-opentelemetry`]: https://crates.io/crates/tracing-opentelemetry","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30829,"byte_end":30906,"line_start":752,"line_end":752,"column_start":1,"column_end":78}},{"value":"/ [OpenTelemetry]: https://opentelemetry.io/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30907,"byte_end":30953,"line_start":753,"line_end":753,"column_start":1,"column_end":47}},{"value":"/ [`tracing-honeycomb`]: https://crates.io/crates/tracing-honeycomb","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":30954,"byte_end":31023,"line_start":754,"line_end":754,"column_start":1,"column_end":70}},{"value":"/ [`tracing-distributed`]: https://crates.io/crates/tracing-distributed","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31024,"byte_end":31097,"line_start":755,"line_end":755,"column_start":1,"column_end":74}},{"value":"/ [honeycomb.io]: https://www.honeycomb.io/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31098,"byte_end":31143,"line_start":756,"line_end":756,"column_start":1,"column_end":46}},{"value":"/ [`tracing-actix-web`]: https://crates.io/crates/tracing-actix-web","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31144,"byte_end":31213,"line_start":757,"line_end":757,"column_start":1,"column_end":70}},{"value":"/ [`tracing-actix`]: https://crates.io/crates/tracing-actix","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31214,"byte_end":31275,"line_start":758,"line_end":758,"column_start":1,"column_end":62}},{"value":"/ [`tracing-gelf`]: https://crates.io/crates/tracing-gelf","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31276,"byte_end":31335,"line_start":759,"line_end":759,"column_start":1,"column_end":60}},{"value":"/ [`tracing-coz`]: https://crates.io/crates/tracing-coz","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31336,"byte_end":31393,"line_start":760,"line_end":760,"column_start":1,"column_end":58}},{"value":"/ [coz]: https://github.com/plasma-umass/coz","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31394,"byte_end":31440,"line_start":761,"line_end":761,"column_start":1,"column_end":47}},{"value":"/ [`tracing-bunyan-formatter`]: https://crates.io/crates/tracing-bunyan-formatter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31441,"byte_end":31524,"line_start":762,"line_end":762,"column_start":1,"column_end":84}},{"value":"/ [bunyan]: https://github.com/trentm/node-bunyan","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31525,"byte_end":31576,"line_start":763,"line_end":763,"column_start":1,"column_end":52}},{"value":"/ [`tracing-wasm`]: https://docs.rs/tracing-wasm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31577,"byte_end":31627,"line_start":764,"line_end":764,"column_start":1,"column_end":51}},{"value":"/ [User Timing API (`window.performance`)]: https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31628,"byte_end":31738,"line_start":765,"line_end":765,"column_start":1,"column_end":111}},{"value":"/ [`tide-tracing`]: https://crates.io/crates/tide-tracing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31739,"byte_end":31798,"line_start":766,"line_end":766,"column_start":1,"column_end":60}},{"value":"/ [tide]: https://crates.io/crates/tide","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31799,"byte_end":31840,"line_start":767,"line_end":767,"column_start":1,"column_end":42}},{"value":"/ [`test-log`]: https://crates.io/crates/test-log","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31841,"byte_end":31892,"line_start":768,"line_end":768,"column_start":1,"column_end":52}},{"value":"/ [`tracing-unwrap`]: https://docs.rs/tracing-unwrap","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31893,"byte_end":31947,"line_start":769,"line_end":769,"column_start":1,"column_end":55}},{"value":"/ [`diesel`]: https://crates.io/crates/diesel","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31948,"byte_end":31995,"line_start":770,"line_end":770,"column_start":1,"column_end":48}},{"value":"/ [`diesel-tracing`]: https://crates.io/crates/diesel-tracing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":31996,"byte_end":32059,"line_start":771,"line_end":771,"column_start":1,"column_end":64}},{"value":"/ [`tracing-tracy`]: https://crates.io/crates/tracing-tracy","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32060,"byte_end":32121,"line_start":772,"line_end":772,"column_start":1,"column_end":62}},{"value":"/ [Tracy]: https://github.com/wolfpld/tracy","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32122,"byte_end":32167,"line_start":773,"line_end":773,"column_start":1,"column_end":46}},{"value":"/ [`tracing-elastic-apm`]: https://crates.io/crates/tracing-elastic-apm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32168,"byte_end":32241,"line_start":774,"line_end":774,"column_start":1,"column_end":74}},{"value":"/ [Elastic APM]: https://www.elastic.co/apm","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32242,"byte_end":32287,"line_start":775,"line_end":775,"column_start":1,"column_end":46}},{"value":"/ [`tracing-etw`]: https://github.com/microsoft/tracing-etw","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32288,"byte_end":32349,"line_start":776,"line_end":776,"column_start":1,"column_end":62}},{"value":"/ [ETW]: https://docs.microsoft.com/en-us/windows/win32/etw/about-event-tracing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32350,"byte_end":32431,"line_start":777,"line_end":777,"column_start":1,"column_end":82}},{"value":"/ [`tracing-fluent-assertions`]: https://crates.io/crates/tracing-fluent-assertions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32432,"byte_end":32517,"line_start":778,"line_end":778,"column_start":1,"column_end":86}},{"value":"/ [`sentry-tracing`]: https://crates.io/crates/sentry-tracing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32518,"byte_end":32581,"line_start":779,"line_end":779,"column_start":1,"column_end":64}},{"value":"/ [Sentry]: https://sentry.io/welcome/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32582,"byte_end":32622,"line_start":780,"line_end":780,"column_start":1,"column_end":41}},{"value":"/ [`tracing-forest`]: https://crates.io/crates/tracing-forest","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32623,"byte_end":32686,"line_start":781,"line_end":781,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32687,"byte_end":32690,"line_start":782,"line_end":782,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32691,"byte_end":32756,"line_start":783,"line_end":783,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Some of these ecosystem crates are currently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32757,"byte_end":32832,"line_start":784,"line_end":784,"column_start":1,"column_end":76}},{"value":"/     unreleased and/or in earlier stages of development. They may be less stable","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32833,"byte_end":32916,"line_start":785,"line_end":785,"column_start":1,"column_end":84}},{"value":"/     than <code>tracing</code> and <code>tracing-core</code>.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32917,"byte_end":32981,"line_start":786,"line_end":786,"column_start":1,"column_end":65}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32982,"byte_end":32992,"line_start":787,"line_end":787,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32993,"byte_end":32996,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":32997,"byte_end":33023,"line_start":789,"line_end":789,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33024,"byte_end":33027,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ The following crate [feature flags] are available:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33028,"byte_end":33082,"line_start":791,"line_end":791,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33083,"byte_end":33086,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ * A set of features controlling the [static verbosity level].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33087,"byte_end":33152,"line_start":793,"line_end":793,"column_start":1,"column_end":66}},{"value":"/ * `log`: causes trace instrumentation points to emit [`log`] records as well","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33153,"byte_end":33233,"line_start":794,"line_end":794,"column_start":1,"column_end":81}},{"value":"/   as trace events, if a default `tracing` subscriber has not been set. This","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33234,"byte_end":33313,"line_start":795,"line_end":795,"column_start":1,"column_end":80}},{"value":"/   is intended for use in libraries whose users may be using either `tracing`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33314,"byte_end":33394,"line_start":796,"line_end":796,"column_start":1,"column_end":81}},{"value":"/   or `log`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33395,"byte_end":33410,"line_start":797,"line_end":797,"column_start":1,"column_end":16}},{"value":"/ * `log-always`: Emit `log` records from all `tracing` spans and events, even","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33411,"byte_end":33491,"line_start":798,"line_end":798,"column_start":1,"column_end":81}},{"value":"/   if a `tracing` subscriber has been set. This should be set only by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33492,"byte_end":33564,"line_start":799,"line_end":799,"column_start":1,"column_end":73}},{"value":"/   applications which intend to collect traces and logs separately; if an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33565,"byte_end":33641,"line_start":800,"line_end":800,"column_start":1,"column_end":77}},{"value":"/   adapter is used to convert `log` records into `tracing` events, this will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33642,"byte_end":33721,"line_start":801,"line_end":801,"column_start":1,"column_end":80}},{"value":"/   cause duplicate events to occur.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33722,"byte_end":33760,"line_start":802,"line_end":802,"column_start":1,"column_end":39}},{"value":"/ * `attributes`: Includes support for the `#[instrument]` attribute.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33761,"byte_end":33832,"line_start":803,"line_end":803,"column_start":1,"column_end":72}},{"value":"/   This is on by default, but does bring in the `syn` crate as a dependency,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33833,"byte_end":33912,"line_start":804,"line_end":804,"column_start":1,"column_end":80}},{"value":"/   which may add to the compile time of crates that do not already use it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33913,"byte_end":33990,"line_start":805,"line_end":805,"column_start":1,"column_end":78}},{"value":"/ * `std`: Depend on the Rust standard library (enabled by default).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":33991,"byte_end":34061,"line_start":806,"line_end":806,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34062,"byte_end":34065,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/   `no_std` users may disable this feature with `default-features = false`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34066,"byte_end":34144,"line_start":808,"line_end":808,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34145,"byte_end":34148,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/   ```toml","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34149,"byte_end":34162,"line_start":810,"line_end":810,"column_start":1,"column_end":14}},{"value":"/   [dependencies]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34163,"byte_end":34183,"line_start":811,"line_end":811,"column_start":1,"column_end":21}},{"value":"/   tracing = { version = \"0.1.32\", default-features = false }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34184,"byte_end":34248,"line_start":812,"line_end":812,"column_start":1,"column_end":65}},{"value":"/   ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34249,"byte_end":34258,"line_start":813,"line_end":813,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34259,"byte_end":34262,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34263,"byte_end":34328,"line_start":815,"line_end":815,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>tracing</code>'s <code>no_std</code> support","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34329,"byte_end":34410,"line_start":816,"line_end":816,"column_start":1,"column_end":82}},{"value":"/     requires <code>liballoc</code>.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34411,"byte_end":34450,"line_start":817,"line_end":817,"column_start":1,"column_end":40}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34451,"byte_end":34461,"line_start":818,"line_end":818,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34462,"byte_end":34465,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ ### Unstable Features","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34466,"byte_end":34491,"line_start":820,"line_end":820,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34492,"byte_end":34495,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 0.1.x","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34496,"byte_end":34583,"line_start":822,"line_end":822,"column_start":1,"column_end":88}},{"value":"/ releases. To enable these features, the `--cfg tracing_unstable` must be passed to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34584,"byte_end":34670,"line_start":823,"line_end":823,"column_start":1,"column_end":87}},{"value":"/ `rustc` when compiling.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34671,"byte_end":34698,"line_start":824,"line_end":824,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34699,"byte_end":34702,"line_start":825,"line_end":825,"column_start":1,"column_end":4}},{"value":"/ The following unstable feature flags are currently available:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34703,"byte_end":34768,"line_start":826,"line_end":826,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34769,"byte_end":34772,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ * `valuable`: Enables support for recording [field values] using the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34773,"byte_end":34845,"line_start":828,"line_end":828,"column_start":1,"column_end":73}},{"value":"/   [`valuable`] crate.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34846,"byte_end":34871,"line_start":829,"line_end":829,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34872,"byte_end":34875,"line_start":830,"line_end":830,"column_start":1,"column_end":4}},{"value":"/ #### Enabling Unstable Features","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34876,"byte_end":34911,"line_start":831,"line_end":831,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34912,"byte_end":34915,"line_start":832,"line_end":832,"column_start":1,"column_end":4}},{"value":"/ The easiest way to set the `tracing_unstable` cfg is to use the `RUSTFLAGS`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34916,"byte_end":34995,"line_start":833,"line_end":833,"column_start":1,"column_end":80}},{"value":"/ env variable when running `cargo` commands:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":34996,"byte_end":35043,"line_start":834,"line_end":834,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35044,"byte_end":35047,"line_start":835,"line_end":835,"column_start":1,"column_end":4}},{"value":"/ ```shell","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35048,"byte_end":35060,"line_start":836,"line_end":836,"column_start":1,"column_end":13}},{"value":"/ RUSTFLAGS=\"--cfg tracing_unstable\" cargo build","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35061,"byte_end":35111,"line_start":837,"line_end":837,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35112,"byte_end":35119,"line_start":838,"line_end":838,"column_start":1,"column_end":8}},{"value":"/ Alternatively, the following can be added to the `.cargo/config` file in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35120,"byte_end":35198,"line_start":839,"line_end":839,"column_start":1,"column_end":79}},{"value":"/ project to automatically enable the cfg flag for that project:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35199,"byte_end":35265,"line_start":840,"line_end":840,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35266,"byte_end":35269,"line_start":841,"line_end":841,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35270,"byte_end":35281,"line_start":842,"line_end":842,"column_start":1,"column_end":12}},{"value":"/ [build]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35282,"byte_end":35293,"line_start":843,"line_end":843,"column_start":1,"column_end":12}},{"value":"/ rustflags = [\"--cfg\", \"tracing_unstable\"]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35294,"byte_end":35339,"line_start":844,"line_end":844,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35340,"byte_end":35347,"line_start":845,"line_end":845,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35348,"byte_end":35351,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35352,"byte_end":35449,"line_start":847,"line_end":847,"column_start":1,"column_end":98}},{"value":"/ [field values]: crate::field","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35450,"byte_end":35482,"line_start":848,"line_end":848,"column_start":1,"column_end":33}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35483,"byte_end":35534,"line_start":849,"line_end":849,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35535,"byte_end":35538,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35539,"byte_end":35569,"line_start":851,"line_end":851,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35570,"byte_end":35573,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ Tracing is built against the latest stable release. The minimum supported","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35574,"byte_end":35651,"line_start":853,"line_end":853,"column_start":1,"column_end":78}},{"value":"/ version is 1.49. The current Tracing version is not guaranteed to build on","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35652,"byte_end":35730,"line_start":854,"line_end":854,"column_start":1,"column_end":79}},{"value":"/ Rust versions earlier than the minimum supported version.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35731,"byte_end":35792,"line_start":855,"line_end":855,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35793,"byte_end":35796,"line_start":856,"line_end":856,"column_start":1,"column_end":4}},{"value":"/ Tracing follows the same compiler support policies as the rest of the Tokio","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35797,"byte_end":35876,"line_start":857,"line_end":857,"column_start":1,"column_end":80}},{"value":"/ project. The current stable Rust compiler and the three most recent minor","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35877,"byte_end":35954,"line_start":858,"line_end":858,"column_start":1,"column_end":78}},{"value":"/ versions before it will always be supported. For example, if the current","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":35955,"byte_end":36031,"line_start":859,"line_end":859,"column_start":1,"column_end":77}},{"value":"/ stable compiler version is 1.45, the minimum supported version will not be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36032,"byte_end":36110,"line_start":860,"line_end":860,"column_start":1,"column_end":79}},{"value":"/ increased past 1.42, three minor versions prior. Increasing the minimum","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36111,"byte_end":36186,"line_start":861,"line_end":861,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36187,"byte_end":36263,"line_start":862,"line_end":862,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36264,"byte_end":36311,"line_start":863,"line_end":863,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36312,"byte_end":36315,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/0.4.6/log/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36316,"byte_end":36359,"line_start":865,"line_end":865,"column_start":1,"column_end":44}},{"value":"/ [span]: mod@span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36360,"byte_end":36380,"line_start":866,"line_end":866,"column_start":1,"column_end":21}},{"value":"/ [spans]: mod@span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36381,"byte_end":36402,"line_start":867,"line_end":867,"column_start":1,"column_end":22}},{"value":"/ [`Span`]: span::Span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36403,"byte_end":36427,"line_start":868,"line_end":868,"column_start":1,"column_end":25}},{"value":"/ [`in_scope`]: span::Span::in_scope","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36428,"byte_end":36466,"line_start":869,"line_end":869,"column_start":1,"column_end":39}},{"value":"/ [event]: Event","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36467,"byte_end":36485,"line_start":870,"line_end":870,"column_start":1,"column_end":19}},{"value":"/ [events]: Event","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36486,"byte_end":36505,"line_start":871,"line_end":871,"column_start":1,"column_end":20}},{"value":"/ [`Subscriber`]: subscriber::Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36506,"byte_end":36548,"line_start":872,"line_end":872,"column_start":1,"column_end":43}},{"value":"/ [Subscriber::event]: subscriber::Subscriber::event","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36549,"byte_end":36603,"line_start":873,"line_end":873,"column_start":1,"column_end":55}},{"value":"/ [`enter`]: subscriber::Subscriber::enter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36604,"byte_end":36648,"line_start":874,"line_end":874,"column_start":1,"column_end":45}},{"value":"/ [`exit`]: subscriber::Subscriber::exit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36649,"byte_end":36691,"line_start":875,"line_end":875,"column_start":1,"column_end":43}},{"value":"/ [`enabled`]: subscriber::Subscriber::enabled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36692,"byte_end":36740,"line_start":876,"line_end":876,"column_start":1,"column_end":49}},{"value":"/ [metadata]: Metadata","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36741,"byte_end":36765,"line_start":877,"line_end":877,"column_start":1,"column_end":25}},{"value":"/ [`field::display`]: field::display","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36766,"byte_end":36804,"line_start":878,"line_end":878,"column_start":1,"column_end":39}},{"value":"/ [`field::debug`]: field::debug","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36805,"byte_end":36839,"line_start":879,"line_end":879,"column_start":1,"column_end":35}},{"value":"/ [`set_global_default`]: subscriber::set_global_default","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36840,"byte_end":36898,"line_start":880,"line_end":880,"column_start":1,"column_end":59}},{"value":"/ [`with_default`]: subscriber::with_default","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36899,"byte_end":36945,"line_start":881,"line_end":881,"column_start":1,"column_end":47}},{"value":"/ [`tokio-rs/tracing`]: https://github.com/tokio-rs/tracing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":36946,"byte_end":37007,"line_start":882,"line_end":882,"column_start":1,"column_end":62}},{"value":"/ [`tracing-futures`]: https://crates.io/crates/tracing-futures","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37008,"byte_end":37073,"line_start":883,"line_end":883,"column_start":1,"column_end":66}},{"value":"/ [`tracing-subscriber`]: https://crates.io/crates/tracing-subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37074,"byte_end":37145,"line_start":884,"line_end":884,"column_start":1,"column_end":72}},{"value":"/ [`tracing-log`]: https://crates.io/crates/tracing-log","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37146,"byte_end":37203,"line_start":885,"line_end":885,"column_start":1,"column_end":58}},{"value":"/ [`tracing-timing`]: https://crates.io/crates/tracing-timing","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37204,"byte_end":37267,"line_start":886,"line_end":886,"column_start":1,"column_end":64}},{"value":"/ [`tracing-appender`]: https://crates.io/crates/tracing-appender","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37268,"byte_end":37335,"line_start":887,"line_end":887,"column_start":1,"column_end":68}},{"value":"/ [`env_logger`]: https://crates.io/crates/env_logger","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37336,"byte_end":37391,"line_start":888,"line_end":888,"column_start":1,"column_end":56}},{"value":"/ [`FmtSubscriber`]: https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/struct.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37392,"byte_end":37502,"line_start":889,"line_end":889,"column_start":1,"column_end":111}},{"value":"/ [static verbosity level]: level_filters/index.html#compile-time-filters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37503,"byte_end":37578,"line_start":890,"line_end":890,"column_start":1,"column_end":76}},{"value":"/ [instrument]: https://docs.rs/tracing-attributes/latest/tracing_attributes/attr.instrument.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37579,"byte_end":37678,"line_start":891,"line_end":891,"column_start":1,"column_end":100}},{"value":"/ [flags]: #crate-feature-flags","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":37679,"byte_end":37712,"line_start":892,"line_end":892,"column_start":1,"column_end":34}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub, bad_style, const_err, dead_code, improper_ctypes,\n       non_shorthand_field_patterns, no_mangle_generic_items,\n       overflowing_literals, path_statements, patterns_in_fns_without_body,\n       private_in_public, unconditional_recursion, unused, unused_allocation,\n       unused_comparisons, unused_parens, while_true)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":38080,"byte_end":38542,"line_start":900,"line_end":921,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":69},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dispatcher","qualname":"::dispatcher","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92}],"decl_id":null,"docs":" Dispatches trace events to [`Subscriber`]s.","sig":null,"attributes":[{"value":"/ Dispatches trace events to [`Subscriber`]s.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120543,"byte_end":120590,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120591,"byte_end":120594,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The _dispatcher_ is the component of the tracing system which is responsible","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120595,"byte_end":120675,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ for forwarding trace data from the instrumentation points that generate it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120676,"byte_end":120754,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ to the subscriber that collects it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120755,"byte_end":120794,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120795,"byte_end":120798,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Using the Trace Dispatcher","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120799,"byte_end":120831,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120832,"byte_end":120835,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Every thread in a program using `tracing` has a _default subscriber_. When","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120836,"byte_end":120914,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ events occur, or spans are created, they are dispatched to the thread's","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120915,"byte_end":120990,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ current subscriber.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":120991,"byte_end":121014,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121015,"byte_end":121018,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Setting the Default Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121019,"byte_end":121056,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121057,"byte_end":121060,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ By default, the current subscriber is an empty implementation that does","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121061,"byte_end":121136,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ nothing. To use a subscriber implementation, it must be set as the default.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121137,"byte_end":121216,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ There are two methods for doing so: [`with_default`] and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121217,"byte_end":121277,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/ [`set_global_default`]. `with_default` sets the default subscriber for the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121278,"byte_end":121356,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ duration of a scope, while `set_global_default` sets a default subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121357,"byte_end":121434,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ for the entire process.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121435,"byte_end":121462,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121463,"byte_end":121466,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ To use either of these functions, we must first wrap our subscriber in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121467,"byte_end":121543,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ [`Dispatch`], a cloneable, type-erased reference to a subscriber. For","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121544,"byte_end":121617,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121618,"byte_end":121630,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121631,"byte_end":121642,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121643,"byte_end":121674,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121675,"byte_end":121700,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121701,"byte_end":121737,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121738,"byte_end":121776,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121777,"byte_end":121785,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121786,"byte_end":121841,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121842,"byte_end":121910,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121911,"byte_end":121958,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121959,"byte_end":121996,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":121997,"byte_end":122053,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122054,"byte_end":122111,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122112,"byte_end":122146,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122147,"byte_end":122180,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122181,"byte_end":122188,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122189,"byte_end":122252,"line_start":40,"line_end":40,"column_start":1,"column_end":64}},{"value":"/ use dispatcher::Dispatch;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122253,"byte_end":122282,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122283,"byte_end":122286,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122287,"byte_end":122332,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ let my_dispatch = Dispatch::new(my_subscriber);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122333,"byte_end":122384,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122385,"byte_end":122392,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Then, we can use [`with_default`] to set our `Dispatch` as the default for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122393,"byte_end":122471,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ the duration of a block:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122472,"byte_end":122500,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122501,"byte_end":122512,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122513,"byte_end":122544,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122545,"byte_end":122570,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122571,"byte_end":122607,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122608,"byte_end":122646,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122647,"byte_end":122655,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122656,"byte_end":122711,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122712,"byte_end":122780,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122781,"byte_end":122828,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122829,"byte_end":122866,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122867,"byte_end":122923,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122924,"byte_end":122981,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":122982,"byte_end":123016,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123017,"byte_end":123050,"line_start":61,"line_end":61,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123051,"byte_end":123058,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123059,"byte_end":123122,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123123,"byte_end":123170,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123171,"byte_end":123236,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123237,"byte_end":123265,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123266,"byte_end":123269,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123270,"byte_end":123299,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/ dispatcher::with_default(&my_dispatch, || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123300,"byte_end":123347,"line_start":69,"line_end":69,"column_start":1,"column_end":48}},{"value":"/     // my_subscriber is the default","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123348,"byte_end":123387,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123388,"byte_end":123395,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123396,"byte_end":123399,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ // no default subscriber again","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123400,"byte_end":123434,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123435,"byte_end":123442,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ It's important to note that `with_default` will not propagate the current","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123443,"byte_end":123520,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ thread's default subscriber to any threads spawned within the `with_default`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123521,"byte_end":123601,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ block. To propagate the default subscriber to new threads, either use","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123602,"byte_end":123675,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ `with_default` from the new thread, or use `set_global_default`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123676,"byte_end":123744,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123745,"byte_end":123748,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As an alternative to `with_default`, we can use [`set_global_default`] to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123749,"byte_end":123826,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ set a `Dispatch` as the default for all threads, for the lifetime of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123827,"byte_end":123903,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ program. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123904,"byte_end":123929,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123930,"byte_end":123941,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ # pub struct FooSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123942,"byte_end":123973,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/ # use tracing_core::{","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":123974,"byte_end":123999,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/ #   dispatcher, Event, Metadata,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124000,"byte_end":124036,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ #   span::{Attributes, Id, Record}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124037,"byte_end":124075,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ # };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124076,"byte_end":124084,"line_start":88,"line_end":88,"column_start":1,"column_end":9}},{"value":"/ # impl tracing_core::Subscriber for FooSubscriber {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124085,"byte_end":124140,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/ #   fn new_span(&self, _: &Attributes) -> Id { Id::from_u64(0) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124141,"byte_end":124209,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ #   fn record(&self, _: &Id, _: &Record) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124210,"byte_end":124257,"line_start":91,"line_end":91,"column_start":1,"column_end":48}},{"value":"/ #   fn event(&self, _: &Event) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124258,"byte_end":124295,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/ #   fn record_follows_from(&self, _: &Id, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124296,"byte_end":124352,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ #   fn enabled(&self, _: &Metadata) -> bool { false }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124353,"byte_end":124410,"line_start":94,"line_end":94,"column_start":1,"column_end":58}},{"value":"/ #   fn enter(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124411,"byte_end":124445,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ #   fn exit(&self, _: &Id) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124446,"byte_end":124479,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124480,"byte_end":124487,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ # impl FooSubscriber { fn new() -> Self { FooSubscriber } }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124488,"byte_end":124551,"line_start":98,"line_end":98,"column_start":1,"column_end":64}},{"value":"/ # let my_subscriber = FooSubscriber::new();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124552,"byte_end":124599,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ # let my_dispatch = dispatcher::Dispatch::new(my_subscriber);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124600,"byte_end":124665,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ // no default subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124666,"byte_end":124694,"line_start":101,"line_end":101,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124695,"byte_end":124698,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ dispatcher::set_global_default(my_dispatch)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124699,"byte_end":124746,"line_start":103,"line_end":103,"column_start":1,"column_end":48}},{"value":"/     // `set_global_default` will return an error if the global default","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124747,"byte_end":124821,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/     // subscriber has already been set.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124822,"byte_end":124865,"line_start":105,"line_end":105,"column_start":1,"column_end":44}},{"value":"/     .expect(\"global default was already set!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124866,"byte_end":124917,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124918,"byte_end":124921,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // `my_subscriber` is now the default","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124922,"byte_end":124963,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124964,"byte_end":124971,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124972,"byte_end":124975,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":124976,"byte_end":125041,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: The thread-local scoped dispatcher (<code>with_default</code>)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125042,"byte_end":125131,"line_start":112,"line_end":112,"column_start":1,"column_end":90}},{"value":"/ requires the Rust standard library. <code>no_std</code> users should","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125132,"byte_end":125204,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ use <a href=\"fn.set_global_default.html\"><code>set_global_default</code></a>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125205,"byte_end":125285,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125286,"byte_end":125298,"line_start":115,"line_end":115,"column_start":1,"column_end":13}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125299,"byte_end":125309,"line_start":116,"line_end":116,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125310,"byte_end":125313,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ## Accessing the Default Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125314,"byte_end":125353,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125354,"byte_end":125357,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ A thread's current default subscriber can be accessed using the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125358,"byte_end":125425,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/ [`get_default`] function, which executes a closure with a reference to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125426,"byte_end":125504,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"/ currently default `Dispatch`. This is used primarily by `tracing`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125505,"byte_end":125574,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ instrumentation.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125575,"byte_end":125595,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125596,"byte_end":125599,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ [`Subscriber`]: trait.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125600,"byte_end":125641,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ [`with_default`]: fn.with_default.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125642,"byte_end":125684,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/ [`set_global_default`]: fn.set_global_default.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125685,"byte_end":125739,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ [`get_default`]: fn.get_default.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125740,"byte_end":125780,"line_start":128,"line_end":128,"column_start":1,"column_end":41}},{"value":"/ [`Dispatch`]: struct.Dispatch.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/dispatcher.rs","byte_start":125781,"byte_end":125819,"line_start":129,"line_end":129,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":95},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"field","qualname":"::field","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"decl_id":null,"docs":" `Span` and `Event` key-value data.","sig":null,"attributes":[{"value":"/ `Span` and `Event` key-value data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126603,"byte_end":126641,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126642,"byte_end":126645,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Spans and events may be annotated with key-value data, referred to as known","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126646,"byte_end":126725,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ as _fields_. These fields consist of a mapping from a key (corresponding to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126726,"byte_end":126805,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ a `&str` but represented internally as an array index) to a [`Value`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126806,"byte_end":126880,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126881,"byte_end":126884,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # `Value`s and `Subscriber`s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126885,"byte_end":126917,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126918,"byte_end":126921,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Subscriber`s consume `Value`s as fields attached to [span]s or [`Event`]s.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":126922,"byte_end":127001,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ The set of field keys on a given span or is defined on its [`Metadata`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127002,"byte_end":127078,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ When a span is created, it provides [`Attributes`] to the `Subscriber`'s","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127079,"byte_end":127155,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ [`new_span`] method, containing any fields whose values were provided when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127156,"byte_end":127234,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ the span was created; and may call the `Subscriber`'s [`record`] method","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127235,"byte_end":127310,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ with additional [`Record`]s if values are added for more of its fields.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127311,"byte_end":127386,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ Similarly, the [`Event`] type passed to the subscriber's [`event`] method","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127387,"byte_end":127464,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ will contain any fields attached to each event.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127465,"byte_end":127516,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127517,"byte_end":127520,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `tracing` represents values as either one of a set of Rust primitives","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127521,"byte_end":127594,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ (`i64`, `u64`, `f64`, `bool`, and `&str`) or using a `fmt::Display` or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127595,"byte_end":127669,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ `fmt::Debug` implementation. `Subscriber`s are provided these primitive","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127670,"byte_end":127745,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ value types as `dyn Value` trait objects.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127746,"byte_end":127791,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127792,"byte_end":127795,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These trait objects can be formatted using `fmt::Debug`, but may also be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127796,"byte_end":127872,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ recorded as typed data by calling the [`Value::record`] method on these","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127873,"byte_end":127948,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ trait objects with a _visitor_ implementing the [`Visit`] trait. This trait","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":127949,"byte_end":128028,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ represents the behavior used to record values of various types. For example,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128029,"byte_end":128109,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ an implementation of `Visit` might record integers by incrementing counters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128110,"byte_end":128189,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ for their field names rather than printing them.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128190,"byte_end":128242,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128243,"byte_end":128246,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128247,"byte_end":128250,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Using `valuable`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128251,"byte_end":128273,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128274,"byte_end":128277,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `tracing`'s [`Value`] trait is intentionally minimalist: it supports only a small","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128278,"byte_end":128363,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ number of Rust primitives as typed values, and only permits recording","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128364,"byte_end":128437,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ user-defined types with their [`fmt::Debug`] or [`fmt::Display`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128438,"byte_end":128506,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ implementations. However, there are some cases where it may be useful to record","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128507,"byte_end":128590,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ nested values (such as arrays, `Vec`s, or `HashMap`s containing values), or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128591,"byte_end":128670,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ user-defined `struct` and `enum` types without having to format them as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128671,"byte_end":128746,"line_start":38,"line_end":38,"column_start":1,"column_end":76}},{"value":"/ unstructured text.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128747,"byte_end":128769,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128770,"byte_end":128773,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To address `Value`'s limitations, `tracing` offers experimental support for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128774,"byte_end":128853,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ the [`valuable`] crate, which provides object-safe inspection of structured","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128854,"byte_end":128933,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ values. User-defined types can implement the [`valuable::Valuable`] trait,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":128934,"byte_end":129012,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ and be recorded as a `tracing` field by calling their [`as_value`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129013,"byte_end":129091,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ If the [`Subscriber`] also supports the `valuable` crate, it can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129092,"byte_end":129160,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ then visit those types fields as structured values using `valuable`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129161,"byte_end":129233,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129234,"byte_end":129237,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129238,"byte_end":129303,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: <code>valuable</code> support is an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129304,"byte_end":129370,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/     <a href = \"../index.html#unstable-features\">unstable feature</a>. See","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129371,"byte_end":129448,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/     the documentation on unstable features for details on how to enable it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129449,"byte_end":129528,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129529,"byte_end":129539,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129540,"byte_end":129543,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129544,"byte_end":129560,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/ ```ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129561,"byte_end":129574,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ // Derive `Valuable` for our types:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129575,"byte_end":129614,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/ use valuable::Valuable;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129615,"byte_end":129642,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129643,"byte_end":129646,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129647,"byte_end":129684,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ struct User {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129685,"byte_end":129702,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/     name: String,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129703,"byte_end":129724,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     age: u32,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129725,"byte_end":129742,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     address: Address,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129743,"byte_end":129768,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129769,"byte_end":129774,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129775,"byte_end":129778,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Valuable)]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129779,"byte_end":129816,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"/ struct Address {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129817,"byte_end":129837,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/     country: String,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129838,"byte_end":129862,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     city: String,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129863,"byte_end":129884,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/     street: String,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129885,"byte_end":129908,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129909,"byte_end":129914,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129915,"byte_end":129918,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let user = User {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129919,"byte_end":129940,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     name: \"Arwen Undomiel\".to_string(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129941,"byte_end":129984,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/     age: 3000,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":129985,"byte_end":130003,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/     address: Address {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130004,"byte_end":130030,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/         country: \"Middle Earth\".to_string(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130031,"byte_end":130079,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         city: \"Rivendell\".to_string(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130080,"byte_end":130122,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/         street: \"leafy lane\".to_string(),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130123,"byte_end":130168,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     },","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130169,"byte_end":130179,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130180,"byte_end":130186,"line_start":81,"line_end":81,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130187,"byte_end":130190,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Recording `user` as a `valuable::Value` will allow the `tracing` subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130191,"byte_end":130273,"line_start":83,"line_end":83,"column_start":1,"column_end":83}},{"value":"/ // to traverse its fields as a nested, typed structure:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130274,"byte_end":130333,"line_start":84,"line_end":84,"column_start":1,"column_end":60}},{"value":"/ tracing::info!(current_user = user.as_value());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130334,"byte_end":130385,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130386,"byte_end":130393,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130394,"byte_end":130397,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Alternatively, the [`valuable()`] function may be used to convert a type","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130398,"byte_end":130474,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ implementing [`Valuable`] into a `tracing` field value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130475,"byte_end":130534,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130535,"byte_end":130538,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ When the `valuable` feature is enabled, the [`Visit`] trait will include an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130539,"byte_end":130618,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ optional [`record_value`] method. `Visit` implementations that wish to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130619,"byte_end":130693,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ record `valuable` values can implement this method with custom behavior.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130694,"byte_end":130770,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ If a visitor does not implement `record_value`, the [`valuable::Value`] will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130771,"byte_end":130851,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ be forwarded to the visitor's [`record_debug`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130852,"byte_end":130910,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130911,"byte_end":130914,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ [`fmt::Debug`]: std::fmt::Debug","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130915,"byte_end":130950,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"/ [`fmt::Display`]: std::fmt::Debug","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130951,"byte_end":130988,"line_start":98,"line_end":98,"column_start":1,"column_end":38}},{"value":"/ [`valuable`]: https://crates.io/crates/valuable","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":130989,"byte_end":131040,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ [`valuable::Valuable`]: https://docs.rs/valuable/latest/valuable/trait.Valuable.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131041,"byte_end":131129,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ [`as_value`]: https://docs.rs/valuable/latest/valuable/trait.Valuable.html#tymethod.as_value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131130,"byte_end":131226,"line_start":101,"line_end":101,"column_start":1,"column_end":97}},{"value":"/ [`valuable::Value`]: https://docs.rs/valuable/latest/valuable/enum.Value.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131227,"byte_end":131308,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131309,"byte_end":131346,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/ [`record_value`]: Visit::record_value","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131347,"byte_end":131388,"line_start":104,"line_end":104,"column_start":1,"column_end":42}},{"value":"/ [`record_debug`]: Visit::record_debug","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131389,"byte_end":131430,"line_start":105,"line_end":105,"column_start":1,"column_end":42}},{"value":"/ [span]: mod@crate::span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131431,"byte_end":131458,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/ [`Event`]: crate::event::Event","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131459,"byte_end":131493,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ [`Metadata`]: crate::Metadata","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131494,"byte_end":131527,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/ [`Attributes`]: crate::span::Attributes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131528,"byte_end":131571,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"/ [`Record`]: crate::span::Record","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131572,"byte_end":131607,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`new_span`]: crate::Subscriber::new_span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131608,"byte_end":131653,"line_start":111,"line_end":111,"column_start":1,"column_end":46}},{"value":"/ [`record`]: crate::Subscriber::record","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131654,"byte_end":131695,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"/ [`event`]: crate::Subscriber::event","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131696,"byte_end":131735,"line_start":113,"line_end":113,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132406,"byte_end":132413,"line_start":129,"line_end":129,"column_start":11,"column_end":18},"name":"AsField","qualname":"::field::AsField","value":"AsField: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" Trait implemented to allow a type to be used as a field key.","sig":null,"attributes":[{"value":"/ Trait implemented to allow a type to be used as a field key.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131791,"byte_end":131855,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131856,"byte_end":131859,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131860,"byte_end":131925,"line_start":120,"line_end":120,"column_start":1,"column_end":66}},{"value":"/ <strong>Note</strong>: Although this is implemented for both the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131926,"byte_end":131994,"line_start":121,"line_end":121,"column_start":1,"column_end":69}},{"value":"/ <a href=\"./struct.Field.html\"><code>Field</code></a> type <em>and</em> any","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":131995,"byte_end":132073,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ type that can be borrowed as an <code>&str</code>, only <code>Field</code>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132074,"byte_end":132152,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ allows <em>O</em>(1) access.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132153,"byte_end":132185,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"/ Indexing a field with a string results in an iterative search that performs","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132186,"byte_end":132265,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ string comparisons. Thus, if possible, once the key for a field is known, it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132266,"byte_end":132346,"line_start":126,"line_end":126,"column_start":1,"column_end":81}},{"value":"/ should be used whenever possible.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132347,"byte_end":132384,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132385,"byte_end":132395,"line_start":128,"line_end":128,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132646,"byte_end":132654,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"as_field","qualname":"::field::AsField::as_field","value":"pub fn as_field(&Self, &Metadata) -> Option<Field>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" Attempts to convert `&self` into a `Field` with the specified `metadata`.","sig":null,"attributes":[{"value":"/ Attempts to convert `&self` into a `Field` with the specified `metadata`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132443,"byte_end":132520,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132525,"byte_end":132528,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ If `metadata` defines this field, then the field is returned. Otherwise,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132533,"byte_end":132609,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ this returns `None`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132614,"byte_end":132638,"line_start":133,"line_end":133,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":113},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instrument","qualname":"::instrument","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":443},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" Attach a span to a `std::future::Future`.\n","sig":null,"attributes":[{"value":"/ Attach a span to a `std::future::Future`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39425,"byte_end":39470,"line_start":962,"line_end":962,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133912,"byte_end":133922,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"name":"Instrument","qualname":"::instrument::Instrument","value":"Instrument: Sized","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Attaches spans to a [`std::future::Future`].","sig":null,"attributes":[{"value":"/ Attaches spans to a [`std::future::Future`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133736,"byte_end":133784,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133785,"byte_end":133788,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Extension trait allowing futures to be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133789,"byte_end":133831,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/ instrumented with a `tracing` [span].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133832,"byte_end":133873,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133874,"byte_end":133877,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [span]: super::Span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133878,"byte_end":133901,"line_start":15,"line_end":15,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136151,"byte_end":136161,"line_start":82,"line_end":82,"column_start":8,"column_end":18},"name":"instrument","qualname":"::instrument::Instrument::instrument","value":"pub fn instrument(Self, Span) -> Instrumented<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Instruments this type with the provided [`Span`], returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the provided [`Span`], returning an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133936,"byte_end":134002,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134007,"byte_end":134034,"line_start":18,"line_end":18,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134039,"byte_end":134042,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The attached [`Span`] will be [entered] every time the instrumented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134047,"byte_end":134118,"line_start":20,"line_end":20,"column_start":5,"column_end":76}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134123,"byte_end":134148,"line_start":21,"line_end":21,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134153,"byte_end":134156,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134161,"byte_end":134175,"line_start":23,"line_end":23,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134180,"byte_end":134183,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Instrumenting a future:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134188,"byte_end":134215,"line_start":25,"line_end":25,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134220,"byte_end":134223,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134228,"byte_end":134239,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134244,"byte_end":134272,"line_start":28,"line_end":28,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134277,"byte_end":134280,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134285,"byte_end":134307,"line_start":30,"line_end":30,"column_start":5,"column_end":27}},{"value":"/ let my_future = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134312,"byte_end":134339,"line_start":31,"line_end":31,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134344,"byte_end":134358,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134363,"byte_end":134369,"line_start":33,"line_end":33,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134374,"byte_end":134377,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ my_future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134382,"byte_end":134395,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/     .instrument(tracing::info_span!(\"my_future\"))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134400,"byte_end":134453,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/     .await","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134458,"byte_end":134472,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134477,"byte_end":134484,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134489,"byte_end":134496,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134501,"byte_end":134504,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ The [`Span::or_current`] combinator can be used in combination with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134509,"byte_end":134580,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ `instrument` to ensure that the [current span] is attached to the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134585,"byte_end":134654,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ future if the span passed to `instrument` is [disabled]:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134659,"byte_end":134719,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134724,"byte_end":134727,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134732,"byte_end":134739,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134744,"byte_end":134772,"line_start":46,"line_end":46,"column_start":5,"column_end":33}},{"value":"/ # mod tokio {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134777,"byte_end":134794,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134799,"byte_end":134860,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134865,"byte_end":134872,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134877,"byte_end":134880,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let my_future = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134885,"byte_end":134912,"line_start":51,"line_end":51,"column_start":5,"column_end":32}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134917,"byte_end":134931,"line_start":52,"line_end":52,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134936,"byte_end":134942,"line_start":53,"line_end":53,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134947,"byte_end":134950,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let outer_span = tracing::info_span!(\"outer\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":134955,"byte_end":135015,"line_start":55,"line_end":55,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135020,"byte_end":135023,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ // If the \"my_future\" span is enabled, then the spawned task will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135028,"byte_end":135097,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ // be within both \"my_future\" *and* \"outer\", since \"outer\" is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135102,"byte_end":135167,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/ // \"my_future\"'s parent. However, if \"my_future\" is disabled,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135172,"byte_end":135237,"line_start":59,"line_end":59,"column_start":5,"column_end":70}},{"value":"/ // the spawned task will *not* be in any span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135242,"byte_end":135292,"line_start":60,"line_end":60,"column_start":5,"column_end":55}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135297,"byte_end":135314,"line_start":61,"line_end":61,"column_start":5,"column_end":22}},{"value":"/     my_future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135319,"byte_end":135336,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\"))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135341,"byte_end":135399,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135404,"byte_end":135410,"line_start":64,"line_end":64,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135415,"byte_end":135418,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ // Using `Span::or_current` ensures the spawned task is instrumented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135423,"byte_end":135495,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ // with the current span, if the new span passed to `instrument` is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135500,"byte_end":135571,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ // not enabled. This means that if the \"my_future\"  span is disabled,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135576,"byte_end":135649,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ // the spawned task will still be instrumented with the \"outer\" span:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135654,"byte_end":135727,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ # let my_future = async {};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135732,"byte_end":135763,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135768,"byte_end":135785,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/    my_future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135790,"byte_end":135806,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/         .instrument(tracing::debug_span!(\"my_future\").or_current())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135811,"byte_end":135882,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135887,"byte_end":135893,"line_start":74,"line_end":74,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135898,"byte_end":135905,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135910,"byte_end":135913,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135918,"byte_end":135953,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ [`Span::or_current`]: super::Span::or_current()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":135958,"byte_end":136009,"line_start":78,"line_end":78,"column_start":5,"column_end":56}},{"value":"/ [current span]: super::Span::current()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136014,"byte_end":136056,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/ [disabled]: super::Span::is_disabled()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136061,"byte_end":136103,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136108,"byte_end":136143,"line_start":81,"line_end":81,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137282,"byte_end":137297,"line_start":121,"line_end":121,"column_start":8,"column_end":23},"name":"in_current_span","qualname":"::instrument::Instrument::in_current_span","value":"pub fn in_current_span(Self) -> Instrumented<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Instruments this type with the [current] [`Span`], returning an\n `Instrumented` wrapper.","sig":null,"attributes":[{"value":"/ Instruments this type with the [current] [`Span`], returning an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136258,"byte_end":136325,"line_start":86,"line_end":86,"column_start":5,"column_end":72}},{"value":"/ `Instrumented` wrapper.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136330,"byte_end":136357,"line_start":87,"line_end":87,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136362,"byte_end":136365,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The attached [`Span`] will be [entered] every time the instrumented","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136370,"byte_end":136441,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136446,"byte_end":136471,"line_start":90,"line_end":90,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136476,"byte_end":136479,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current span when spawning a new future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136484,"byte_end":136562,"line_start":92,"line_end":92,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136567,"byte_end":136570,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136575,"byte_end":136589,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136594,"byte_end":136597,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136602,"byte_end":136613,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136618,"byte_end":136646,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136651,"byte_end":136654,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # mod tokio {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136659,"byte_end":136676,"line_start":99,"line_end":99,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136681,"byte_end":136742,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136747,"byte_end":136754,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136759,"byte_end":136781,"line_start":102,"line_end":102,"column_start":5,"column_end":27}},{"value":"/ let span = tracing::info_span!(\"my_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136786,"byte_end":136832,"line_start":103,"line_end":103,"column_start":5,"column_end":51}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136837,"byte_end":136867,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136872,"byte_end":136875,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136880,"byte_end":136890,"line_start":106,"line_end":106,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136895,"byte_end":136898,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136903,"byte_end":136927,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     tracing::debug!(\"this event will occur inside `my_span`\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":136932,"byte_end":136998,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137003,"byte_end":137017,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137022,"byte_end":137028,"line_start":111,"line_end":111,"column_start":5,"column_end":11}},{"value":"/ tokio::spawn(future.in_current_span());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137033,"byte_end":137076,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137081,"byte_end":137088,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137093,"byte_end":137100,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137105,"byte_end":137108,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [current]: super::Span::current()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137113,"byte_end":137150,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"/ [entered]: super::Span::enter()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137155,"byte_end":137190,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/ [`Span`]: crate::Span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137195,"byte_end":137220,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137225,"byte_end":137260,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137265,"byte_end":137274,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137547,"byte_end":137561,"line_start":129,"line_end":129,"column_start":11,"column_end":25},"name":"WithSubscriber","qualname":"::instrument::WithSubscriber","value":"WithSubscriber: Sized","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":151}],"decl_id":null,"docs":" Extension trait allowing futures to be instrumented with\n a `tracing` [`Subscriber`](crate::Subscriber).\n","sig":null,"attributes":[{"value":"/ Extension trait allowing futures to be instrumented with","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137378,"byte_end":137438,"line_start":126,"line_end":126,"column_start":1,"column_end":61}},{"value":"/ a `tracing` [`Subscriber`](crate::Subscriber).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137439,"byte_end":137489,"line_start":127,"line_end":127,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139089,"byte_end":139104,"line_start":169,"line_end":169,"column_start":8,"column_end":23},"name":"with_subscriber","qualname":"::instrument::WithSubscriber::with_subscriber","value":"pub fn with_subscriber<S>(Self, S) -> WithDispatch<Self> where\nS: Into<Dispatch>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Attaches the provided [`Subscriber`] to this type, returning a\n [`WithDispatch`] wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Subscriber`] to this type, returning a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137575,"byte_end":137641,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/ [`WithDispatch`] wrapper.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137646,"byte_end":137675,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137680,"byte_end":137683,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The attached [`Subscriber`] will be set as the [default] when the returned","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137688,"byte_end":137766,"line_start":133,"line_end":133,"column_start":5,"column_end":83}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137771,"byte_end":137796,"line_start":134,"line_end":134,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137801,"byte_end":137804,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137809,"byte_end":137823,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137828,"byte_end":137831,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137836,"byte_end":137843,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # use tracing::subscriber::NoSubscriber as MySubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137848,"byte_end":137908,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/ # use tracing::subscriber::NoSubscriber as MyOtherSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137913,"byte_end":137978,"line_start":140,"line_end":140,"column_start":5,"column_end":70}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137983,"byte_end":138006,"line_start":141,"line_end":141,"column_start":5,"column_end":28}},{"value":"/ use tracing::instrument::WithSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138011,"byte_end":138055,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138060,"byte_end":138063,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Set the default `Subscriber`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138068,"byte_end":138103,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/ let _default = tracing::subscriber::set_default(MySubscriber::default());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138108,"byte_end":138185,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138190,"byte_end":138193,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ tracing::info!(\"this event will be recorded by the default `Subscriber`\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138198,"byte_end":138276,"line_start":147,"line_end":147,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138281,"byte_end":138284,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // Create a different `Subscriber` and attach it to a future.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138289,"byte_end":138354,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ let other_subscriber = MyOtherSubscriber::default();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138359,"byte_end":138415,"line_start":150,"line_end":150,"column_start":5,"column_end":61}},{"value":"/ let future = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138420,"byte_end":138444,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/     tracing::info!(\"this event will be recorded by the other `Subscriber`\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138449,"byte_end":138529,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138534,"byte_end":138548,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138553,"byte_end":138559,"line_start":154,"line_end":154,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138564,"byte_end":138567,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138572,"byte_end":138582,"line_start":156,"line_end":156,"column_start":5,"column_end":15}},{"value":"/     // Attach the other `Subscriber` to the future before awaiting it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138587,"byte_end":138660,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/     .with_subscriber(other_subscriber)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138665,"byte_end":138707,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/     .await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138712,"byte_end":138727,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138732,"byte_end":138735,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Once the future has completed, we return to the default `Subscriber`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138740,"byte_end":138816,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ tracing::info!(\"this event will be recorded by the default `Subscriber`\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138821,"byte_end":138899,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138904,"byte_end":138911,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138916,"byte_end":138923,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138928,"byte_end":138931,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138936,"byte_end":138973,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ [default]: crate::dispatcher#setting-the-default-subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":138978,"byte_end":139041,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139046,"byte_end":139081,"line_start":168,"line_end":168,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140987,"byte_end":141010,"line_start":221,"line_end":221,"column_start":8,"column_end":31},"name":"with_current_subscriber","qualname":"::instrument::WithSubscriber::with_current_subscriber","value":"pub fn with_current_subscriber(Self) -> WithDispatch<Self>","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Attaches the current [default] [`Subscriber`] to this type, returning a\n [`WithDispatch`] wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [default] [`Subscriber`] to this type, returning a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139306,"byte_end":139381,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ [`WithDispatch`] wrapper.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139386,"byte_end":139415,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139420,"byte_end":139423,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The attached `Subscriber` will be set as the [default] when the returned","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139428,"byte_end":139504,"line_start":182,"line_end":182,"column_start":5,"column_end":81}},{"value":"/ [`Future`] is polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139509,"byte_end":139534,"line_start":183,"line_end":183,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139539,"byte_end":139542,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This can be used to propagate the current dispatcher context when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139547,"byte_end":139616,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ spawning a new future that may run on a different thread.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139621,"byte_end":139682,"line_start":186,"line_end":186,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139687,"byte_end":139690,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139695,"byte_end":139709,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139714,"byte_end":139717,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139722,"byte_end":139729,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # mod tokio {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139734,"byte_end":139751,"line_start":191,"line_end":191,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139756,"byte_end":139817,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139822,"byte_end":139829,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use tracing::subscriber::NoSubscriber as MySubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139834,"byte_end":139894,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139899,"byte_end":139922,"line_start":195,"line_end":195,"column_start":5,"column_end":28}},{"value":"/ use tracing::instrument::WithSubscriber;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139927,"byte_end":139971,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139976,"byte_end":139979,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // Using `set_default` (rather than `set_global_default`) sets the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":139984,"byte_end":140054,"line_start":198,"line_end":198,"column_start":5,"column_end":75}},{"value":"/ // default `Subscriber` for *this* thread only.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140059,"byte_end":140110,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/ let _default = tracing::subscriber::set_default(MySubscriber::default());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140115,"byte_end":140192,"line_start":200,"line_end":200,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140197,"byte_end":140200,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let future = async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140205,"byte_end":140229,"line_start":202,"line_end":202,"column_start":5,"column_end":29}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140234,"byte_end":140248,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140253,"byte_end":140259,"line_start":204,"line_end":204,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140264,"byte_end":140267,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // If a multi-threaded async runtime is in use, this spawned task may","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140272,"byte_end":140345,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ // run on a different thread, in a different default `Subscriber`'s context.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140350,"byte_end":140430,"line_start":207,"line_end":207,"column_start":5,"column_end":85}},{"value":"/ tokio::spawn(future);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140435,"byte_end":140460,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140465,"byte_end":140468,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // However, calling `with_current_subscriber` on the future before","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140473,"byte_end":140543,"line_start":210,"line_end":210,"column_start":5,"column_end":75}},{"value":"/ // spawning it, ensures that the current thread's default `Subscriber` is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140548,"byte_end":140625,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/ // propagated to the spawned task, regardless of where it executes:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140630,"byte_end":140701,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ # let future = async { };","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140706,"byte_end":140735,"line_start":213,"line_end":213,"column_start":5,"column_end":34}},{"value":"/ tokio::spawn(future.with_current_subscriber());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140740,"byte_end":140791,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140796,"byte_end":140803,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140808,"byte_end":140815,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ [`Subscriber`]: super::Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140820,"byte_end":140857,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/ [default]: crate::dispatcher#setting-the-default-subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140862,"byte_end":140925,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140930,"byte_end":140965,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":140970,"byte_end":140979,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":141676,"byte_end":141688,"line_start":240,"line_end":240,"column_start":16,"column_end":28},"name":"WithDispatch","qualname":"::instrument::WithDispatch","value":"WithDispatch {  }","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":" A [`Future`] that has been instrumented with a `tracing` [`Subscriber`].","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13598176,"byte_end":13598185,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":443},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142178,"byte_end":142190,"line_start":257,"line_end":257,"column_start":16,"column_end":28},"name":"Instrumented","qualname":"::instrument::Instrumented","value":"Instrumented {  }","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"decl_id":null,"docs":" A [`Future`] that has been instrumented with a `tracing` [`Span`].","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.8/src/lib.rs","byte_start":13598176,"byte_end":13598185,"line_start":650,"line_end":650,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142690,"byte_end":142694,"line_start":280,"line_end":280,"column_start":12,"column_end":16},"name":"span","qualname":"<Instrumented<T>>::span","value":"pub fn span(&Self) -> &Span","parent":null,"children":[],"decl_id":null,"docs":" Borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142621,"byte_end":142678,"line_start":279,"line_end":279,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142820,"byte_end":142828,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"span_mut","qualname":"<Instrumented<T>>::span_mut","value":"pub fn span_mut(&mut Self) -> &mut Span","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the `Span` that this type is instrumented by.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the `Span` that this type is instrumented by.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142743,"byte_end":142808,"line_start":284,"line_end":284,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142930,"byte_end":142935,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"inner","qualname":"<Instrumented<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142889,"byte_end":142918,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143031,"byte_end":143040,"line_start":295,"line_end":295,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Instrumented<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142982,"byte_end":143019,"line_start":294,"line_end":294,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143158,"byte_end":143171,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<Instrumented<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143099,"byte_end":143146,"line_start":299,"line_end":299,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143314,"byte_end":143327,"line_start":305,"line_end":305,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<Instrumented<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143247,"byte_end":143302,"line_start":304,"line_end":304,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143526,"byte_end":143536,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Instrumented<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143407,"byte_end":143467,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143472,"byte_end":143475,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143480,"byte_end":143514,"line_start":311,"line_end":311,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144307,"byte_end":144317,"line_start":340,"line_end":340,"column_start":12,"column_end":22},"name":"dispatcher","qualname":"<WithDispatch<T>>::dispatcher","value":"pub fn dispatcher(&Self) -> &Dispatch","parent":null,"children":[],"decl_id":null,"docs":" Borrows the [`Dispatch`] that is entered when this type is polled.\n","sig":null,"attributes":[{"value":"/ Borrows the [`Dispatch`] that is entered when this type is polled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144225,"byte_end":144295,"line_start":339,"line_end":339,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144417,"byte_end":144422,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"inner","qualname":"<WithDispatch<T>>::inner","value":"pub fn inner(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Borrows the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144376,"byte_end":144405,"line_start":344,"line_end":344,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144518,"byte_end":144527,"line_start":350,"line_end":350,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<WithDispatch<T>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped type.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144469,"byte_end":144506,"line_start":349,"line_end":349,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144645,"byte_end":144658,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"inner_pin_ref","qualname":"<WithDispatch<T>>::inner_pin_ref","value":"pub fn inner_pin_ref(Pin<&Self>) -> Pin<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144586,"byte_end":144633,"line_start":354,"line_end":354,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144801,"byte_end":144814,"line_start":360,"line_end":360,"column_start":12,"column_end":25},"name":"inner_pin_mut","qualname":"<WithDispatch<T>>::inner_pin_mut","value":"pub fn inner_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned mutable reference to the wrapped type.\n","sig":null,"attributes":[{"value":"/ Get a pinned mutable reference to the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144734,"byte_end":144789,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":145013,"byte_end":145023,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithDispatch<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Instrumented`, returning the wrapped type.","sig":null,"attributes":[{"value":"/ Consumes the `Instrumented`, returning the wrapped type.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144894,"byte_end":144954,"line_start":364,"line_end":364,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144959,"byte_end":144962,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Note that this drops the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144967,"byte_end":145001,"line_start":366,"line_end":366,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"level_filters","qualname":"::level_filters","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":486}],"decl_id":null,"docs":" Trace verbosity level filtering.","sig":null,"attributes":[{"value":"/ Trace verbosity level filtering.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145065,"byte_end":145101,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145102,"byte_end":145105,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Compile time filters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145106,"byte_end":145132,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145133,"byte_end":145136,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Trace verbosity levels can be statically disabled at compile time via Cargo","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145137,"byte_end":145216,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ features, similar to the [`log` crate]. Trace instrumentation at disabled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145217,"byte_end":145294,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ levels will be skipped and will not even be present in the resulting binary","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145295,"byte_end":145374,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ unless the verbosity level is specified dynamically. This level is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145375,"byte_end":145445,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ configured separately for release and debug builds. The features are:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145446,"byte_end":145519,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145520,"byte_end":145523,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `max_level_off`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145524,"byte_end":145545,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/ * `max_level_error`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145546,"byte_end":145569,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/ * `max_level_warn`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145570,"byte_end":145592,"line_start":13,"line_end":13,"column_start":1,"column_end":23}},{"value":"/ * `max_level_info`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145593,"byte_end":145615,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ * `max_level_debug`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145616,"byte_end":145639,"line_start":15,"line_end":15,"column_start":1,"column_end":24}},{"value":"/ * `max_level_trace`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145640,"byte_end":145663,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ * `release_max_level_off`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145664,"byte_end":145693,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ * `release_max_level_error`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145694,"byte_end":145725,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_warn`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145726,"byte_end":145756,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_info`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145757,"byte_end":145787,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ * `release_max_level_debug`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145788,"byte_end":145819,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/ * `release_max_level_trace`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145820,"byte_end":145851,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145852,"byte_end":145855,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ These features control the value of the `STATIC_MAX_LEVEL` constant. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145856,"byte_end":145932,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ instrumentation macros macros check this value before recording an event or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":145933,"byte_end":146012,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ constructing a span. By default, no levels are disabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146013,"byte_end":146073,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146074,"byte_end":146077,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ For example, a crate can disable trace level instrumentation in debug builds","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146078,"byte_end":146158,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ and trace, debug, and info level instrumentation in release builds with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146159,"byte_end":146238,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ following configuration:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146239,"byte_end":146267,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146268,"byte_end":146271,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146272,"byte_end":146283,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146284,"byte_end":146302,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/ tracing = { version = \"0.1\", features = [\"max_level_debug\", \"release_max_level_warn\"] }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146303,"byte_end":146394,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146395,"byte_end":146402,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ## Notes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146403,"byte_end":146415,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146416,"byte_end":146419,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Please note that `tracing`'s static max level features do *not* control the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146420,"byte_end":146499,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ [`log`] records that may be emitted when [`tracing`'s \"log\" feature flag][f] is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146500,"byte_end":146583,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ enabled. This is to allow `tracing` to be disabled entirely at compile time","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146584,"byte_end":146663,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ while still emitting `log` records --- such as when a library using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146664,"byte_end":146735,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ `tracing` is used by an application using `log` that doesn't want to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146736,"byte_end":146808,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ generate any `tracing`-related code, but does want to collect `log` records.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146809,"byte_end":146889,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146890,"byte_end":146893,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This means that if the \"log\" feature is in use, some code may be generated","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146894,"byte_end":146972,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ for `log` records emitted by disabled `tracing` events. If this is not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":146973,"byte_end":147047,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"/ desirable, `log` records may be disabled separately using [`log`'s static","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147048,"byte_end":147125,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ max level features][`log` crate].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147126,"byte_end":147163,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147164,"byte_end":147167,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`log`]: https://docs.rs/log/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147168,"byte_end":147201,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ [`log` crate]: https://docs.rs/log/latest/log/#compile-time-filters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147202,"byte_end":147273,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ [f]: https://docs.rs/tracing/latest/tracing/#emitting-log-records","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147274,"byte_end":147343,"line_start":52,"line_end":52,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147915,"byte_end":147931,"line_start":66,"line_end":66,"column_start":11,"column_end":27},"name":"STATIC_MAX_LEVEL","qualname":"::level_filters::STATIC_MAX_LEVEL","value":"LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" The statically configured maximum trace level.","sig":null,"attributes":[{"value":"/ The statically configured maximum trace level.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147415,"byte_end":147465,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147466,"byte_end":147469,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for information on how to configure","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147470,"byte_end":147546,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ this.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147547,"byte_end":147556,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147557,"byte_end":147560,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This value is checked by the `event!` and `span!` macros. Code that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147561,"byte_end":147632,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ manually constructs events or spans via the `Event::record` function or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147633,"byte_end":147708,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ `Span` constructors should compare the level against this value to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147709,"byte_end":147779,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"/ determine if those spans or events are enabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147780,"byte_end":147831,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147832,"byte_end":147835,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: ../index.html#compile-time-filters","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/level_filters.rs","byte_start":147836,"byte_end":147904,"line_start":65,"line_end":65,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::span","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":487},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":241},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":" Spans represent periods of time in which a program was executing in a\n particular context.","sig":null,"attributes":[{"value":"/ Spans represent periods of time in which a program was executing in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149472,"byte_end":149545,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ particular context.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149546,"byte_end":149569,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149570,"byte_end":149573,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A span consists of [fields], user-defined key-value pairs of arbitrary data","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149574,"byte_end":149653,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ that describe the context the span represents, and a set of fixed attributes","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149654,"byte_end":149734,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ that describe all `tracing` spans and events. Attributes describing spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149735,"byte_end":149812,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ include:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149813,"byte_end":149825,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149826,"byte_end":149829,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - An [`Id`] assigned by the subscriber that uniquely identifies it in relation","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149830,"byte_end":149912,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/   to other spans.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149913,"byte_end":149934,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/ - The span's [parent] in the trace tree.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149935,"byte_end":149979,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ - [Metadata] that describes static characteristics of all spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":149980,"byte_end":150047,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/   originating from that callsite, such as its name, source code location,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150048,"byte_end":150125,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/   [verbosity level], and the names of its fields.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150126,"byte_end":150179,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150180,"byte_end":150183,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Creating Spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150184,"byte_end":150204,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150205,"byte_end":150208,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Spans are created using the [`span!`] macro. This macro is invoked with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150209,"byte_end":150288,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ following arguments, in order:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150289,"byte_end":150323,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150324,"byte_end":150327,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - The [`target`] and/or [`parent`][parent] attributes, if the user wishes to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150328,"byte_end":150408,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/   override their default values.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150409,"byte_end":150445,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/ - The span's [verbosity level]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150446,"byte_end":150480,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ - A string literal providing the span's name.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150481,"byte_end":150530,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ - Finally, between zero and 32 arbitrary key/value fields.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150531,"byte_end":150593,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150594,"byte_end":150597,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`target`]: ../struct.Metadata.html#method.target","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150598,"byte_end":150651,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150652,"byte_end":150655,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150656,"byte_end":150672,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150673,"byte_end":150684,"line_start":30,"line_end":30,"column_start":1,"column_end":12}},{"value":"/ use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150685,"byte_end":150716,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150717,"byte_end":150720,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ /// Construct a new span at the `INFO` level named \"my_span\", with a single","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150721,"byte_end":150800,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ /// field named answer , with the value `42`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150801,"byte_end":150850,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ let my_span = span!(Level::INFO, \"my_span\", answer = 42);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150851,"byte_end":150912,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150913,"byte_end":150920,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150921,"byte_end":150924,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The documentation for the [`span!`] macro provides additional examples of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":150925,"byte_end":151002,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the various options that exist when creating spans.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151003,"byte_end":151058,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151059,"byte_end":151062,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The [`trace_span!`], [`debug_span!`], [`info_span!`], [`warn_span!`], and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151063,"byte_end":151140,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [`error_span!`] exist as shorthand for constructing spans at various","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151141,"byte_end":151213,"line_start":42,"line_end":42,"column_start":1,"column_end":73}},{"value":"/ verbosity levels.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151214,"byte_end":151235,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151236,"byte_end":151239,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Recording Span Creation","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151240,"byte_end":151270,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151271,"byte_end":151274,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The [`Attributes`] type contains data associated with a span, and is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151275,"byte_end":151347,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ provided to the [`Subscriber`] when a new span is created. It contains","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151348,"byte_end":151422,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ the span's metadata, the ID of [the span's parent][parent] if one was","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151423,"byte_end":151496,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ explicitly set, and any fields whose values were recorded when the span was","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151497,"byte_end":151576,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ constructed. The subscriber, which is responsible for recording `tracing`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151577,"byte_end":151654,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ data, can then store or record these values.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151655,"byte_end":151703,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151704,"byte_end":151707,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # The Span Lifecycle","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151708,"byte_end":151732,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151733,"byte_end":151736,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ## Entering a Span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151737,"byte_end":151759,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151760,"byte_end":151763,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ A thread of execution is said to _enter_ a span when it begins executing,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151764,"byte_end":151841,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ and _exit_ the span when it switches to another context. Spans may be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151842,"byte_end":151915,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ entered through the [`enter`], [`entered`], and [`in_scope`] methods.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151916,"byte_end":151989,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151990,"byte_end":151993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The [`enter`] method enters a span, returning a [guard] that exits the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":151994,"byte_end":152073,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ when dropped","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152074,"byte_end":152090,"line_start":63,"line_end":63,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152091,"byte_end":152098,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152099,"byte_end":152132,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152133,"byte_end":152157,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152158,"byte_end":152215,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152216,"byte_end":152219,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // `my_span` exists but has not been entered.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152220,"byte_end":152269,"line_start":69,"line_end":69,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152270,"byte_end":152273,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Enter `my_span`...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152274,"byte_end":152299,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ let _enter = my_span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152300,"byte_end":152333,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152334,"byte_end":152337,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Perform some work inside of the context of `my_span`...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152338,"byte_end":152400,"line_start":74,"line_end":74,"column_start":1,"column_end":63}},{"value":"/ // Dropping the `_enter` guard will exit the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152401,"byte_end":152455,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152456,"byte_end":152462,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152463,"byte_end":152466,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ <div class=\"example-wrap\" style=\"display:inline-block\"><pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152467,"byte_end":152593,"line_start":78,"line_end":78,"column_start":1,"column_end":127}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152594,"byte_end":152678,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/     <code>Span::enter</code> may produce incorrect traces if the returned drop","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152679,"byte_end":152761,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/     guard is held across an await point. See","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152762,"byte_end":152810,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/     <a href=\"struct.Span.html#in-asynchronous-code\">the method documentation</a>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152811,"byte_end":152895,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/     for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152896,"byte_end":152916,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/ </pre></div>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152917,"byte_end":152933,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152934,"byte_end":152937,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The [`entered`] method is analogous to [`enter`], but moves the span into","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":152938,"byte_end":153015,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ the returned guard, rather than borrowing it. This allows creating and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153016,"byte_end":153090,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ entering a span in a single expression:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153091,"byte_end":153134,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153135,"byte_end":153138,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153139,"byte_end":153146,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153147,"byte_end":153180,"line_start":91,"line_end":91,"column_start":1,"column_end":34}},{"value":"/ // Create a span and enter it, returning a guard:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153181,"byte_end":153234,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/ let span = span!(Level::INFO, \"my_span\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153235,"byte_end":153290,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153291,"byte_end":153294,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ // We are now inside the span! Like `enter()`, the guard returned by","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153295,"byte_end":153367,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/ // `entered()` will exit the span when it is dropped...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153368,"byte_end":153427,"line_start":96,"line_end":96,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153428,"byte_end":153431,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // ...but, it can also be exited explicitly, returning the `Span`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153432,"byte_end":153501,"line_start":98,"line_end":98,"column_start":1,"column_end":70}},{"value":"/ // struct:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153502,"byte_end":153516,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/ let span = span.exit();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153517,"byte_end":153544,"line_start":100,"line_end":100,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153545,"byte_end":153552,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153553,"byte_end":153556,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Finally, [`in_scope`] takes a closure or function pointer and executes it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153557,"byte_end":153634,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ inside the span:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153635,"byte_end":153655,"line_start":104,"line_end":104,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153656,"byte_end":153659,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153660,"byte_end":153667,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153668,"byte_end":153701,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/ let my_var: u64 = 5;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153702,"byte_end":153726,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\", my_var = &my_var);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153727,"byte_end":153794,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153795,"byte_end":153798,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153799,"byte_end":153824,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/     // perform some work in the context of `my_span`...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153825,"byte_end":153884,"line_start":112,"line_end":112,"column_start":1,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153885,"byte_end":153892,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153893,"byte_end":153896,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ // Perform some work outside of the context of `my_span`...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153897,"byte_end":153960,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153961,"byte_end":153964,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153965,"byte_end":153990,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/     // Perform some more work in the context of `my_span`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":153991,"byte_end":154053,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154054,"byte_end":154061,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154062,"byte_end":154069,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154070,"byte_end":154073,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154074,"byte_end":154139,"line_start":122,"line_end":122,"column_start":1,"column_end":66}},{"value":"/     <strong>Note</strong>: Since entering a span takes <code>&self</code>, and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154140,"byte_end":154222,"line_start":123,"line_end":123,"column_start":1,"column_end":83}},{"value":"/     <code>Span</code>s are <code>Clone</code>, <code>Send</code>, and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154223,"byte_end":154296,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/     <code>Sync</code>, it is entirely valid for multiple threads to enter the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154297,"byte_end":154378,"line_start":125,"line_end":125,"column_start":1,"column_end":82}},{"value":"/     same span concurrently.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154379,"byte_end":154410,"line_start":126,"line_end":126,"column_start":1,"column_end":32}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154411,"byte_end":154421,"line_start":127,"line_end":127,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154422,"byte_end":154425,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ## Span Relationships","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154426,"byte_end":154451,"line_start":129,"line_end":129,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154452,"byte_end":154455,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Spans form a tree structure — unless it is a root span, all spans have a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154456,"byte_end":154534,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ _parent_, and may have one or more _children_. When a new span is created,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154535,"byte_end":154613,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ the current span becomes the new span's parent. The total execution time of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154614,"byte_end":154693,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ a span consists of the time spent in that span and in the entire subtree","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154694,"byte_end":154770,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ represented by its children. Thus, a parent span always lasts for at least","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154771,"byte_end":154849,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ as long as the longest-executing span in its subtree.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154850,"byte_end":154907,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154908,"byte_end":154911,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154912,"byte_end":154919,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154920,"byte_end":154953,"line_start":139,"line_end":139,"column_start":1,"column_end":34}},{"value":"/ // this span is considered the \"root\" of a new trace tree:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":154954,"byte_end":155016,"line_start":140,"line_end":140,"column_start":1,"column_end":63}},{"value":"/ span!(Level::INFO, \"root\").in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155017,"byte_end":155061,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/     // since we are now inside \"root\", this span is considered a child","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155062,"byte_end":155136,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/     // of \"root\":","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155137,"byte_end":155158,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     span!(Level::DEBUG, \"outer_child\").in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155159,"byte_end":155215,"line_start":144,"line_end":144,"column_start":1,"column_end":57}},{"value":"/         // this span is a child of \"outer_child\", which is in turn a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155216,"byte_end":155288,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/         // child of \"root\":","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155289,"byte_end":155320,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/         span!(Level::TRACE, \"inner_child\").in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155321,"byte_end":155381,"line_start":147,"line_end":147,"column_start":1,"column_end":61}},{"value":"/             // and so on...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155382,"byte_end":155413,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/         });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155414,"byte_end":155429,"line_start":149,"line_end":149,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155430,"byte_end":155441,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/     // another span created here would also be a child of \"root\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155442,"byte_end":155511,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155512,"byte_end":155519,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155520,"byte_end":155526,"line_start":153,"line_end":153,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155527,"byte_end":155530,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ In addition, the parent of a span may be explicitly specified in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155531,"byte_end":155599,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/ the `span!` macro. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155600,"byte_end":155635,"line_start":156,"line_end":156,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155636,"byte_end":155639,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155640,"byte_end":155651,"line_start":158,"line_end":158,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155652,"byte_end":155685,"line_start":159,"line_end":159,"column_start":1,"column_end":34}},{"value":"/ // Create, but do not enter, a span called \"foo\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155686,"byte_end":155739,"line_start":160,"line_end":160,"column_start":1,"column_end":54}},{"value":"/ let foo = span!(Level::INFO, \"foo\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155740,"byte_end":155780,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155781,"byte_end":155784,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // Create and enter a span called \"bar\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155785,"byte_end":155829,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ let bar = span!(Level::INFO, \"bar\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155830,"byte_end":155870,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/ let _enter = bar.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155871,"byte_end":155900,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155901,"byte_end":155904,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ // Although we have currently entered \"bar\", \"baz\"'s parent span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155905,"byte_end":155973,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ // will be \"foo\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155974,"byte_end":155995,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/ let baz = span!(parent: &foo, Level::INFO, \"baz\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":155996,"byte_end":156050,"line_start":169,"line_end":169,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156051,"byte_end":156058,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156059,"byte_end":156062,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ A child span should typically be considered _part_ of its parent. For","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156063,"byte_end":156136,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ example, if a subscriber is recording the length of time spent in various","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156137,"byte_end":156214,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ spans, it should generally include the time spent in a span's children as","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156215,"byte_end":156292,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ part of that span's duration.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156293,"byte_end":156326,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156327,"byte_end":156330,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ In addition to having zero or one parent, a span may also _follow from_ any","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156331,"byte_end":156410,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/ number of other spans. This indicates a causal relationship between the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156411,"byte_end":156491,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"/ and the spans that it follows from, but a follower is *not* typically","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156492,"byte_end":156565,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"/ considered part of the duration of the span it follows. Unlike the parent, a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156566,"byte_end":156646,"line_start":180,"line_end":180,"column_start":1,"column_end":81}},{"value":"/ span may record that it follows from another span after it is created, using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156647,"byte_end":156727,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ the [`follows_from`] method.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156728,"byte_end":156760,"line_start":182,"line_end":182,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156761,"byte_end":156764,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a listener task in a server. As the listener accepts","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156765,"byte_end":156845,"line_start":184,"line_end":184,"column_start":1,"column_end":81}},{"value":"/ incoming connections, it spawns new tasks that handle those connections. We","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156846,"byte_end":156925,"line_start":185,"line_end":185,"column_start":1,"column_end":80}},{"value":"/ might want to have a span representing the listener, and instrument each","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":156926,"byte_end":157002,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ spawned handler task with its own span. We would want our instrumentation to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157003,"byte_end":157083,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ record that the handler tasks were spawned as a result of the listener task.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157084,"byte_end":157164,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/ However, we might not consider the handler tasks to be _part_ of the time","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157165,"byte_end":157242,"line_start":189,"line_end":189,"column_start":1,"column_end":78}},{"value":"/ spent in the listener task, so we would not consider those spans children of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157243,"byte_end":157323,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"/ the listener span. Instead, we would record that the handler tasks follow","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157324,"byte_end":157401,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ from the listener, recording the causal relationship but treating the spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157402,"byte_end":157481,"line_start":192,"line_end":192,"column_start":1,"column_end":80}},{"value":"/ as separate durations.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157482,"byte_end":157508,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157509,"byte_end":157512,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ## Closing Spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157513,"byte_end":157533,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157534,"byte_end":157537,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ Execution may enter and exit a span multiple times before that span is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157538,"byte_end":157612,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ _closed_. Consider, for example, a future which has an associated","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157613,"byte_end":157682,"line_start":198,"line_end":198,"column_start":1,"column_end":70}},{"value":"/ span and enters that span every time it is polled:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157683,"byte_end":157737,"line_start":199,"line_end":199,"column_start":1,"column_end":55}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157738,"byte_end":157749,"line_start":200,"line_end":200,"column_start":1,"column_end":12}},{"value":"/ # use futures::{Future, Poll, Async};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157750,"byte_end":157791,"line_start":201,"line_end":201,"column_start":1,"column_end":42}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157792,"byte_end":157813,"line_start":202,"line_end":202,"column_start":1,"column_end":22}},{"value":"/    // data","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157814,"byte_end":157828,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/    span: tracing::Span,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157829,"byte_end":157856,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157857,"byte_end":157862,"line_start":205,"line_end":205,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157863,"byte_end":157866,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157867,"byte_end":157897,"line_start":207,"line_end":207,"column_start":1,"column_end":31}},{"value":"/     type Item = ();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157898,"byte_end":157921,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/     type Error = ();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157922,"byte_end":157946,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157947,"byte_end":157950,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/     fn poll(&mut self) -> Poll<Self::Item, Self::Error> {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":157951,"byte_end":158012,"line_start":211,"line_end":211,"column_start":1,"column_end":62}},{"value":"/         let _enter = self.span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158013,"byte_end":158056,"line_start":212,"line_end":212,"column_start":1,"column_end":44}},{"value":"/         // Do actual future work...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158057,"byte_end":158096,"line_start":213,"line_end":213,"column_start":1,"column_end":40}},{"value":"/ # Ok(Async::Ready(()))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158097,"byte_end":158123,"line_start":214,"line_end":214,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158124,"byte_end":158133,"line_start":215,"line_end":215,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158134,"byte_end":158139,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158140,"byte_end":158147,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158148,"byte_end":158151,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ If this future was spawned on an executor, it might yield one or more times","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158152,"byte_end":158231,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ before `poll` returns `Ok(Async::Ready)`. If the future were to yield, then","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158232,"byte_end":158311,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ the executor would move on to poll the next future, which may _also_ enter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158312,"byte_end":158390,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/ an associated span or series of spans. Therefore, it is valid for a span to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158391,"byte_end":158470,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ be entered repeatedly before it completes. Only the time when that span or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158471,"byte_end":158549,"line_start":223,"line_end":223,"column_start":1,"column_end":79}},{"value":"/ one of its children was the current span is considered to be time spent in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158550,"byte_end":158628,"line_start":224,"line_end":224,"column_start":1,"column_end":79}},{"value":"/ that span. A span which is not executing and has not yet been closed is said","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158629,"byte_end":158709,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ to be _idle_.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158710,"byte_end":158727,"line_start":226,"line_end":226,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158728,"byte_end":158731,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Because spans may be entered and exited multiple times before they close,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158732,"byte_end":158809,"line_start":228,"line_end":228,"column_start":1,"column_end":78}},{"value":"/ [`Subscriber`]s have separate trait methods which are called to notify them","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158810,"byte_end":158889,"line_start":229,"line_end":229,"column_start":1,"column_end":80}},{"value":"/ of span exits and when span handles are dropped. When execution exits a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158890,"byte_end":158965,"line_start":230,"line_end":230,"column_start":1,"column_end":76}},{"value":"/ span, [`exit`] will always be called with that span's ID to notify the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":158966,"byte_end":159040,"line_start":231,"line_end":231,"column_start":1,"column_end":75}},{"value":"/ subscriber that the span has been exited. When span handles are dropped, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159041,"byte_end":159121,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ [`drop_span`] method is called with that span's ID. The subscriber may use","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159122,"byte_end":159200,"line_start":233,"line_end":233,"column_start":1,"column_end":79}},{"value":"/ this to determine whether or not the span will be entered again.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159201,"byte_end":159269,"line_start":234,"line_end":234,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159270,"byte_end":159273,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ If there is only a single handle with the capacity to exit a span, dropping","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159274,"byte_end":159353,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ that handle \"closes\" the span, since the capacity to enter it no longer","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159354,"byte_end":159429,"line_start":237,"line_end":237,"column_start":1,"column_end":76}},{"value":"/ exists. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159430,"byte_end":159454,"line_start":238,"line_end":238,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159455,"byte_end":159462,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159463,"byte_end":159496,"line_start":240,"line_end":240,"column_start":1,"column_end":34}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159497,"byte_end":159502,"line_start":241,"line_end":241,"column_start":1,"column_end":6}},{"value":"/     span!(Level::TRACE, \"my_span\").in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159503,"byte_end":159555,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/         // perform some work in the context of `my_span`...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159556,"byte_end":159619,"line_start":243,"line_end":243,"column_start":1,"column_end":64}},{"value":"/     }); // --> Subscriber::exit(my_span)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159620,"byte_end":159664,"line_start":244,"line_end":244,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159665,"byte_end":159668,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/     // The handle to `my_span` only lives inside of this block; when it is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159669,"byte_end":159747,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/     // dropped, the subscriber will be informed via `drop_span`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159748,"byte_end":159816,"line_start":247,"line_end":247,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159817,"byte_end":159820,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ } // --> Subscriber::drop_span(my_span)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159821,"byte_end":159864,"line_start":249,"line_end":249,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159865,"byte_end":159872,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159873,"byte_end":159876,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ However, if multiple handles exist, the span can still be re-entered even if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159877,"byte_end":159957,"line_start":252,"line_end":252,"column_start":1,"column_end":81}},{"value":"/ one or more is dropped. For determining when _all_ handles to a span have","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":159958,"byte_end":160035,"line_start":253,"line_end":253,"column_start":1,"column_end":78}},{"value":"/ been dropped, `Subscriber`s have a [`clone_span`] method, which is called","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160036,"byte_end":160113,"line_start":254,"line_end":254,"column_start":1,"column_end":78}},{"value":"/ every time a span handle is cloned. Combined with `drop_span`, this may be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160114,"byte_end":160192,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ used to track the number of handles to a given span — if `drop_span` has","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160193,"byte_end":160271,"line_start":256,"line_end":256,"column_start":1,"column_end":77}},{"value":"/ been called one more time than the number of calls to `clone_span` for a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160272,"byte_end":160348,"line_start":257,"line_end":257,"column_start":1,"column_end":77}},{"value":"/ given ID, then no more handles to the span with that ID exist. The","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160349,"byte_end":160419,"line_start":258,"line_end":258,"column_start":1,"column_end":71}},{"value":"/ subscriber may then treat it as closed.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160420,"byte_end":160463,"line_start":259,"line_end":259,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160464,"byte_end":160467,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ # When to use spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160468,"byte_end":160491,"line_start":261,"line_end":261,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160492,"byte_end":160495,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ As a rule of thumb, spans should be used to represent discrete units of work","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160496,"byte_end":160576,"line_start":263,"line_end":263,"column_start":1,"column_end":81}},{"value":"/ (e.g., a given request's lifetime in a server) or periods of time spent in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160577,"byte_end":160657,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ given context (e.g., time spent interacting with an instance of an external","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160658,"byte_end":160737,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ system, such as a database).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160738,"byte_end":160770,"line_start":266,"line_end":266,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160771,"byte_end":160774,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ Which scopes in a program correspond to new spans depend somewhat on user","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160775,"byte_end":160852,"line_start":268,"line_end":268,"column_start":1,"column_end":78}},{"value":"/ intent. For example, consider the case of a loop in a program. Should we","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160853,"byte_end":160929,"line_start":269,"line_end":269,"column_start":1,"column_end":77}},{"value":"/ construct one span and perform the entire loop inside of that span, like:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":160930,"byte_end":161007,"line_start":270,"line_end":270,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161008,"byte_end":161011,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161012,"byte_end":161023,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161024,"byte_end":161057,"line_start":273,"line_end":273,"column_start":1,"column_end":34}},{"value":"/ # let n = 1;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161058,"byte_end":161074,"line_start":274,"line_end":274,"column_start":1,"column_end":17}},{"value":"/ let span = span!(Level::TRACE, \"my_loop\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161075,"byte_end":161121,"line_start":275,"line_end":275,"column_start":1,"column_end":47}},{"value":"/ let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161122,"byte_end":161152,"line_start":276,"line_end":276,"column_start":1,"column_end":31}},{"value":"/ for i in 0..n {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161153,"byte_end":161172,"line_start":277,"line_end":277,"column_start":1,"column_end":20}},{"value":"/     # let _ = i;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161173,"byte_end":161193,"line_start":278,"line_end":278,"column_start":1,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161194,"byte_end":161208,"line_start":279,"line_end":279,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161209,"byte_end":161214,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161215,"byte_end":161222,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ Or, should we create a new span for each iteration of the loop, as in:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161223,"byte_end":161297,"line_start":282,"line_end":282,"column_start":1,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161298,"byte_end":161309,"line_start":283,"line_end":283,"column_start":1,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161310,"byte_end":161343,"line_start":284,"line_end":284,"column_start":1,"column_end":34}},{"value":"/ # let n = 1u64;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161344,"byte_end":161363,"line_start":285,"line_end":285,"column_start":1,"column_end":20}},{"value":"/ for i in 0..n {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161364,"byte_end":161383,"line_start":286,"line_end":286,"column_start":1,"column_end":20}},{"value":"/     let span = span!(Level::TRACE, \"my_loop\", iteration = i);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161384,"byte_end":161449,"line_start":287,"line_end":287,"column_start":1,"column_end":66}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161450,"byte_end":161484,"line_start":288,"line_end":288,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161485,"byte_end":161499,"line_start":289,"line_end":289,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161500,"byte_end":161505,"line_start":290,"line_end":290,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161506,"byte_end":161513,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161514,"byte_end":161517,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Depending on the circumstances, we might want to do either, or both. For","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161518,"byte_end":161594,"line_start":293,"line_end":293,"column_start":1,"column_end":77}},{"value":"/ example, if we want to know how long was spent in the loop overall, we would","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161595,"byte_end":161675,"line_start":294,"line_end":294,"column_start":1,"column_end":81}},{"value":"/ create a single span around the entire loop; whereas if we wanted to know how","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161676,"byte_end":161757,"line_start":295,"line_end":295,"column_start":1,"column_end":82}},{"value":"/ much time was spent in each individual iteration, we would enter a new span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161758,"byte_end":161837,"line_start":296,"line_end":296,"column_start":1,"column_end":80}},{"value":"/ on every iteration.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161838,"byte_end":161861,"line_start":297,"line_end":297,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161862,"byte_end":161865,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ [fields]: ../field/index.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161866,"byte_end":161899,"line_start":299,"line_end":299,"column_start":1,"column_end":34}},{"value":"/ [Metadata]: ../struct.Metadata.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161900,"byte_end":161939,"line_start":300,"line_end":300,"column_start":1,"column_end":40}},{"value":"/ [`Id`]: struct.Id.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161940,"byte_end":161966,"line_start":301,"line_end":301,"column_start":1,"column_end":27}},{"value":"/ [verbosity level]: ../struct.Level.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":161967,"byte_end":162010,"line_start":302,"line_end":302,"column_start":1,"column_end":44}},{"value":"/ [`span!`]: ../macro.span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162011,"byte_end":162044,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/ [`trace_span!`]: ../macro.trace_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162045,"byte_end":162090,"line_start":304,"line_end":304,"column_start":1,"column_end":46}},{"value":"/ [`debug_span!`]: ../macro.debug_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162091,"byte_end":162136,"line_start":305,"line_end":305,"column_start":1,"column_end":46}},{"value":"/ [`info_span!`]: ../macro.info_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162137,"byte_end":162180,"line_start":306,"line_end":306,"column_start":1,"column_end":44}},{"value":"/ [`warn_span!`]: ../macro.warn_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162181,"byte_end":162224,"line_start":307,"line_end":307,"column_start":1,"column_end":44}},{"value":"/ [`error_span!`]: ../macro.error_span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162225,"byte_end":162270,"line_start":308,"line_end":308,"column_start":1,"column_end":46}},{"value":"/ [`clone_span`]: ../subscriber/trait.Subscriber.html#method.clone_span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162271,"byte_end":162344,"line_start":309,"line_end":309,"column_start":1,"column_end":74}},{"value":"/ [`drop_span`]: ../subscriber/trait.Subscriber.html#method.drop_span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162345,"byte_end":162416,"line_start":310,"line_end":310,"column_start":1,"column_end":72}},{"value":"/ [`exit`]: ../subscriber/trait.Subscriber.html#tymethod.exit","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162417,"byte_end":162480,"line_start":311,"line_end":311,"column_start":1,"column_end":64}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162481,"byte_end":162536,"line_start":312,"line_end":312,"column_start":1,"column_end":56}},{"value":"/ [`Attributes`]: struct.Attributes.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162537,"byte_end":162579,"line_start":313,"line_end":313,"column_start":1,"column_end":43}},{"value":"/ [`enter`]: struct.Span.html#method.enter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162580,"byte_end":162624,"line_start":314,"line_end":314,"column_start":1,"column_end":45}},{"value":"/ [`entered`]: struct.Span.html#method.entered","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162625,"byte_end":162673,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/ [`in_scope`]: struct.Span.html#method.in_scope","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162674,"byte_end":162724,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/ [`follows_from`]: struct.Span.html#method.follows_from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162725,"byte_end":162783,"line_start":317,"line_end":317,"column_start":1,"column_end":59}},{"value":"/ [guard]: struct.Entered.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162784,"byte_end":162816,"line_start":318,"line_end":318,"column_start":1,"column_end":33}},{"value":"/ [parent]: #span-relationships","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":162817,"byte_end":162850,"line_start":319,"line_end":319,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":239},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163157,"byte_end":163161,"line_start":335,"line_end":335,"column_start":11,"column_end":15},"name":"AsId","qualname":"::span::AsId","value":"AsId: crate::sealed::Sealed","parent":null,"children":[{"krate":0,"index":240}],"decl_id":null,"docs":" Trait implemented by types which have a span `Id`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by types which have a span `Id`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163092,"byte_end":163146,"line_start":334,"line_end":334,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163317,"byte_end":163322,"line_start":338,"line_end":338,"column_start":8,"column_end":13},"name":"as_id","qualname":"::span::AsId::as_id","value":"pub fn as_id(&Self) -> Option<&Id>","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Returns the `Id` of the span that `self` corresponds to, or `None` if\n this corresponds to a disabled span.\n","sig":null,"attributes":[{"value":"/ Returns the `Id` of the span that `self` corresponds to, or `None` if","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163191,"byte_end":163264,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ this corresponds to a disabled span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163269,"byte_end":163309,"line_start":337,"line_end":337,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163707,"byte_end":163711,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"decl_id":null,"docs":" A handle representing a span, with the capability to enter the span if it\n exists.","sig":null,"attributes":[{"value":"/ A handle representing a span, with the capability to enter the span if it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163349,"byte_end":163426,"line_start":341,"line_end":341,"column_start":1,"column_end":78}},{"value":"/ exists.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163427,"byte_end":163438,"line_start":342,"line_end":342,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163439,"byte_end":163442,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ If the span was rejected by the current `Subscriber`'s filter, entering the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163443,"byte_end":163522,"line_start":344,"line_end":344,"column_start":1,"column_end":80}},{"value":"/ span will silently do nothing. Thus, the handle can be used in the same","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163523,"byte_end":163598,"line_start":345,"line_end":345,"column_start":1,"column_end":76}},{"value":"/ manner regardless of whether or not the trace is currently being collected.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163599,"byte_end":163678,"line_start":346,"line_end":346,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165122,"byte_end":165129,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"Entered","qualname":"::span::Entered","value":"Entered {  }","parent":null,"children":[{"krate":0,"index":499}],"decl_id":null,"docs":" A guard representing a span which has been entered and is currently\n executing.","sig":null,"attributes":[{"value":"/ A guard representing a span which has been entered and is currently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164765,"byte_end":164836,"line_start":377,"line_end":377,"column_start":1,"column_end":72}},{"value":"/ executing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164837,"byte_end":164851,"line_start":378,"line_end":378,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164852,"byte_end":164855,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164856,"byte_end":164911,"line_start":380,"line_end":380,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164912,"byte_end":164915,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::enter`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164916,"byte_end":164969,"line_start":382,"line_end":382,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164970,"byte_end":164973,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ [`Span::enter`]: ../struct.Span.html#method.enter","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":164974,"byte_end":165027,"line_start":384,"line_end":384,"column_start":1,"column_end":54}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165045,"byte_end":165110,"line_start":386,"line_end":386,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165543,"byte_end":165554,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"EnteredSpan","qualname":"::span::EnteredSpan","value":"EnteredSpan {  }","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"decl_id":null,"docs":" An owned version of [`Entered`], a guard representing a span which has been\n entered and is currently executing.","sig":null,"attributes":[{"value":"/ An owned version of [`Entered`], a guard representing a span which has been","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165159,"byte_end":165238,"line_start":391,"line_end":391,"column_start":1,"column_end":80}},{"value":"/ entered and is currently executing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165239,"byte_end":165278,"line_start":392,"line_end":392,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165279,"byte_end":165282,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ When the guard is dropped, the span will be exited.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165283,"byte_end":165338,"line_start":394,"line_end":394,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165339,"byte_end":165342,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"/ This is returned by the [`Span::entered`] function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165343,"byte_end":165398,"line_start":396,"line_end":396,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165399,"byte_end":165402,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ [`Span::entered`]: super::Span::entered()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165403,"byte_end":165448,"line_start":398,"line_end":398,"column_start":1,"column_end":46}},{"value":"must_use = \"once a span has been entered, it should be exited\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":165466,"byte_end":165531,"line_start":400,"line_end":400,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166691,"byte_end":166694,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"pub fn new(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` with the given [metadata] and set of\n [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` with the given [metadata] and set of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166095,"byte_end":166159,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/ [field values].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166164,"byte_end":166183,"line_start":424,"line_end":424,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166188,"byte_end":166191,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ The new span will be constructed by the currently-active [`Subscriber`],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166196,"byte_end":166272,"line_start":426,"line_end":426,"column_start":5,"column_end":81}},{"value":"/ with the current span as its parent (if one exists).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166277,"byte_end":166333,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166338,"byte_end":166341,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166346,"byte_end":166419,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166424,"byte_end":166459,"line_start":430,"line_end":430,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166464,"byte_end":166467,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166472,"byte_end":166499,"line_start":432,"line_end":432,"column_start":5,"column_end":32}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166504,"byte_end":166559,"line_start":433,"line_end":433,"column_start":5,"column_end":60}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166564,"byte_end":166613,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166618,"byte_end":166679,"line_start":435,"line_end":435,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166903,"byte_end":166911,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"new_with","qualname":"<Span>::new_with","value":"pub fn new_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166863,"byte_end":166872,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167574,"byte_end":167582,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"new_root","qualname":"<Span>::new_root","value":"pub fn new_root(&'static Metadata, &field::ValueSet) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as the root of its own trace tree, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as the root of its own trace tree, with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167153,"byte_end":167224,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167229,"byte_end":167276,"line_start":452,"line_end":452,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167281,"byte_end":167284,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167289,"byte_end":167362,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167367,"byte_end":167402,"line_start":455,"line_end":455,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167407,"byte_end":167410,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167415,"byte_end":167442,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167447,"byte_end":167496,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167501,"byte_end":167562,"line_start":459,"line_end":459,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167796,"byte_end":167809,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"new_root_with","qualname":"<Span>::new_root_with","value":"pub fn new_root_with(&'static Metadata, &field::ValueSet, &Dispatch) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":167756,"byte_end":167765,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168477,"byte_end":168485,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"name":"child_of","qualname":"<Span>::child_of","value":"pub fn child_of<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                         &'static Metadata,\n                                                         &field::ValueSet)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Span` as child of the given parent span, with the\n given [metadata] and set of [field values].","sig":null,"attributes":[{"value":"/ Constructs a new `Span` as child of the given parent span, with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168056,"byte_end":168127,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/ given [metadata] and set of [field values].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168132,"byte_end":168179,"line_start":476,"line_end":476,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168184,"byte_end":168187,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ After the span is constructed, [field values] and/or [`follows_from`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168192,"byte_end":168265,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ annotations may be added to it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168270,"byte_end":168305,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168310,"byte_end":168313,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [metadata]: ../metadata","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168318,"byte_end":168345,"line_start":481,"line_end":481,"column_start":5,"column_end":32}},{"value":"/ [field values]: ../field/struct.ValueSet.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168350,"byte_end":168399,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/ [`follows_from`]: ../struct.Span.html#method.follows_from","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168404,"byte_end":168465,"line_start":483,"line_end":483,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168857,"byte_end":168870,"line_start":497,"line_end":497,"column_start":12,"column_end":25},"name":"child_of_with","qualname":"<Span>::child_of_with","value":"pub fn child_of_with<impl Into<Option<Id>>: Into<Option<Id>>>(impl Into<Option<Id>>,\n                                                              &'static Metadata,\n                                                              &field::ValueSet,\n                                                              &Dispatch)\n-> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":168817,"byte_end":168826,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169706,"byte_end":169718,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"new_disabled","qualname":"<Span>::new_disabled","value":"pub fn new_disabled(&'static Metadata) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new disabled span with the given `Metadata`.","sig":null,"attributes":[{"value":"/ Constructs a new disabled span with the given `Metadata`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169281,"byte_end":169342,"line_start":510,"line_end":510,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169347,"byte_end":169350,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ This should be used when a span is constructed from a known callsite,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169355,"byte_end":169428,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ but the subscriber indicates that it is disabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169433,"byte_end":169486,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169491,"byte_end":169494,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will not notify the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169499,"byte_end":169575,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ `Subscriber` but _may_ record log messages if the `log` feature flag is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169580,"byte_end":169655,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169660,"byte_end":169672,"line_start":517,"line_end":517,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169677,"byte_end":169694,"line_start":518,"line_end":518,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170152,"byte_end":170156,"line_start":533,"line_end":533,"column_start":18,"column_end":22},"name":"none","qualname":"<Span>::none","value":"pub const fn none() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new span that is *completely disabled*.","sig":null,"attributes":[{"value":"/ Constructs a new span that is *completely disabled*.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169854,"byte_end":169910,"line_start":526,"line_end":526,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169915,"byte_end":169918,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This can be used rather than `Option<Span>` to represent cases where a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":169923,"byte_end":169997,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ span is not present.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170002,"byte_end":170026,"line_start":529,"line_end":529,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170031,"byte_end":170034,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Entering, exiting, and recording values on this span will do nothing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170039,"byte_end":170112,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"inline(always)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170117,"byte_end":170134,"line_start":532,"line_end":532,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170687,"byte_end":170694,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"current","qualname":"<Span>::current","value":"pub fn current() -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the span [considered by the `Subscriber`] to be the\n current span.","sig":null,"attributes":[{"value":"/ Returns a handle to the span [considered by the `Subscriber`] to be the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170254,"byte_end":170329,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ current span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170334,"byte_end":170351,"line_start":541,"line_end":541,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170356,"byte_end":170359,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ If the subscriber indicates that it does not track the current span, or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170364,"byte_end":170439,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ that the thread from which this function is called is not currently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170444,"byte_end":170515,"line_start":544,"line_end":544,"column_start":5,"column_end":76}},{"value":"/ inside a span, the returned span will be disabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170520,"byte_end":170574,"line_start":545,"line_end":545,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170579,"byte_end":170582,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ [considered by the `Subscriber`]: ../subscriber/trait.Subscriber.html#method.current","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":170587,"byte_end":170675,"line_start":547,"line_end":547,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178590,"byte_end":178595,"line_start":775,"line_end":775,"column_start":12,"column_end":17},"name":"enter","qualname":"<Span>::enter","value":"pub fn enter(&Self) -> Entered","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, returning a guard that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, returning a guard that will exit the span when dropped.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":171797,"byte_end":171874,"line_start":588,"line_end":588,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":171879,"byte_end":171882,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":171887,"byte_end":171965,"line_start":590,"line_end":590,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":171970,"byte_end":172047,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172052,"byte_end":172122,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172127,"byte_end":172139,"line_start":593,"line_end":593,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172144,"byte_end":172147,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # In Asynchronous Code","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172152,"byte_end":172178,"line_start":595,"line_end":595,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172183,"byte_end":172186,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ **Warning**: in asynchronous code that uses [async/await syntax][syntax],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172191,"byte_end":172268,"line_start":597,"line_end":597,"column_start":5,"column_end":82}},{"value":"/ `Span::enter` should be used very carefully or avoided entirely. Holding","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172273,"byte_end":172349,"line_start":598,"line_end":598,"column_start":5,"column_end":81}},{"value":"/ the drop guard returned by `Span::enter` across `.await` points will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172354,"byte_end":172426,"line_start":599,"line_end":599,"column_start":5,"column_end":77}},{"value":"/ result in incorrect traces. For example,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172431,"byte_end":172475,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172480,"byte_end":172483,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172488,"byte_end":172495,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172500,"byte_end":172529,"line_start":603,"line_end":603,"column_start":5,"column_end":34}},{"value":"/ # async fn some_other_async_function() {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172534,"byte_end":172579,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/ async fn my_async_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172584,"byte_end":172618,"line_start":605,"line_end":605,"column_start":5,"column_end":39}},{"value":"/     let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172623,"byte_end":172674,"line_start":606,"line_end":606,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172679,"byte_end":172682,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/     // THIS WILL RESULT IN INCORRECT TRACES","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172687,"byte_end":172734,"line_start":608,"line_end":608,"column_start":5,"column_end":52}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172739,"byte_end":172773,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/     some_other_async_function().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172778,"byte_end":172820,"line_start":610,"line_end":610,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172825,"byte_end":172828,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172833,"byte_end":172847,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172852,"byte_end":172857,"line_start":613,"line_end":613,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172862,"byte_end":172869,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172874,"byte_end":172877,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The drop guard returned by `Span::enter` exits the span when it is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172882,"byte_end":172952,"line_start":616,"line_end":616,"column_start":5,"column_end":75}},{"value":"/ dropped. When an async function or async block yields at an `.await`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":172957,"byte_end":173029,"line_start":617,"line_end":617,"column_start":5,"column_end":77}},{"value":"/ point, the current scope is _exited_, but values in that scope are","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173034,"byte_end":173104,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/ **not** dropped (because the async block will eventually resume","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173109,"byte_end":173176,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/ execution from that await point). This means that _another_ task will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173181,"byte_end":173254,"line_start":620,"line_end":620,"column_start":5,"column_end":78}},{"value":"/ begin executing while _remaining_ in the entered span. This results in","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173259,"byte_end":173333,"line_start":621,"line_end":621,"column_start":5,"column_end":79}},{"value":"/ an incorrect trace.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173338,"byte_end":173361,"line_start":622,"line_end":622,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173366,"byte_end":173369,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Instead of using `Span::enter` in asynchronous code, prefer the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173374,"byte_end":173441,"line_start":624,"line_end":624,"column_start":5,"column_end":72}},{"value":"/ following:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173446,"byte_end":173460,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173465,"byte_end":173468,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ * To enter a span for a synchronous section of code within an async","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173473,"byte_end":173544,"line_start":627,"line_end":627,"column_start":5,"column_end":76}},{"value":"/   block or function, prefer [`Span::in_scope`]. Since `in_scope` takes a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173549,"byte_end":173625,"line_start":628,"line_end":628,"column_start":5,"column_end":81}},{"value":"/   synchronous closure and exits the span when the closure returns, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173630,"byte_end":173704,"line_start":629,"line_end":629,"column_start":5,"column_end":79}},{"value":"/   span will always be exited before the next await point. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173709,"byte_end":173783,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/   ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173788,"byte_end":173797,"line_start":631,"line_end":631,"column_start":5,"column_end":14}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173802,"byte_end":173833,"line_start":632,"line_end":632,"column_start":5,"column_end":36}},{"value":"/   # async fn some_other_async_function(_: ()) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173838,"byte_end":173890,"line_start":633,"line_end":633,"column_start":5,"column_end":57}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173895,"byte_end":173931,"line_start":634,"line_end":634,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173936,"byte_end":173989,"line_start":635,"line_end":635,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":173994,"byte_end":173997,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/       let some_value = span.in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174002,"byte_end":174047,"line_start":637,"line_end":637,"column_start":5,"column_end":50}},{"value":"/           // run some synchronous code inside the span...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174052,"byte_end":174113,"line_start":638,"line_end":638,"column_start":5,"column_end":66}},{"value":"/       });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174118,"byte_end":174131,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174136,"byte_end":174139,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/       // This is okay! The span has already been exited before we reach","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174144,"byte_end":174219,"line_start":641,"line_end":641,"column_start":5,"column_end":80}},{"value":"/       // the await point.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174224,"byte_end":174253,"line_start":642,"line_end":642,"column_start":5,"column_end":34}},{"value":"/       some_other_async_function(some_value).await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174258,"byte_end":174312,"line_start":643,"line_end":643,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174317,"byte_end":174320,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174325,"byte_end":174341,"line_start":645,"line_end":645,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174346,"byte_end":174353,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174358,"byte_end":174367,"line_start":647,"line_end":647,"column_start":5,"column_end":14}},{"value":"/ * For instrumenting asynchronous code, `tracing` provides the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174372,"byte_end":174437,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/   [`Future::instrument` combinator][instrument] for","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174442,"byte_end":174497,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/   attaching a span to a future (async function or block). This will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174502,"byte_end":174573,"line_start":650,"line_end":650,"column_start":5,"column_end":76}},{"value":"/   enter the span _every_ time the future is polled, and exit it whenever","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174578,"byte_end":174654,"line_start":651,"line_end":651,"column_start":5,"column_end":81}},{"value":"/   the future yields.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174659,"byte_end":174683,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174688,"byte_end":174691,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/   `Instrument` can be used with an async block inside an async function:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174696,"byte_end":174772,"line_start":654,"line_end":654,"column_start":5,"column_end":81}},{"value":"/   ```ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174777,"byte_end":174792,"line_start":655,"line_end":655,"column_start":5,"column_end":20}},{"value":"/   # use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174797,"byte_end":174828,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174833,"byte_end":174863,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174868,"byte_end":174871,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174876,"byte_end":174923,"line_start":659,"line_end":659,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174928,"byte_end":174964,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"/       let span = info_span!(\"my_async_function\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":174969,"byte_end":175022,"line_start":661,"line_end":661,"column_start":5,"column_end":58}},{"value":"/       async move {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175027,"byte_end":175049,"line_start":662,"line_end":662,"column_start":5,"column_end":27}},{"value":"/          // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175054,"byte_end":175129,"line_start":663,"line_end":663,"column_start":5,"column_end":80}},{"value":"/          // and re-entered when we resume.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175134,"byte_end":175180,"line_start":664,"line_end":664,"column_start":5,"column_end":51}},{"value":"/          some_other_async_function().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175185,"byte_end":175232,"line_start":665,"line_end":665,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175237,"byte_end":175240,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/          //more asynchronous code inside the span...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175245,"byte_end":175301,"line_start":667,"line_end":667,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175306,"byte_end":175309,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/       }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175314,"byte_end":175325,"line_start":669,"line_end":669,"column_start":5,"column_end":16}},{"value":"/         // instrument the async block with the span...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175330,"byte_end":175388,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         .instrument(span)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175393,"byte_end":175422,"line_start":671,"line_end":671,"column_start":5,"column_end":34}},{"value":"/         // ...and await it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175427,"byte_end":175458,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/         .await","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175463,"byte_end":175481,"line_start":673,"line_end":673,"column_start":5,"column_end":23}},{"value":"/   }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175486,"byte_end":175493,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175498,"byte_end":175507,"line_start":675,"line_end":675,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175512,"byte_end":175515,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/   It can also be used to instrument calls to async functions at the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175520,"byte_end":175591,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/   callsite:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175596,"byte_end":175611,"line_start":678,"line_end":678,"column_start":5,"column_end":20}},{"value":"/   ```ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175616,"byte_end":175631,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/   # use tracing::debug_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175636,"byte_end":175668,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/   use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175673,"byte_end":175703,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175708,"byte_end":175711,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175716,"byte_end":175763,"line_start":683,"line_end":683,"column_start":5,"column_end":52}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175768,"byte_end":175804,"line_start":684,"line_end":684,"column_start":5,"column_end":41}},{"value":"/       let some_value = some_other_async_function()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175809,"byte_end":175863,"line_start":685,"line_end":685,"column_start":5,"column_end":59}},{"value":"/          .instrument(debug_span!(\"some_other_async_function\"))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175868,"byte_end":175934,"line_start":686,"line_end":686,"column_start":5,"column_end":71}},{"value":"/          .await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175939,"byte_end":175959,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175964,"byte_end":175967,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175972,"byte_end":175988,"line_start":689,"line_end":689,"column_start":5,"column_end":21}},{"value":"/   }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":175993,"byte_end":176000,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176005,"byte_end":176014,"line_start":691,"line_end":691,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176019,"byte_end":176022,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ * The [`#[instrument]` attribute macro][attr] can automatically generate","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176027,"byte_end":176103,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/   correct code when used on an async function:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176108,"byte_end":176158,"line_start":694,"line_end":694,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176163,"byte_end":176166,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/   ```ignore","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176171,"byte_end":176186,"line_start":696,"line_end":696,"column_start":5,"column_end":20}},{"value":"/   # async fn some_other_async_function() {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176191,"byte_end":176238,"line_start":697,"line_end":697,"column_start":5,"column_end":52}},{"value":"/   #[tracing::instrument(level = \"info\")]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176243,"byte_end":176287,"line_start":698,"line_end":698,"column_start":5,"column_end":49}},{"value":"/   async fn my_async_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176292,"byte_end":176328,"line_start":699,"line_end":699,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176333,"byte_end":176336,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/       // This is correct! If we yield here, the span will be exited,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176341,"byte_end":176413,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/       // and re-entered when we resume.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176418,"byte_end":176461,"line_start":702,"line_end":702,"column_start":5,"column_end":48}},{"value":"/       some_other_async_function().await;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176466,"byte_end":176510,"line_start":703,"line_end":703,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176515,"byte_end":176518,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/       // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176523,"byte_end":176539,"line_start":705,"line_end":705,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176544,"byte_end":176547,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/   }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176552,"byte_end":176559,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/   ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176564,"byte_end":176573,"line_start":708,"line_end":708,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176578,"byte_end":176581,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176586,"byte_end":176684,"line_start":710,"line_end":710,"column_start":5,"column_end":103}},{"value":"/ [`Span::in_scope`]: #method.in_scope","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176689,"byte_end":176729,"line_start":711,"line_end":711,"column_start":5,"column_end":45}},{"value":"/ [instrument]: https://docs.rs/tracing/latest/tracing/trait.Instrument.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176734,"byte_end":176812,"line_start":712,"line_end":712,"column_start":5,"column_end":83}},{"value":"/ [attr]: ../../attr.instrument.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176817,"byte_end":176855,"line_start":713,"line_end":713,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176860,"byte_end":176863,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176868,"byte_end":176882,"line_start":715,"line_end":715,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176887,"byte_end":176890,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176895,"byte_end":176902,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176907,"byte_end":176940,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"my_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176945,"byte_end":176990,"line_start":719,"line_end":719,"column_start":5,"column_end":50}},{"value":"/ let guard = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":176995,"byte_end":177024,"line_start":720,"line_end":720,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177029,"byte_end":177032,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177037,"byte_end":177072,"line_start":722,"line_end":722,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177077,"byte_end":177080,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ drop(guard);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177085,"byte_end":177101,"line_start":724,"line_end":724,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177106,"byte_end":177109,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177114,"byte_end":177159,"line_start":726,"line_end":726,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177164,"byte_end":177167,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177172,"byte_end":177179,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177184,"byte_end":177187,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177192,"byte_end":177234,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177239,"byte_end":177242,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177247,"byte_end":177254,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177259,"byte_end":177289,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177294,"byte_end":177326,"line_start":734,"line_end":734,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177331,"byte_end":177389,"line_start":735,"line_end":735,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177394,"byte_end":177440,"line_start":736,"line_end":736,"column_start":5,"column_end":51}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177445,"byte_end":177479,"line_start":737,"line_end":737,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177484,"byte_end":177487,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177492,"byte_end":177570,"line_start":739,"line_end":739,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177575,"byte_end":177603,"line_start":740,"line_end":740,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177608,"byte_end":177611,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177616,"byte_end":177689,"line_start":742,"line_end":742,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177694,"byte_end":177734,"line_start":743,"line_end":743,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177739,"byte_end":177744,"line_start":744,"line_end":744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177749,"byte_end":177752,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177757,"byte_end":177785,"line_start":746,"line_end":746,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177790,"byte_end":177804,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177809,"byte_end":177814,"line_start":748,"line_end":748,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177819,"byte_end":177826,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177831,"byte_end":177834,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ Sub-scopes may be created to limit the duration for which the span is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177839,"byte_end":177912,"line_start":751,"line_end":751,"column_start":5,"column_end":78}},{"value":"/ entered:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177917,"byte_end":177929,"line_start":752,"line_end":752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177934,"byte_end":177937,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177942,"byte_end":177949,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info, info_span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177954,"byte_end":177991,"line_start":755,"line_end":755,"column_start":5,"column_end":42}},{"value":"/ let span = info_span!(\"my_great_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":177996,"byte_end":178039,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178044,"byte_end":178047,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178052,"byte_end":178057,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/     let _enter = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178062,"byte_end":178096,"line_start":759,"line_end":759,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178101,"byte_end":178104,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/     // this event occurs inside the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178109,"byte_end":178154,"line_start":761,"line_end":761,"column_start":5,"column_end":50}},{"value":"/     info!(\"i'm in the span!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178159,"byte_end":178193,"line_start":762,"line_end":762,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178198,"byte_end":178201,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/     // exiting the scope drops the guard, exiting the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178206,"byte_end":178269,"line_start":764,"line_end":764,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178274,"byte_end":178279,"line_start":765,"line_end":765,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178284,"byte_end":178287,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ // this event is not inside the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178292,"byte_end":178333,"line_start":767,"line_end":767,"column_start":5,"column_end":46}},{"value":"/ info!(\"i'm outside the span!\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178338,"byte_end":178372,"line_start":768,"line_end":768,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178377,"byte_end":178384,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178389,"byte_end":178392,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: super::subscriber::Subscriber::enter()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178397,"byte_end":178462,"line_start":771,"line_end":771,"column_start":5,"column_end":70}},{"value":"/ [`Subscriber::exit`]: super::subscriber::Subscriber::exit()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178467,"byte_end":178530,"line_start":772,"line_end":772,"column_start":5,"column_end":68}},{"value":"/ [`Id`]: super::Id","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178535,"byte_end":178556,"line_start":773,"line_end":773,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178561,"byte_end":178578,"line_start":774,"line_end":774,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182901,"byte_end":182908,"line_start":886,"line_end":886,"column_start":12,"column_end":19},"name":"entered","qualname":"<Span>::entered","value":"pub fn entered(Self) -> EnteredSpan","parent":null,"children":[],"decl_id":null,"docs":" Enters this span, consuming it and returning a [guard][`EnteredSpan`]\n that will exit the span when dropped.","sig":null,"attributes":[{"value":"/ Enters this span, consuming it and returning a [guard][`EnteredSpan`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178687,"byte_end":178760,"line_start":780,"line_end":780,"column_start":5,"column_end":78}},{"value":"/ that will exit the span when dropped.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178765,"byte_end":178806,"line_start":781,"line_end":781,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178811,"byte_end":178814,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"compile_fail\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178819,"byte_end":178890,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/     <strong>Warning</strong>: In asynchronous code that uses async/await syntax,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178895,"byte_end":178979,"line_start":784,"line_end":784,"column_start":5,"column_end":89}},{"value":"/     <code>Span::entered</code> may produce incorrect traces if the returned drop","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":178984,"byte_end":179068,"line_start":785,"line_end":785,"column_start":5,"column_end":89}},{"value":"/     guard is held across an await point. See <a href=\"#in-asynchronous-code\">the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179073,"byte_end":179157,"line_start":786,"line_end":786,"column_start":5,"column_end":89}},{"value":"/     <code>Span::enter</code> documentation</a> for details.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179162,"byte_end":179225,"line_start":787,"line_end":787,"column_start":5,"column_end":68}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179230,"byte_end":179240,"line_start":788,"line_end":788,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179245,"byte_end":179248,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179253,"byte_end":179256,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled by the current subscriber, then this function will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179261,"byte_end":179339,"line_start":791,"line_end":791,"column_start":5,"column_end":83}},{"value":"/ call [`Subscriber::enter`] with the span's [`Id`], and dropping the guard","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179344,"byte_end":179421,"line_start":792,"line_end":792,"column_start":5,"column_end":82}},{"value":"/ will call [`Subscriber::exit`]. If the span is disabled, this does","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179426,"byte_end":179496,"line_start":793,"line_end":793,"column_start":5,"column_end":75}},{"value":"/ nothing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179501,"byte_end":179513,"line_start":794,"line_end":794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179518,"byte_end":179521,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`Span::enter`] method, except that it moves the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179526,"byte_end":179601,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ span by value into the returned guard, rather than borrowing it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179606,"byte_end":179674,"line_start":797,"line_end":797,"column_start":5,"column_end":73}},{"value":"/ Therefore, this method can be used to create and enter a span in a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179679,"byte_end":179749,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/ single expression, without requiring a `let`-binding. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179754,"byte_end":179824,"line_start":799,"line_end":799,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179829,"byte_end":179832,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179837,"byte_end":179844,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179849,"byte_end":179878,"line_start":802,"line_end":802,"column_start":5,"column_end":34}},{"value":"/ let _span = info_span!(\"something_interesting\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179883,"byte_end":179945,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179950,"byte_end":179957,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"/ rather than:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179962,"byte_end":179978,"line_start":805,"line_end":805,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179983,"byte_end":179990,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":179995,"byte_end":180024,"line_start":807,"line_end":807,"column_start":5,"column_end":34}},{"value":"/ let span = info_span!(\"something_interesting\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180029,"byte_end":180080,"line_start":808,"line_end":808,"column_start":5,"column_end":56}},{"value":"/ let _e = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180085,"byte_end":180111,"line_start":809,"line_end":809,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180116,"byte_end":180123,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180128,"byte_end":180131,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Furthermore, `entered` may be used when the span must be stored in some","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180136,"byte_end":180211,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ other struct or be passed to a function while remaining entered.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180216,"byte_end":180284,"line_start":813,"line_end":813,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180289,"byte_end":180292,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180297,"byte_end":180362,"line_start":815,"line_end":815,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: The returned <a href=\"../struct.EnteredSpan.html\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180367,"byte_end":180448,"line_start":816,"line_end":816,"column_start":5,"column_end":86}},{"value":"/     <code>EnteredSpan</a></code> guard does not implement <code>Send</code>.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180453,"byte_end":180533,"line_start":817,"line_end":817,"column_start":5,"column_end":85}},{"value":"/     Dropping the guard will exit <em>this</em> span, and if the guard is sent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180538,"byte_end":180619,"line_start":818,"line_end":818,"column_start":5,"column_end":86}},{"value":"/     to another thread and dropped there, that thread may never have entered","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180624,"byte_end":180703,"line_start":819,"line_end":819,"column_start":5,"column_end":84}},{"value":"/     this span. Thus, <code>EnteredSpan</code>s should not be sent between threads.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180708,"byte_end":180794,"line_start":820,"line_end":820,"column_start":5,"column_end":91}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180799,"byte_end":180809,"line_start":821,"line_end":821,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180814,"byte_end":180817,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ [syntax]: https://rust-lang.github.io/async-book/01_getting_started/04_async_await_primer.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180822,"byte_end":180920,"line_start":823,"line_end":823,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180925,"byte_end":180928,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180933,"byte_end":180947,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180952,"byte_end":180955,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ The returned guard can be [explicitly exited][EnteredSpan::exit],","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":180960,"byte_end":181029,"line_start":827,"line_end":827,"column_start":5,"column_end":74}},{"value":"/ returning the un-entered span:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181034,"byte_end":181068,"line_start":828,"line_end":828,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181073,"byte_end":181076,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181081,"byte_end":181088,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{Level, span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181093,"byte_end":181126,"line_start":831,"line_end":831,"column_start":5,"column_end":38}},{"value":"/ let span = span!(Level::INFO, \"doing_something\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181131,"byte_end":181194,"line_start":832,"line_end":832,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181199,"byte_end":181202,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ // code here is within the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181207,"byte_end":181242,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181247,"byte_end":181250,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ // explicitly exit the span, returning it","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181255,"byte_end":181300,"line_start":836,"line_end":836,"column_start":5,"column_end":50}},{"value":"/ let span = span.exit();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181305,"byte_end":181332,"line_start":837,"line_end":837,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181337,"byte_end":181340,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ // code here is no longer within the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181345,"byte_end":181390,"line_start":839,"line_end":839,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181395,"byte_end":181398,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ // enter the span again","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181403,"byte_end":181430,"line_start":841,"line_end":841,"column_start":5,"column_end":32}},{"value":"/ let span = span.entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181435,"byte_end":181465,"line_start":842,"line_end":842,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181470,"byte_end":181473,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // now we are inside the span once again","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181478,"byte_end":181522,"line_start":844,"line_end":844,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181527,"byte_end":181534,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181539,"byte_end":181542,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Guards need not be explicitly dropped:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181547,"byte_end":181589,"line_start":847,"line_end":847,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181594,"byte_end":181597,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181602,"byte_end":181609,"line_start":849,"line_end":849,"column_start":5,"column_end":12}},{"value":"/ # use tracing::trace_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181614,"byte_end":181644,"line_start":850,"line_end":850,"column_start":5,"column_end":35}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181649,"byte_end":181681,"line_start":851,"line_end":851,"column_start":5,"column_end":37}},{"value":"/     // enter a span for the duration of this function.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181686,"byte_end":181744,"line_start":852,"line_end":852,"column_start":5,"column_end":63}},{"value":"/     let span = trace_span!(\"my_function\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181749,"byte_end":181805,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181810,"byte_end":181813,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call is still inside the span...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181818,"byte_end":181896,"line_start":855,"line_end":855,"column_start":5,"column_end":83}},{"value":"/     my_other_function();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181901,"byte_end":181929,"line_start":856,"line_end":856,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181934,"byte_end":181937,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":181942,"byte_end":182015,"line_start":858,"line_end":858,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182020,"byte_end":182060,"line_start":859,"line_end":859,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182065,"byte_end":182070,"line_start":860,"line_end":860,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182075,"byte_end":182078,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182083,"byte_end":182111,"line_start":862,"line_end":862,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182116,"byte_end":182130,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182135,"byte_end":182140,"line_start":864,"line_end":864,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182145,"byte_end":182152,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182157,"byte_end":182160,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Since the [`EnteredSpan`] guard can dereference to the [`Span`] itself,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182165,"byte_end":182240,"line_start":867,"line_end":867,"column_start":5,"column_end":80}},{"value":"/ the span may still be accessed while entered. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182245,"byte_end":182307,"line_start":868,"line_end":868,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182312,"byte_end":182315,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182320,"byte_end":182331,"line_start":870,"line_end":870,"column_start":5,"column_end":16}},{"value":"/ # use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182336,"byte_end":182365,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ use tracing::field;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182370,"byte_end":182393,"line_start":872,"line_end":872,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182398,"byte_end":182401,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ // create the span with an empty field, and enter it.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182406,"byte_end":182463,"line_start":874,"line_end":874,"column_start":5,"column_end":62}},{"value":"/ let span = info_span!(\"my_span\", some_field = field::Empty).entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182468,"byte_end":182542,"line_start":875,"line_end":875,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182547,"byte_end":182550,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ // we can still record a value for the field while the span is entered.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182555,"byte_end":182630,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ span.record(\"some_field\", &\"hello world!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182635,"byte_end":182682,"line_start":878,"line_end":878,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182687,"byte_end":182694,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182699,"byte_end":182702,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ [`Subscriber::enter`]: super::subscriber::Subscriber::enter()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182708,"byte_end":182773,"line_start":882,"line_end":882,"column_start":5,"column_end":70}},{"value":"/ [`Subscriber::exit`]: super::subscriber::Subscriber::exit()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182778,"byte_end":182841,"line_start":883,"line_end":883,"column_start":5,"column_end":68}},{"value":"/ [`Id`]: super::Id","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182846,"byte_end":182867,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":182872,"byte_end":182889,"line_start":885,"line_end":885,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187350,"byte_end":187360,"line_start":1017,"line_end":1017,"column_start":12,"column_end":22},"name":"or_current","qualname":"<Span>::or_current","value":"pub fn or_current(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this span, if it was [enabled] by the current [`Subscriber`], or\n the [current span] (whose lexical distance may be further than expected),\n  if this span [is disabled].","sig":null,"attributes":[{"value":"/ Returns this span, if it was [enabled] by the current [`Subscriber`], or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183063,"byte_end":183139,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ the [current span] (whose lexical distance may be further than expected),","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183144,"byte_end":183221,"line_start":895,"line_end":895,"column_start":5,"column_end":82}},{"value":"/  if this span [is disabled].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183226,"byte_end":183258,"line_start":896,"line_end":896,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183263,"byte_end":183266,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ This method can be useful when propagating spans to spawned threads or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183271,"byte_end":183345,"line_start":898,"line_end":898,"column_start":5,"column_end":79}},{"value":"/ [async tasks]. Consider the following:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183350,"byte_end":183392,"line_start":899,"line_end":899,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183397,"byte_end":183400,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183405,"byte_end":183412,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183417,"byte_end":183480,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183485,"byte_end":183488,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183493,"byte_end":183503,"line_start":904,"line_end":904,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183508,"byte_end":183511,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183516,"byte_end":183567,"line_start":906,"line_end":906,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183572,"byte_end":183575,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183580,"byte_end":183612,"line_start":908,"line_end":908,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183617,"byte_end":183661,"line_start":909,"line_end":909,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183666,"byte_end":183669,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183674,"byte_end":183718,"line_start":911,"line_end":911,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183723,"byte_end":183726,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183731,"byte_end":183745,"line_start":913,"line_end":913,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183750,"byte_end":183757,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183762,"byte_end":183769,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183774,"byte_end":183777,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ If the current [`Subscriber`] enables the [`DEBUG`] level, then both","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183782,"byte_end":183854,"line_start":917,"line_end":917,"column_start":5,"column_end":77}},{"value":"/ the \"parent\" and \"child\" spans will be enabled. Thus, when the \"spawaned","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183859,"byte_end":183935,"line_start":918,"line_end":918,"column_start":5,"column_end":81}},{"value":"/ a thread!\" event occurs, it will be inside of the \"child\" span. Because","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":183940,"byte_end":184015,"line_start":919,"line_end":919,"column_start":5,"column_end":80}},{"value":"/ \"parent\" is the parent of \"child\", the event will _also_ be inside of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184020,"byte_end":184093,"line_start":920,"line_end":920,"column_start":5,"column_end":78}},{"value":"/ \"parent\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184098,"byte_end":184111,"line_start":921,"line_end":921,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184116,"byte_end":184119,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ However, if the [`Subscriber`] only enables the [`INFO`] level, the \"child\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184124,"byte_end":184203,"line_start":923,"line_end":923,"column_start":5,"column_end":84}},{"value":"/ span will be disabled. When the thread is spawned, the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184208,"byte_end":184266,"line_start":924,"line_end":924,"column_start":5,"column_end":63}},{"value":"/ `child_span.entered()` call will do nothing, since \"child\" is not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184271,"byte_end":184340,"line_start":925,"line_end":925,"column_start":5,"column_end":74}},{"value":"/ enabled. In this case, the \"spawned a thread!\" event occurs outside of","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184345,"byte_end":184419,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ *any* span, since the \"child\" span was responsible for propagating its","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184424,"byte_end":184498,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"/ parent to the spawned thread.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184503,"byte_end":184536,"line_start":928,"line_end":928,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184541,"byte_end":184544,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ If this is not the desired behavior, `Span::or_current` can be used to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184549,"byte_end":184623,"line_start":930,"line_end":930,"column_start":5,"column_end":79}},{"value":"/ ensure that the \"parent\" span is propagated in both cases, either as a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184628,"byte_end":184702,"line_start":931,"line_end":931,"column_start":5,"column_end":79}},{"value":"/ parent of \"child\" _or_ directly. For example:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184707,"byte_end":184756,"line_start":932,"line_end":932,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184761,"byte_end":184764,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184769,"byte_end":184776,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184781,"byte_end":184844,"line_start":935,"line_end":935,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184849,"byte_end":184852,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184857,"byte_end":184867,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184872,"byte_end":184875,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ // If DEBUG is enabled, then \"child\" will be enabled, and `or_current`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184880,"byte_end":184954,"line_start":939,"line_end":939,"column_start":5,"column_end":79}},{"value":"/ // returns \"child\". Otherwise, if DEBUG is not enabled, \"child\" will be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":184959,"byte_end":185034,"line_start":940,"line_end":940,"column_start":5,"column_end":80}},{"value":"/ // disabled, and `or_current` returns \"parent\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185039,"byte_end":185090,"line_start":941,"line_end":941,"column_start":5,"column_end":56}},{"value":"/ let child_span = tracing::debug_span!(\"child\").or_current();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185095,"byte_end":185159,"line_start":942,"line_end":942,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185164,"byte_end":185167,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185172,"byte_end":185204,"line_start":944,"line_end":944,"column_start":5,"column_end":37}},{"value":"/     let _entered = child_span.entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185209,"byte_end":185253,"line_start":945,"line_end":945,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185258,"byte_end":185261,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     tracing::info!(\"spawned a thread!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185266,"byte_end":185310,"line_start":947,"line_end":947,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185315,"byte_end":185318,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185323,"byte_end":185337,"line_start":949,"line_end":949,"column_start":5,"column_end":19}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185342,"byte_end":185349,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185354,"byte_end":185361,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185366,"byte_end":185369,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ When spawning [asynchronous tasks][async tasks], `Span::or_current` can","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185374,"byte_end":185449,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ be used similarly, in combination with [`instrument`]:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185454,"byte_end":185512,"line_start":954,"line_end":954,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185517,"byte_end":185520,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185525,"byte_end":185532,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185537,"byte_end":185565,"line_start":957,"line_end":957,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185570,"byte_end":185582,"line_start":958,"line_end":958,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185587,"byte_end":185604,"line_start":959,"line_end":959,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185609,"byte_end":185670,"line_start":960,"line_end":960,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185675,"byte_end":185682,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185687,"byte_end":185690,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185695,"byte_end":185758,"line_start":963,"line_end":963,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185763,"byte_end":185766,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185771,"byte_end":185781,"line_start":965,"line_end":965,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185786,"byte_end":185789,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ let child_span = tracing::debug_span!(\"child\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185794,"byte_end":185845,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185850,"byte_end":185853,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185858,"byte_end":185875,"line_start":969,"line_end":969,"column_start":5,"column_end":22}},{"value":"/     async {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185880,"byte_end":185895,"line_start":970,"line_end":970,"column_start":5,"column_end":20}},{"value":"/         tracing::info!(\"spawned a task!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185900,"byte_end":185946,"line_start":971,"line_end":971,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185951,"byte_end":185954,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/         // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185959,"byte_end":185977,"line_start":973,"line_end":973,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185982,"byte_end":185985,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/     }.instrument(child_span.or_current())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":185990,"byte_end":186035,"line_start":975,"line_end":975,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186040,"byte_end":186046,"line_start":976,"line_end":976,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186051,"byte_end":186058,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186063,"byte_end":186066,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ In general, `or_current` should be preferred over nesting an","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186071,"byte_end":186135,"line_start":979,"line_end":979,"column_start":5,"column_end":69}},{"value":"/ [`instrument`]  call inside of an [`in_current_span`] call, as using","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186140,"byte_end":186212,"line_start":980,"line_end":980,"column_start":5,"column_end":77}},{"value":"/ `or_current` will be more efficient.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186217,"byte_end":186257,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186262,"byte_end":186265,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186270,"byte_end":186277,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ use tracing::Instrument;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186282,"byte_end":186310,"line_start":984,"line_end":984,"column_start":5,"column_end":33}},{"value":"/ # // lol","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186315,"byte_end":186327,"line_start":985,"line_end":985,"column_start":5,"column_end":17}},{"value":"/ # mod tokio {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186332,"byte_end":186349,"line_start":986,"line_end":986,"column_start":5,"column_end":22}},{"value":"/ #     pub(super) fn spawn(_: impl std::future::Future) {}","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186354,"byte_end":186415,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186420,"byte_end":186427,"line_start":988,"line_end":988,"column_start":5,"column_end":12}},{"value":"/ async fn my_async_fn() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186432,"byte_end":186460,"line_start":989,"line_end":989,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186465,"byte_end":186479,"line_start":990,"line_end":990,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186484,"byte_end":186489,"line_start":991,"line_end":991,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186494,"byte_end":186497,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ let _parent_span = tracing::info_span!(\"parent\").entered();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186502,"byte_end":186565,"line_start":993,"line_end":993,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186570,"byte_end":186573,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ // Do this:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186578,"byte_end":186593,"line_start":995,"line_end":995,"column_start":5,"column_end":20}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186598,"byte_end":186615,"line_start":996,"line_end":996,"column_start":5,"column_end":22}},{"value":"/     my_async_fn().instrument(tracing::debug_span!(\"child\").or_current())","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186620,"byte_end":186696,"line_start":997,"line_end":997,"column_start":5,"column_end":81}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186701,"byte_end":186707,"line_start":998,"line_end":998,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186712,"byte_end":186715,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ // ...rather than this:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186720,"byte_end":186747,"line_start":1000,"line_end":1000,"column_start":5,"column_end":32}},{"value":"/ tokio::spawn(","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186752,"byte_end":186769,"line_start":1001,"line_end":1001,"column_start":5,"column_end":22}},{"value":"/     my_async_fn()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186774,"byte_end":186795,"line_start":1002,"line_end":1002,"column_start":5,"column_end":26}},{"value":"/         .instrument(tracing::debug_span!(\"child\"))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186800,"byte_end":186854,"line_start":1003,"line_end":1003,"column_start":5,"column_end":59}},{"value":"/         .in_current_span()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186859,"byte_end":186889,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186894,"byte_end":186900,"line_start":1005,"line_end":1005,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186905,"byte_end":186912,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186917,"byte_end":186920,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ [enabled]: crate::Subscriber::enabled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186925,"byte_end":186966,"line_start":1008,"line_end":1008,"column_start":5,"column_end":46}},{"value":"/ [`Subscriber`]: crate::Subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":186971,"byte_end":187008,"line_start":1009,"line_end":1009,"column_start":5,"column_end":42}},{"value":"/ [current span]: Span::current","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187013,"byte_end":187046,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}},{"value":"/ [is disabled]: Span::is_disabled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187051,"byte_end":187087,"line_start":1011,"line_end":1011,"column_start":5,"column_end":41}},{"value":"/ [`INFO`]: crate::Level::INFO","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187092,"byte_end":187124,"line_start":1012,"line_end":1012,"column_start":5,"column_end":37}},{"value":"/ [`DEBUG`]: crate::Level::DEBUG","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187129,"byte_end":187163,"line_start":1013,"line_end":1013,"column_start":5,"column_end":39}},{"value":"/ [async tasks]: std::task","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187168,"byte_end":187196,"line_start":1014,"line_end":1014,"column_start":5,"column_end":33}},{"value":"/ [`instrument`]: crate::instrument::Instrument::instrument","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187201,"byte_end":187262,"line_start":1015,"line_end":1015,"column_start":5,"column_end":66}},{"value":"/ [`in_current_span`]: crate::instrument::Instrument::in_current_span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":187267,"byte_end":187338,"line_start":1016,"line_end":1016,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189640,"byte_end":189648,"line_start":1090,"line_end":1090,"column_start":12,"column_end":20},"name":"in_scope","qualname":"<Span>::in_scope","value":"pub fn in_scope<F: FnOnce() -> T, T>(&Self, F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes the given function in the context of this span.","sig":null,"attributes":[{"value":"/ Executes the given function in the context of this span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188453,"byte_end":188513,"line_start":1054,"line_end":1054,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188518,"byte_end":188521,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ If this span is enabled, then this function enters the span, invokes `f`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188526,"byte_end":188602,"line_start":1056,"line_end":1056,"column_start":5,"column_end":81}},{"value":"/ and then exits the span. If the span is disabled, `f` will still be","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188607,"byte_end":188678,"line_start":1057,"line_end":1057,"column_start":5,"column_end":76}},{"value":"/ invoked, but in the context of the currently-executing span (if there is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188683,"byte_end":188759,"line_start":1058,"line_end":1058,"column_start":5,"column_end":81}},{"value":"/ one).","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188764,"byte_end":188773,"line_start":1059,"line_end":1059,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188778,"byte_end":188781,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ Returns the result of evaluating `f`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188786,"byte_end":188827,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188832,"byte_end":188835,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188840,"byte_end":188854,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188859,"byte_end":188862,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188867,"byte_end":188874,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{trace, span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188879,"byte_end":188919,"line_start":1066,"line_end":1066,"column_start":5,"column_end":45}},{"value":"/ let my_span = span!(Level::TRACE, \"my_span\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188924,"byte_end":188973,"line_start":1067,"line_end":1067,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188978,"byte_end":188981,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ my_span.in_scope(|| {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":188986,"byte_end":189011,"line_start":1069,"line_end":1069,"column_start":5,"column_end":30}},{"value":"/     // this event occurs within the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189016,"byte_end":189061,"line_start":1070,"line_end":1070,"column_start":5,"column_end":50}},{"value":"/     trace!(\"i'm in the span!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189066,"byte_end":189101,"line_start":1071,"line_end":1071,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189106,"byte_end":189113,"line_start":1072,"line_end":1072,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189118,"byte_end":189121,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ // this event occurs outside the span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189126,"byte_end":189168,"line_start":1074,"line_end":1074,"column_start":5,"column_end":47}},{"value":"/ trace!(\"i'm not in the span!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189173,"byte_end":189208,"line_start":1075,"line_end":1075,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189213,"byte_end":189220,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189225,"byte_end":189228,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ Calling a function and returning the result:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189233,"byte_end":189281,"line_start":1078,"line_end":1078,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189286,"byte_end":189293,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{info_span, Level};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189298,"byte_end":189336,"line_start":1080,"line_end":1080,"column_start":5,"column_end":43}},{"value":"/ fn hello_world() -> String {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189341,"byte_end":189373,"line_start":1081,"line_end":1081,"column_start":5,"column_end":37}},{"value":"/     \"Hello world!\".to_owned()","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189378,"byte_end":189411,"line_start":1082,"line_end":1082,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189416,"byte_end":189421,"line_start":1083,"line_end":1083,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189426,"byte_end":189429,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ let span = info_span!(\"hello_world\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189434,"byte_end":189475,"line_start":1085,"line_end":1085,"column_start":5,"column_end":46}},{"value":"/ // the span will be entered for the duration of the call to","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189480,"byte_end":189543,"line_start":1086,"line_end":1086,"column_start":5,"column_end":68}},{"value":"/ // `hello_world`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189548,"byte_end":189569,"line_start":1087,"line_end":1087,"column_start":5,"column_end":26}},{"value":"/ let a_string = span.in_scope(hello_world);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189574,"byte_end":189620,"line_start":1088,"line_end":1088,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189625,"byte_end":189628,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189871,"byte_end":189876,"line_start":1097,"line_end":1097,"column_start":12,"column_end":17},"name":"field","qualname":"<Span>::field","value":"pub fn field<Q: ?Sized>(&Self, &Q) -> Option<field::Field> where\nQ: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`Field`](../field/struct.Field.html) for the field with the\n given `name`, if one exists,\n","sig":null,"attributes":[{"value":"/ Returns a [`Field`](../field/struct.Field.html) for the field with the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189748,"byte_end":189822,"line_start":1095,"line_end":1095,"column_start":5,"column_end":79}},{"value":"/ given `name`, if one exists,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":189827,"byte_end":189859,"line_start":1096,"line_end":1096,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190190,"byte_end":190199,"line_start":1107,"line_end":1107,"column_start":12,"column_end":21},"name":"has_field","qualname":"<Span>::has_field","value":"pub fn has_field<Q: ?Sized>(&Self, &Q) -> bool where Q: field::AsField","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Span` has a field for the given\n [`Field`](../field/struct.Field.html) or field name.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Span` has a field for the given","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190046,"byte_end":190103,"line_start":1104,"line_end":1104,"column_start":5,"column_end":62}},{"value":"/ [`Field`](../field/struct.Field.html) or field name.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190108,"byte_end":190164,"line_start":1105,"line_end":1105,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190169,"byte_end":190178,"line_start":1106,"line_end":1106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193417,"byte_end":193423,"line_start":1184,"line_end":1184,"column_start":12,"column_end":18},"name":"record","qualname":"<Span>::record","value":"pub fn record<Q: ?Sized, V>(&Self, &Q, &V) -> &Self where Q: field::AsField,\nV: field::Value","parent":null,"children":[],"decl_id":null,"docs":" Records that the field described by `field` has the value `value`.","sig":null,"attributes":[{"value":"/ Records that the field described by `field` has the value `value`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190327,"byte_end":190397,"line_start":1114,"line_end":1114,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190402,"byte_end":190405,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ This may be used with [`field::Empty`] to declare fields whose values","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190410,"byte_end":190483,"line_start":1116,"line_end":1116,"column_start":5,"column_end":78}},{"value":"/ are not known when the span is created, and record them later:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190488,"byte_end":190554,"line_start":1117,"line_end":1117,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190559,"byte_end":190566,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190571,"byte_end":190608,"line_start":1119,"line_end":1119,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190613,"byte_end":190616,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190621,"byte_end":190704,"line_start":1121,"line_end":1121,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190709,"byte_end":190743,"line_start":1122,"line_end":1122,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190748,"byte_end":190836,"line_start":1123,"line_end":1123,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190841,"byte_end":190844,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190849,"byte_end":190859,"line_start":1125,"line_end":1125,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190864,"byte_end":190867,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ // Now, record a value for parting as well.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190872,"byte_end":190919,"line_start":1127,"line_end":1127,"column_start":5,"column_end":52}},{"value":"/ // (note that the field name is passed as a string slice)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190924,"byte_end":190985,"line_start":1128,"line_end":1128,"column_start":5,"column_end":66}},{"value":"/ span.record(\"parting\", &\"goodbye world!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":190990,"byte_end":191036,"line_start":1129,"line_end":1129,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191041,"byte_end":191048,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ However, it may also be used to record a _new_ value for a field whose","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191053,"byte_end":191127,"line_start":1131,"line_end":1131,"column_start":5,"column_end":79}},{"value":"/ value was already recorded:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191132,"byte_end":191163,"line_start":1132,"line_end":1132,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191168,"byte_end":191175,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"/ use tracing::info_span;","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191180,"byte_end":191207,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ # fn do_something() -> Result<(), ()> { Err(()) }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191212,"byte_end":191265,"line_start":1135,"line_end":1135,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191270,"byte_end":191273,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ // Initially, let's assume that our attempt to do something is going okay...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191278,"byte_end":191358,"line_start":1137,"line_end":1137,"column_start":5,"column_end":85}},{"value":"/ let span = info_span!(\"doing_something\", is_okay = true);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191363,"byte_end":191424,"line_start":1138,"line_end":1138,"column_start":5,"column_end":66}},{"value":"/ let _e = span.enter();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191429,"byte_end":191455,"line_start":1139,"line_end":1139,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191460,"byte_end":191463,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ match do_something() {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191468,"byte_end":191494,"line_start":1141,"line_end":1141,"column_start":5,"column_end":31}},{"value":"/     Ok(something) => {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191499,"byte_end":191525,"line_start":1142,"line_end":1142,"column_start":5,"column_end":31}},{"value":"/         // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191530,"byte_end":191548,"line_start":1143,"line_end":1143,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191553,"byte_end":191562,"line_start":1144,"line_end":1144,"column_start":5,"column_end":14}},{"value":"/     Err(_) => {","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191567,"byte_end":191586,"line_start":1145,"line_end":1145,"column_start":5,"column_end":24}},{"value":"/         // Things are no longer okay!","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191591,"byte_end":191632,"line_start":1146,"line_end":1146,"column_start":5,"column_end":46}},{"value":"/         span.record(\"is_okay\", &false);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191637,"byte_end":191680,"line_start":1147,"line_end":1147,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191685,"byte_end":191694,"line_start":1148,"line_end":1148,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191699,"byte_end":191704,"line_start":1149,"line_end":1149,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191709,"byte_end":191716,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191721,"byte_end":191724,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ <pre class=\"ignore\" style=\"white-space:normal;font:inherit;\">","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191729,"byte_end":191794,"line_start":1152,"line_end":1152,"column_start":5,"column_end":70}},{"value":"/     <strong>Note</strong>: The fields associated with a span are part","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191799,"byte_end":191872,"line_start":1153,"line_end":1153,"column_start":5,"column_end":78}},{"value":"/     of its <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191877,"byte_end":191952,"line_start":1154,"line_end":1154,"column_start":5,"column_end":80}},{"value":"/     The <a href=\"../struct.Metadata.html\"><code>Metadata</code></a>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":191957,"byte_end":192028,"line_start":1155,"line_end":1155,"column_start":5,"column_end":76}},{"value":"/     describing a particular span is constructed statically when the span","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192033,"byte_end":192109,"line_start":1156,"line_end":1156,"column_start":5,"column_end":81}},{"value":"/     is created and cannot be extended later to add new fields. Therefore,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192114,"byte_end":192191,"line_start":1157,"line_end":1157,"column_start":5,"column_end":82}},{"value":"/     you cannot record a value for a field that was not specified when the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192196,"byte_end":192273,"line_start":1158,"line_end":1158,"column_start":5,"column_end":82}},{"value":"/     span was created:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192278,"byte_end":192303,"line_start":1159,"line_end":1159,"column_start":5,"column_end":30}},{"value":"/ </pre>","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192308,"byte_end":192318,"line_start":1160,"line_end":1160,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192323,"byte_end":192326,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192331,"byte_end":192338,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/ use tracing::{trace_span, field};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192343,"byte_end":192380,"line_start":1163,"line_end":1163,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192385,"byte_end":192388,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ // Create a span with two fields: `greeting`, with the value \"hello world\", and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192393,"byte_end":192476,"line_start":1165,"line_end":1165,"column_start":5,"column_end":88}},{"value":"/ // `parting`, without a value.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192481,"byte_end":192515,"line_start":1166,"line_end":1166,"column_start":5,"column_end":39}},{"value":"/ let span = trace_span!(\"my_span\", greeting = \"hello world\", parting = field::Empty);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192520,"byte_end":192608,"line_start":1167,"line_end":1167,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192613,"byte_end":192616,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ // ...","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192621,"byte_end":192631,"line_start":1169,"line_end":1169,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192636,"byte_end":192639,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ // Now, you try to record a value for a new field, `new_field`, which was not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192644,"byte_end":192725,"line_start":1171,"line_end":1171,"column_start":5,"column_end":86}},{"value":"/ // declared as `Empty` or populated when you created `span`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192730,"byte_end":192794,"line_start":1172,"line_end":1172,"column_start":5,"column_end":69}},{"value":"/ // You won't get any error, but the assignment will have no effect!","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192799,"byte_end":192870,"line_start":1173,"line_end":1173,"column_start":5,"column_end":76}},{"value":"/ span.record(\"new_field\", &\"interesting_value_you_really_need\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192875,"byte_end":192942,"line_start":1174,"line_end":1174,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192947,"byte_end":192950,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ // Instead, all fields that may be recorded after span creation should be declared up front,","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":192955,"byte_end":193051,"line_start":1176,"line_end":1176,"column_start":5,"column_end":101}},{"value":"/ // using field::Empty when a value is not known, as we did for `parting`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193056,"byte_end":193133,"line_start":1177,"line_end":1177,"column_start":5,"column_end":82}},{"value":"/ // This `record` call will indeed replace field::Empty with \"you will be remembered\".","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193138,"byte_end":193227,"line_start":1178,"line_end":1178,"column_start":5,"column_end":94}},{"value":"/ span.record(\"parting\", &\"you will be remembered\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193232,"byte_end":193286,"line_start":1179,"line_end":1179,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193291,"byte_end":193298,"line_start":1180,"line_end":1180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193303,"byte_end":193306,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ [`field::Empty`]: ../field/struct.Empty.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193311,"byte_end":193359,"line_start":1182,"line_end":1182,"column_start":5,"column_end":53}},{"value":"/ [`Metadata`]: ../struct.Metadata.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193364,"byte_end":193405,"line_start":1183,"line_end":1183,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193950,"byte_end":193960,"line_start":1203,"line_end":1203,"column_start":12,"column_end":22},"name":"record_all","qualname":"<Span>::record_all","value":"pub fn record_all(&Self, &field::ValueSet) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Records all the fields in the provided `ValueSet`.\n","sig":null,"attributes":[{"value":"/ Records all the fields in the provided `ValueSet`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":193884,"byte_end":193938,"line_start":1202,"line_end":1202,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194774,"byte_end":194785,"line_start":1230,"line_end":1230,"column_start":12,"column_end":23},"name":"is_disabled","qualname":"<Span>::is_disabled","value":"pub fn is_disabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was disabled by the subscriber and does not\n exist.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was disabled by the subscriber and does not","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194575,"byte_end":194650,"line_start":1223,"line_end":1223,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194655,"byte_end":194665,"line_start":1224,"line_end":1224,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194670,"byte_end":194673,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ See also [`is_none`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194678,"byte_end":194703,"line_start":1226,"line_end":1226,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194708,"byte_end":194711,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ [`is_none`]: #method.is_none","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194716,"byte_end":194748,"line_start":1228,"line_end":1228,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194753,"byte_end":194762,"line_start":1229,"line_end":1229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195343,"byte_end":195350,"line_start":1245,"line_end":1245,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Span>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this span was constructed by [`Span::none`] and is\n empty.","sig":null,"attributes":[{"value":"/ Returns `true` if this span was constructed by [`Span::none`] and is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194843,"byte_end":194915,"line_start":1234,"line_end":1234,"column_start":5,"column_end":77}},{"value":"/ empty.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194920,"byte_end":194930,"line_start":1235,"line_end":1235,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194935,"byte_end":194938,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ If `is_none` returns `true` for a given span, then [`is_disabled`] will","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":194943,"byte_end":195018,"line_start":1237,"line_end":1237,"column_start":5,"column_end":80}},{"value":"/ also return `true`. However, when a span is disabled by the subscriber","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195023,"byte_end":195097,"line_start":1238,"line_end":1238,"column_start":5,"column_end":79}},{"value":"/ rather than constructed by `Span::none`, this method will return","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195102,"byte_end":195170,"line_start":1239,"line_end":1239,"column_start":5,"column_end":73}},{"value":"/ `false`, while `is_disabled` will return `true`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195175,"byte_end":195227,"line_start":1240,"line_end":1240,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195232,"byte_end":195235,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ [`Span::none`]: #method.none","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195240,"byte_end":195272,"line_start":1242,"line_end":1242,"column_start":5,"column_end":37}},{"value":"/ [`is_disabled`]: #method.is_disabled","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195277,"byte_end":195317,"line_start":1243,"line_end":1243,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195322,"byte_end":195331,"line_start":1244,"line_end":1244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197376,"byte_end":197388,"line_start":1296,"line_end":1296,"column_start":12,"column_end":24},"name":"follows_from","qualname":"<Span>::follows_from","value":"pub fn follows_from<impl Into<Option<Id>>: Into<Option<Id>>>(&Self,\n                                                             impl Into<Option<Id>>)\n-> &Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the span with the given ID has an indirect causal\n relationship with this span.","sig":null,"attributes":[{"value":"/ Indicates that the span with the given ID has an indirect causal","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195429,"byte_end":195497,"line_start":1249,"line_end":1249,"column_start":5,"column_end":73}},{"value":"/ relationship with this span.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195502,"byte_end":195534,"line_start":1250,"line_end":1250,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195539,"byte_end":195542,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ This relationship differs somewhat from the parent-child relationship: a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195547,"byte_end":195623,"line_start":1252,"line_end":1252,"column_start":5,"column_end":81}},{"value":"/ span may have any number of prior spans, rather than a single one; and","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195628,"byte_end":195702,"line_start":1253,"line_end":1253,"column_start":5,"column_end":79}},{"value":"/ spans are not considered to be executing _inside_ of the spans they","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195707,"byte_end":195778,"line_start":1254,"line_end":1254,"column_start":5,"column_end":76}},{"value":"/ follow from. This means that a span may close even if subsequent spans","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195783,"byte_end":195857,"line_start":1255,"line_end":1255,"column_start":5,"column_end":79}},{"value":"/ that follow from it are still open, and time spent inside of a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195862,"byte_end":195928,"line_start":1256,"line_end":1256,"column_start":5,"column_end":71}},{"value":"/ subsequent span should not be included in the time its precedents were","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":195933,"byte_end":196007,"line_start":1257,"line_end":1257,"column_start":5,"column_end":79}},{"value":"/ executing. This is used to model causal relationships such as when a","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196012,"byte_end":196084,"line_start":1258,"line_end":1258,"column_start":5,"column_end":77}},{"value":"/ single future spawns several related background tasks, et cetera.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196089,"byte_end":196158,"line_start":1259,"line_end":1259,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196163,"byte_end":196166,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ If this span is disabled, or the resulting follows-from relationship","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196171,"byte_end":196243,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ would be invalid, this function will do nothing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196248,"byte_end":196300,"line_start":1262,"line_end":1262,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196305,"byte_end":196308,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196313,"byte_end":196327,"line_start":1264,"line_end":1264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196332,"byte_end":196335,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196340,"byte_end":196396,"line_start":1266,"line_end":1266,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196401,"byte_end":196408,"line_start":1267,"line_end":1267,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196413,"byte_end":196456,"line_start":1268,"line_end":1268,"column_start":5,"column_end":48}},{"value":"/ let span1 = span!(Level::INFO, \"span_1\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196461,"byte_end":196506,"line_start":1269,"line_end":1269,"column_start":5,"column_end":50}},{"value":"/ let span2 = span!(Level::DEBUG, \"span_2\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196511,"byte_end":196557,"line_start":1270,"line_end":1270,"column_start":5,"column_end":51}},{"value":"/ span2.follows_from(span1);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196562,"byte_end":196592,"line_start":1271,"line_end":1271,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196597,"byte_end":196604,"line_start":1272,"line_end":1272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196609,"byte_end":196612,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with the current span:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196617,"byte_end":196681,"line_start":1274,"line_end":1274,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196686,"byte_end":196693,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196698,"byte_end":196741,"line_start":1276,"line_end":1276,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196746,"byte_end":196790,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/ span.follows_from(Span::current());","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196795,"byte_end":196834,"line_start":1278,"line_end":1278,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196839,"byte_end":196846,"line_start":1279,"line_end":1279,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196851,"byte_end":196854,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with a `Span` reference:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196859,"byte_end":196925,"line_start":1281,"line_end":1281,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196930,"byte_end":196937,"line_start":1282,"line_end":1282,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196942,"byte_end":196985,"line_start":1283,"line_end":1283,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":196990,"byte_end":197034,"line_start":1284,"line_end":1284,"column_start":5,"column_end":49}},{"value":"/ let curr = Span::current();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197039,"byte_end":197070,"line_start":1285,"line_end":1285,"column_start":5,"column_end":36}},{"value":"/ span.follows_from(&curr);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197075,"byte_end":197104,"line_start":1286,"line_end":1286,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197109,"byte_end":197116,"line_start":1287,"line_end":1287,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197121,"byte_end":197124,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ Setting a `follows_from` relationship with an `Id`:","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197129,"byte_end":197184,"line_start":1289,"line_end":1289,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197189,"byte_end":197196,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # use tracing::{span, Id, Level, Span};","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197201,"byte_end":197244,"line_start":1291,"line_end":1291,"column_start":5,"column_end":48}},{"value":"/ let span = span!(Level::INFO, \"hello!\");","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197249,"byte_end":197293,"line_start":1292,"line_end":1292,"column_start":5,"column_end":49}},{"value":"/ let id = span.id();","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197298,"byte_end":197321,"line_start":1293,"line_end":1293,"column_start":5,"column_end":28}},{"value":"/ span.follows_from(id);","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197326,"byte_end":197352,"line_start":1294,"line_end":1294,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197357,"byte_end":197364,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197678,"byte_end":197680,"line_start":1306,"line_end":1306,"column_start":12,"column_end":14},"name":"id","qualname":"<Span>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197619,"byte_end":197666,"line_start":1305,"line_end":1305,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197823,"byte_end":197831,"line_start":1311,"line_end":1311,"column_start":12,"column_end":20},"name":"metadata","qualname":"<Span>::metadata","value":"pub fn metadata(&Self) -> Option<&'static Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Metadata`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Metadata`, if it is enabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":197758,"byte_end":197811,"line_start":1310,"line_end":1310,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199672,"byte_end":199687,"line_start":1354,"line_end":1354,"column_start":12,"column_end":27},"name":"with_subscriber","qualname":"<Span>::with_subscriber","value":"pub fn with_subscriber<T,\n                       impl FnOnce((&Id, &Dispatch)) -> T: FnOnce((&Id,\n                                                                   &Dispatch))\n                       -> T>(&Self, impl FnOnce((&Id, &Dispatch)) -> T)\n-> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Invokes a function with a reference to this span's ID and subscriber.","sig":null,"attributes":[{"value":"/ Invokes a function with a reference to this span's ID and subscriber.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199376,"byte_end":199449,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199454,"byte_end":199457,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ if this span is enabled, the provided function is called, and the result is returned.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199462,"byte_end":199551,"line_start":1351,"line_end":1351,"column_start":5,"column_end":94}},{"value":"/ If the span is disabled, the function is not called, and this method returns `None`","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199556,"byte_end":199643,"line_start":1352,"line_end":1352,"column_start":5,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199648,"byte_end":199660,"line_start":1353,"line_end":1353,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204389,"byte_end":204391,"line_start":1528,"line_end":1528,"column_start":12,"column_end":14},"name":"id","qualname":"<EnteredSpan>::id","value":"pub fn id(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Returns this span's `Id`, if it is enabled.\n","sig":null,"attributes":[{"value":"/ Returns this span's `Id`, if it is enabled.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204330,"byte_end":204377,"line_start":1527,"line_end":1527,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204550,"byte_end":204554,"line_start":1534,"line_end":1534,"column_start":12,"column_end":16},"name":"exit","qualname":"<EnteredSpan>::exit","value":"pub fn exit(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Exits this span, returning the underlying [`Span`].\n","sig":null,"attributes":[{"value":"/ Exits this span, returning the underlying [`Span`].","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204469,"byte_end":204524,"line_start":1532,"line_end":1532,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204529,"byte_end":204538,"line_start":1533,"line_end":1533,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subscriber","qualname":"::subscriber","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350}],"decl_id":null,"docs":" Collects and records trace data.\n","sig":null,"attributes":[{"value":"/ Collects and records trace data.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209098,"byte_end":209134,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209834,"byte_end":209846,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"with_default","qualname":"::subscriber::with_default","value":"pub fn with_default<T, S, impl FnOnce() -> T: FnOnce() ->\n                    T>(S, impl FnOnce() -> T) -> T where S: Subscriber +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the default for the duration of a closure.","sig":null,"attributes":[{"value":"/ Sets this subscriber as the default for the duration of a closure.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209293,"byte_end":209363,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209364,"byte_end":209367,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209368,"byte_end":209434,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209435,"byte_end":209509,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209510,"byte_end":209582,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209583,"byte_end":209613,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209614,"byte_end":209617,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209618,"byte_end":209656,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209657,"byte_end":209712,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209713,"byte_end":209755,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":209756,"byte_end":209779,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Function","id":{"krate":0,"index":346},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210639,"byte_end":210657,"line_start":39,"line_end":39,"column_start":8,"column_end":26},"name":"set_global_default","qualname":"::subscriber::set_global_default","value":"pub fn set_global_default<S>(S) -> Result<(), SetGlobalDefaultError> where\nS: Subscriber + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets this subscriber as the global default for the duration of the entire program.\n Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","sig":null,"attributes":[{"value":"/ Sets this subscriber as the global default for the duration of the entire program.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210024,"byte_end":210110,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ Will be used as a fallback if no thread-local subscriber has been set in a thread (using `with_default`.)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210111,"byte_end":210220,"line_start":28,"line_end":28,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210221,"byte_end":210224,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Can only be set once; subsequent attempts to set the global default will fail.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210225,"byte_end":210307,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ Returns whether the initialization was successful.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210308,"byte_end":210362,"line_start":31,"line_end":31,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210363,"byte_end":210366,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note: Libraries should *NOT* call `set_global_default()`! That will cause conflicts when","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210367,"byte_end":210459,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ executables try to set them later.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210460,"byte_end":210498,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210499,"byte_end":210502,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [span]: ../span/index.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210503,"byte_end":210533,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210534,"byte_end":210589,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: ../event/struct.Event.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210590,"byte_end":210631,"line_start":38,"line_end":38,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211546,"byte_end":211557,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"set_default","qualname":"::subscriber::set_default","value":"pub fn set_default<S>(S) -> DefaultGuard where S: Subscriber + Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Sets the subscriber as the default for the duration of the lifetime of the\n returned [`DefaultGuard`]","sig":null,"attributes":[{"value":"/ Sets the subscriber as the default for the duration of the lifetime of the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210843,"byte_end":210921,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ returned [`DefaultGuard`]","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210922,"byte_end":210951,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210952,"byte_end":210955,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The default subscriber is used when creating a new [`Span`] or","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":210956,"byte_end":211022,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/ [`Event`], _if no span is currently executing_. If a span is currently","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211023,"byte_end":211097,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ executing, new spans or events are dispatched to the subscriber that","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211098,"byte_end":211170,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ tagged that span, instead.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211171,"byte_end":211201,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211202,"byte_end":211205,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: ../span/struct.Span.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211206,"byte_end":211244,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ [`Subscriber`]: ../subscriber/trait.Subscriber.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211245,"byte_end":211300,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/ [`Event`]: :../event/struct.Event.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211301,"byte_end":211343,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ [`DefaultGuard`]: ../dispatcher/struct.DefaultGuard.html","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211344,"byte_end":211404,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211405,"byte_end":211428,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"must_use = \"Dropping the guard unregisters the subscriber.\"","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/subscriber.rs","byte_start":211476,"byte_end":211538,"line_start":60,"line_end":60,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":353},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39595,"byte_end":39610,"line_start":970,"line_end":970,"column_start":9,"column_end":24},"name":"__macro_support","qualname":"::__macro_support","value":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":393},{"krate":0,"index":396}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":381},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40327,"byte_end":40340,"line_start":988,"line_end":988,"column_start":16,"column_end":29},"name":"MacroCallsite","qualname":"::__macro_support::MacroCallsite","value":"MacroCallsite {  }","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384}],"decl_id":null,"docs":" Callsite implementation used by macro-generated code.","sig":null,"attributes":[{"value":"/ Callsite implementation used by macro-generated code.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39852,"byte_end":39909,"line_start":980,"line_end":980,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39914,"byte_end":39917,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39922,"byte_end":39970,"line_start":982,"line_end":982,"column_start":5,"column_end":53}},{"value":"/ This type, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39975,"byte_end":40048,"line_start":983,"line_end":983,"column_start":5,"column_end":78}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40053,"byte_end":40128,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40133,"byte_end":40209,"line_start":985,"line_end":985,"column_start":5,"column_end":81}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40214,"byte_end":40286,"line_start":986,"line_end":986,"column_start":5,"column_end":77}},{"value":"/ without warning.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40291,"byte_end":40311,"line_start":987,"line_end":987,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41002,"byte_end":41005,"line_start":1003,"line_end":1003,"column_start":22,"column_end":25},"name":"new","qualname":"<MacroCallsite>::new","value":"pub const fn new(&'static Metadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MacroCallsite` with the specified `Metadata`.","sig":null,"attributes":[{"value":"/ Returns a new `MacroCallsite` with the specified `Metadata`.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40484,"byte_end":40548,"line_start":995,"line_end":995,"column_start":9,"column_end":73}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40557,"byte_end":40560,"line_start":996,"line_end":996,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40569,"byte_end":40617,"line_start":997,"line_end":997,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40626,"byte_end":40701,"line_start":998,"line_end":998,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40710,"byte_end":40785,"line_start":999,"line_end":999,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40794,"byte_end":40870,"line_start":1000,"line_end":1000,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40879,"byte_end":40951,"line_start":1001,"line_end":1001,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40960,"byte_end":40980,"line_start":1002,"line_end":1002,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41940,"byte_end":41948,"line_start":1024,"line_end":1024,"column_start":16,"column_end":24},"name":"register","qualname":"<MacroCallsite>::register","value":"pub fn register(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Registers this callsite with the global callsite registry.","sig":null,"attributes":[{"value":"/ Registers this callsite with the global callsite registry.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41224,"byte_end":41286,"line_start":1011,"line_end":1011,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41295,"byte_end":41298,"line_start":1012,"line_end":1012,"column_start":9,"column_end":12}},{"value":"/ If the callsite is already registered, this does nothing.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41307,"byte_end":41368,"line_start":1013,"line_end":1013,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41377,"byte_end":41380,"line_start":1014,"line_end":1014,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41389,"byte_end":41437,"line_start":1015,"line_end":1015,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41446,"byte_end":41521,"line_start":1016,"line_end":1016,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41530,"byte_end":41605,"line_start":1017,"line_end":1017,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41614,"byte_end":41690,"line_start":1018,"line_end":1018,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41699,"byte_end":41771,"line_start":1019,"line_end":1019,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41780,"byte_end":41800,"line_start":1020,"line_end":1020,"column_start":9,"column_end":29}},{"value":"inline(never)","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41809,"byte_end":41825,"line_start":1021,"line_end":1021,"column_start":9,"column_end":25}},{"value":"cold","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":41917,"byte_end":41924,"line_start":1023,"line_end":1023,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42879,"byte_end":42887,"line_start":1044,"line_end":1044,"column_start":16,"column_end":24},"name":"interest","qualname":"<MacroCallsite>::interest","value":"pub fn interest(&'static Self) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Returns the callsite's cached Interest, or registers it for the\n first time if it has not yet been registered.","sig":null,"attributes":[{"value":"/ Returns the callsite's cached Interest, or registers it for the","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42288,"byte_end":42355,"line_start":1034,"line_end":1034,"column_start":9,"column_end":76}},{"value":"/ first time if it has not yet been registered.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42364,"byte_end":42413,"line_start":1035,"line_end":1035,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42422,"byte_end":42425,"line_start":1036,"line_end":1036,"column_start":9,"column_end":12}},{"value":"/ /!\\ WARNING: This is *not* a stable API! /!\\","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42434,"byte_end":42482,"line_start":1037,"line_end":1037,"column_start":9,"column_end":57}},{"value":"/ This method, and all code contained in the `__macro_support` module, is","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42491,"byte_end":42566,"line_start":1038,"line_end":1038,"column_start":9,"column_end":84}},{"value":"/ a *private* API of `tracing`. It is exposed publicly because it is used","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42575,"byte_end":42650,"line_start":1039,"line_end":1039,"column_start":9,"column_end":84}},{"value":"/ by the `tracing` macros, but it is not part of the stable versioned API.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42659,"byte_end":42735,"line_start":1040,"line_end":1040,"column_start":9,"column_end":85}},{"value":"/ Breaking changes to this module may occur in small-numbered versions","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42744,"byte_end":42816,"line_start":1041,"line_end":1041,"column_start":9,"column_end":81}},{"value":"/ without warning.","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42825,"byte_end":42845,"line_start":1042,"line_end":1042,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":42854,"byte_end":42863,"line_start":1043,"line_end":1043,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":43178,"byte_end":43188,"line_start":1053,"line_end":1053,"column_start":16,"column_end":26},"name":"is_enabled","qualname":"<MacroCallsite>::is_enabled","value":"pub fn is_enabled(&Self, Interest) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":43591,"byte_end":43604,"line_start":1066,"line_end":1066,"column_start":16,"column_end":29},"name":"disabled_span","qualname":"<MacroCallsite>::disabled_span","value":"pub fn disabled_span(&Self) -> crate::Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":43529,"byte_end":43538,"line_start":1064,"line_end":1064,"column_start":9,"column_end":18}},{"value":"cfg(not(feature = \"log\"))","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":43547,"byte_end":43575,"line_start":1065,"line_end":1065,"column_start":9,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":46647,"byte_end":46653,"line_start":1161,"line_end":1161,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132754,"byte_end":132759,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":133415,"byte_end":133420,"line_start":168,"line_end":168,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142315,"byte_end":142327,"line_start":266,"line_end":266,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142585,"byte_end":142586,"line_start":276,"line_end":276,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142599,"byte_end":142611,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143706,"byte_end":143718,"line_start":321,"line_end":321,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144118,"byte_end":144119,"line_start":334,"line_end":334,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144203,"byte_end":144215,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166084,"byte_end":166088,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199886,"byte_end":199890,"line_start":1361,"line_end":1361,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":200169,"byte_end":200173,"line_start":1372,"line_end":1372,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":200286,"byte_end":200290,"line_start":1378,"line_end":1378,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201229,"byte_end":201235,"line_start":1411,"line_end":1411,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201372,"byte_end":201378,"line_start":1417,"line_end":1417,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201495,"byte_end":201501,"line_start":1423,"line_end":1423,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201629,"byte_end":201635,"line_start":1429,"line_end":1429,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201786,"byte_end":201792,"line_start":1435,"line_end":1435,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201910,"byte_end":201914,"line_start":1441,"line_end":1441,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":202472,"byte_end":202477,"line_start":1466,"line_end":1466,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":203894,"byte_end":203899,"line_start":1503,"line_end":1503,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":203994,"byte_end":203999,"line_start":1509,"line_end":1509,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204102,"byte_end":204107,"line_start":1515,"line_end":1515,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204312,"byte_end":204323,"line_start":1526,"line_end":1526,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204764,"byte_end":204775,"line_start":1542,"line_end":1542,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204894,"byte_end":204901,"line_start":1551,"line_end":1551,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":205006,"byte_end":205017,"line_start":1558,"line_end":1558,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":206192,"byte_end":206206,"line_start":1590,"line_end":1590,"column_start":22,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40460,"byte_end":40473,"line_start":994,"line_end":994,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":43700,"byte_end":43713,"line_start":1071,"line_end":1071,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":44153,"byte_end":44166,"line_start":1087,"line_end":1087,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39398,"byte_end":39408,"line_start":960,"line_end":960,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":69}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39418,"byte_end":39423,"line_start":961,"line_end":961,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":95}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39479,"byte_end":39489,"line_start":963,"line_end":963,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":113}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39499,"byte_end":39512,"line_start":964,"line_end":964,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39522,"byte_end":39526,"line_start":965,"line_end":965,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":39559,"byte_end":39569,"line_start":967,"line_end":967,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":337}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132430,"byte_end":132436,"line_start":129,"line_end":129,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":399},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":132754,"byte_end":132759,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":20,"index":836},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/field.rs","byte_start":133415,"byte_end":133420,"line_start":168,"line_end":168,"column_start":32,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":20,"index":836},"to":{"krate":0,"index":399}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":133924,"byte_end":133929,"line_start":16,"line_end":16,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":137563,"byte_end":137568,"line_start":129,"line_end":129,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142315,"byte_end":142327,"line_start":266,"line_end":266,"column_start":28,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":443},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142585,"byte_end":142586,"line_start":276,"line_end":276,"column_start":31,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":158},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":142599,"byte_end":142611,"line_start":278,"line_end":278,"column_start":9,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":143706,"byte_end":143718,"line_start":321,"line_end":321,"column_start":28,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":400},"to":{"krate":2,"index":12915}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144118,"byte_end":144119,"line_start":334,"line_end":334,"column_start":35,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":173},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/instrument.rs","byte_start":144203,"byte_end":144215,"line_start":338,"line_end":338,"column_start":9,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":163178,"byte_end":163184,"line_start":335,"line_end":335,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":399},"to":{"krate":0,"index":239}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":166084,"byte_end":166088,"line_start":422,"line_end":422,"column_start":6,"column_end":10},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":199886,"byte_end":199890,"line_start":1361,"line_end":1361,"column_start":25,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":200169,"byte_end":200173,"line_start":1372,"line_end":1372,"column_start":15,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":200286,"byte_end":200290,"line_start":1378,"line_end":1378,"column_start":21,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":9553}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201229,"byte_end":201235,"line_start":1411,"line_end":1411,"column_start":29,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":45092},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201372,"byte_end":201378,"line_start":1417,"line_end":1417,"column_start":29,"column_end":35},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":45092},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201495,"byte_end":201501,"line_start":1423,"line_end":1423,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":45092},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201629,"byte_end":201635,"line_start":1429,"line_end":1429,"column_start":36,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":45092},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201786,"byte_end":201792,"line_start":1435,"line_end":1435,"column_start":36,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":45092},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":201910,"byte_end":201914,"line_start":1441,"line_end":1441,"column_start":15,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":202472,"byte_end":202477,"line_start":1466,"line_end":1466,"column_start":6,"column_end":11},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":203894,"byte_end":203899,"line_start":1503,"line_end":1503,"column_start":25,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2670}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":203994,"byte_end":203999,"line_start":1509,"line_end":1509,"column_start":15,"column_end":20},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":9760}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204102,"byte_end":204107,"line_start":1515,"line_end":1515,"column_start":16,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":2640}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204312,"byte_end":204323,"line_start":1526,"line_end":1526,"column_start":6,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204764,"byte_end":204775,"line_start":1542,"line_end":1542,"column_start":16,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3234}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":204894,"byte_end":204901,"line_start":1551,"line_end":1551,"column_start":19,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":205006,"byte_end":205017,"line_start":1558,"line_end":1558,"column_start":15,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":3258}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/span.rs","byte_start":206192,"byte_end":206206,"line_start":1590,"line_end":1590,"column_start":22,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":3031}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":40460,"byte_end":40473,"line_start":994,"line_end":994,"column_start":10,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":43700,"byte_end":43713,"line_start":1071,"line_end":1071,"column_start":23,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":381},"to":{"krate":20,"index":56}},{"span":{"file_name":"/home/ozz/.cargo/registry/src/github.com-1ecc6299db9ec823/tracing-0.1.32/src/lib.rs","byte_start":44153,"byte_end":44166,"line_start":1087,"line_end":1087,"column_start":25,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":9553}}]}